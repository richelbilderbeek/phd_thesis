%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: RUGR_FWN_Zernike_EN_Black.eps
%%Creator: Adobe Illustrator(R) 14.0
%%For: Jan Peter Birkner
%%CreationDate: 4/1/14
%%BoundingBox: 0 0 546 50
%%HiResBoundingBox: 0 0 545.6758 49.4014
%%CropBox: 0 0 545.6758 49.4014
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 14.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 14.0.0 x367 R agm 4.4890 ct 5.1541%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 12 8%%BeginData: 3018 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C457DA8A827A8A87DA8FD78FFA852272727527DFD7AFF2752275227FD%12FF7DFD08FF7DA8A8FD06FF7DA8FD18FFA8FD04FFA8FD07FFA8FD06FFA8%FD0DFFA8A8FD0DFFA8FD0AFF7D522752272752A8FD07FF7DA8FF537D5252%527D5252527D7D7D527D527D5352525253A8527D27FD0BFF7DA8FF7D527E%FD0552FD047D53527D527D277D7D527D7D27525252A852527E27FD04FFA8%53FFA852527D527D525252A852527D7D52525352277DA8525252A8FD07FF%5220277D272727A8FD06FF7D7DFFFF7D5252527D7D52527D525252A87D27%59A827A820FF52527D7DFD0AFFA87DFFFFFD047D527D7D7DA8A87DA8527D%597D527D7D7D527D527D527D52FF527D7D52A8FFFFFF28FFFFAF52A8597D%527D527DA87D52FD057D52A859FF527D52FD08FF5227F852272727A8FD05%FF7E52FFFFFFA87D7D7D597D7DA884FF7D7E7DA87D7E84A8A827FFFF7D7E%7DFD09FFA852A8FD05FFA8FFFFFFA87DFFFFFFA8FD16FF52A8FD04FFA8FD%07FF84FD05FFA8FFFFA8FFA8FD0AFFA87DFD0527A8FD05FF52FD0DFFA8A8%FD08FFA8FD0DFFA852A8FFFFFF7D52277D5259275253A827FD04527D2752%52A8FD0EFF52A8FD04FF27FD0952A85227525253275252527D27A8FD08FF%2727F827F8527DA8FD04FF27FD05FFA85252527D53A852527D535252A827%A852A85252A8FD0CFF527DFD04FFA87D7D7DA8527D7D7DA8FD067DA87D7D%A8FD0DFF7D7DFD04FFA87D7DA87D7D7DA87DA87DA853FD077D537D7DFD09%FFFD062752A8FFFFFF52A8FD05FF7E52A8527E287D52527D7D52527D527D%2752527DA8FD0BFF7D7DFD25FFA852FD25FF52272752272727FFFFFF527E%FD06FF7D27597DFF7E847D7D7D597D7D5227A87DA8597DA8FD0AFFA852FD%25FFA852A8FD26FF27277DA827FFFFFF7D7DFD08FFA8FD0CFFA8FD0FFFA8%52FD26FF52A8FD28FFA8A8A8FFFFFFA852FD26FF52A8FD25FF7D7DFD26FF%FF%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                                                  
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.2.2-c063 53.352624, 2008/07/30-18:05:41        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:MetadataDate>2014-04-01T09:37:38+02:00</xmp:MetadataDate>
         <xmp:ModifyDate>2014-04-01T09:37:38+02:00</xmp:ModifyDate>
         <xmp:CreateDate>2014-04-01T09:37:38+02:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CS4</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>24</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAGAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8AHfmlqXmm4GqeX9F1K8uf&#xA;Kdx/psErw6ldzqqQxs8TTek9YUaF6rJJ/uyrCgBwqyH8mPO93reux2XmHzA0x0yNbHRbRHu4TczK&#xA;0qtJcrIsTSyiK25fvCw+I/tKQqr3rAqH1HUrDTLGa/v50trO3UvNPIaKqjx/hiqhqOu6VpsVvLfX&#xA;AgS7f07fkrVdyhk4gAV5cVJpiqWW/wCYvke4uI7aHWbZriaJZ4IeVHkjeP1laNSKvWMchxriqEsv&#xA;zV8jz2EV3PqUVnzhSaWOYg+mJITcBWkTnET6YLfCxqOmKqy/md5AMkUZ120Vp1LxB34VVWZXarU2&#xA;Ro2Vv5SKHFULdfmx5OtzzFy1xacYSLq3UyryuLprRV4L+8FJUKluNK7V5bYqmUXn7yfIboDU4l+p&#xA;JLJdlw6CNYColLF1WnAuAfniqEg/MTRrzzLY6FpcUuoSXcc0s11FxWK3WBzG4l9Qo/IOOJULUYqy&#xA;rFXYqhb7VdOsHtkvJ1he9mW2tEb7UkrAkIoG5NAT7DfFUFqHmzQNO1WLS767S2upo1kUy/BH+9k9&#xA;KJS5ovKRwwVe/E4ql1z+ZnkqBVf9IrLFydZJIVaQR8ITcEuFBanpr2B7Y0qObzr5UW0e7bVIBbxz&#xA;PbO/LpPGpdoqdeYUfZ64qpJ598p8o4p9QitLqSD619UuD6cyxen6pZkPgm5xVQj/ADK8kyXJhGqR&#xA;LGIpZlunPCBlgr6nCRqBqKvKo2K7gnFURH5+8lySTxprVmWtjSf96oC1kWKpJNKc3Ar03xVDwfmX&#xA;5IlgNx+lYooOqPNyi5j01kqquFb7LjqOuNKj7vzf5XtNQOnXWqW0N8HSJrd5FVw8oBjBB6c6/DXr&#xA;iqJ0TWbDWtNi1KwcyWkzSLG5FK+lI0bEe3JDTFVR9U09NSi0tp1/SE0TTx2w3f0kIVpCB0XkwFT3&#xA;xVL73zp5Tsbma2u9WtYLm3LLNC8qh1KRiVgV6/DGQx9sVQF1+Z3kq3WJzqKSRySGJ5E6RMJYoD6o&#xA;biV/eToOn6saVF3XnvylbQJcyanAbR5JITco4eNZYXWJ0dlrRvUkVaeJGKoW+/M7yPZtMH1NJfq3&#xA;L6w0CSTKgT7fxRqwJXuFqfbGlV5PzC8lx3EkEmrQxyRLK8xfkqRiElZPUcjghBBFGO/bFV91558r&#xA;Wl9NZ3V/HA8EaStI5ohV19T4G/bolGbjsARiqdwTxTwRzxNyilUPG1CKqwqDQ79MVX4q+Oxp+laV&#xA;51XWtB1GLU47mG6e5t0E0c9pNc2hW5Vnf0UL/vX9MepQb1GFbTv8o/LetDzx5f1Q2sJs7dwJZI5E&#xA;jWFXhaP4Ldn9Y8pAAXKkUp7CNV9UkgAkmgG5JwKwmxB87avFqsoJ8paXLz0mI7Lf3UZp9ccftQRM&#xA;D6A6M37zsmKph+YB8pro8EnmXUDpdtDcpNa3aSmGRZ41ZhwZQT/dh67fZqe1cVYBYab+UVpPBFZ+&#xA;brqK7sFtFt4PUhMyLp6stuBE9sXbiL0n7J5cq9tiq9vLP5MNY3Wnpqpvp7LRvqbQC5USm0hAuoZV&#xA;4qimRYnHCWm6eIqcVRui2X5ZBrqGDzJJBdS6XLDfWsk9sjR2sym9kc0iUAhZjJVfh4+KjFVG0svy&#xA;da2traHzDI0FxFHpdjCZgCHtbyO6jaOsYYOl06cf2KngFpRQqmPlnQvJ3mK683m2v7a+h1oW8Uws&#xA;pnNxFFHH6aNJ6lSsrNHyZv2mHxVK4qyTRPIOmaPrbazBeXct5Kk6XHrNEUkNzN68rsqxpRi4FONA&#xA;KUpgVk2KoXVNTsNL0641HUJlt7O1QyTzN0VV/WfADcnFWO+V9M1HUtRbzZr0JhvJUMejaZJ1sbR9&#xA;6uN/9In2Mp/ZFEHQ1VS/z1LZJrMTXHkx/MUsMEU9tepEZSs0bytGgPpuqFDUhuVRz6UqcKpE0tt9&#xA;aVT+WytLvFDOsMiRmN5pbej0tjSkADNyHR6DvihE2N00umahFN5HmktIZIrm0sLmFzI93e3VxFcs&#xA;HdCAqRenICFHFWp22Uoe6uY7q4e4vvy3kuWeFok5xFysccNBFMSjcuYUJRFZdvtN8JKhfLcaXGsU&#xA;w/LW4fjDxjVIBVSLTeNl4dD/AHQIrtWoBopVZfF5D8l3sAubry9aJNdqJbiGSJWKu5WRgdqVDgHp&#xA;1GBKKk8i+TJRIsmiWTrLUujQRspqQT8JFBXiK4qvuPJflO5v31CfSLV72V0kluDEvN3ioI2cgfEV&#xA;4ilcVQ+qX2jeTdBSKwslXnJ6GlaRaqEM91MxZYolGw5MSzHooqx2BxVd5T8uXGmpcajqki3PmLVC&#xA;sup3S/YXiP3dtAD9mGEHio7mrH4mOKsR8y3Spq2oQ2vkJ9Qle6WO4vpISY7pJIKsyyKrEVI9Msfh&#xA;H7R6DChAzvpd5Nwvfyznmec8rgNEX5GVo5qcnjWMkzOS/NlAK1r0xVHSSJfz6Xp03kN4bQ3ULSXE&#xA;sJe3RbgLNI6hAkiusiKS0iADjvRvhCqB+v2qxyQR/lnL6guBHABAeDmcVeaR2hQempjQNUnYewqq&#xA;rLcK3Mp+XCxTzRo11O9v8D/u0BCosRZm/wBIkFGKnY13qoVRel38eva3bx6n5Gmgj1Hl691c27qb&#xA;YRRug9SR0Ct6giRV4U2O/TFXpWBLsVfNupfkhr+k+dLQQWgvfKv1pSk8cYmW2smdWkh+qJ8Rlccg&#xA;8tDVdx8Xw4VZJ+Un5IXHlfzhda287HTI1aHTllT0ppYyxYepH1AU8T8fxVUU+HAr0DzFHqHmTVj5&#xA;ZhSW30KBUk8wX1Gj9dX3SxgfavqDeZ1+ynw/abZVlcMMMEMcMKLHDEoSONAAqqooFAHQAYqxL80P&#xA;JWoeb9Ct9Ms7iC3MV0txIbiMyKwSN1C/tCnJxyBUhlqvfFWovyy0w2syz3lwLu4vU1Rp4PSiWG7W&#xA;2+qMbdDGwWMwfuwj8qL71JVQkX5N+W4FRbe9v4VjI9ILJCeAWw/RigFomPw2nwb/AD674qozfk5p&#xA;kUMkmn6ldLfqoNs916MsIkSwOmp6qJHGzJ9WPBgGHj9rfFUF5a/JDTLSx0wavcerf6TJJ9WntFWM&#xA;PE8iSgXHNG9WTnHvIFViNjXckqyfyr+X2leWr1ruzu7ud2thZlLlomX0xcSXIPwRo3ISXEhrX9r5&#xA;UCsoxV2KsNitbjzbrwvL6GSDy1os5/R1pMrRm9vIjT61IjUPowsKQqR8TfH2TFWZYq7FXYq7FXYq&#xA;7FXYq7FVK6uYrW2luZq+lAjSScVZ24qKmiqCzHwAFTirGPK+mahqeonzbrsLQXcqGPRdMk62No/U&#xA;uP8Alon2aU/siidjVVlmKuxV2KuxV2KuxV2KuxV2Kv8A/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:2D8A9630326011DE8DD1C7F7B7184272</stRef:instanceID>
            <stRef:documentID>uuid:2D8A962F326011DE8DD1C7F7B7184272</stRef:documentID>
            <stRef:originalDocumentID>uuid:2D8A962F326011DE8DD1C7F7B7184272</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
         <xmpMM:InstanceID>xmp.iid:F97F117407206811806F9D5AAFE709A2</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:F97F117407206811806F9D5AAFE709A2</xmpMM:DocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:F97F117407206811806F9D5AAFE709A2</stEvt:instanceID>
                  <stEvt:when>2014-04-01T09:37:38+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS4</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:OriginalDocumentID>uuid:2D8A962F326011DE8DD1C7F7B7184272</xmpMM:OriginalDocumentID>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:HasVisibleOverprint>True</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>529.999512</stDim:w>
            <stDim:h>59.333008</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>0.000000</xmpG:magenta>
                           <xmpG:yellow>0.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:cyan>72.656296</xmpG:cyan>
                           <xmpG:magenta>70.703102</xmpG:magenta>
                           <xmpG:yellow>63.671898</xmpG:yellow>
                           <xmpG:black>75.781296</xmpG:black>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>PANTONE 186 U</xmpG:swatchName>
                           <xmpG:type>SPOT</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>CMYK</xmpG:mode>
                           <xmpG:cyan>0.000000</xmpG:cyan>
                           <xmpG:magenta>100.000000</xmpG:magenta>
                           <xmpG:yellow>80.000000</xmpG:yellow>
                           <xmpG:black>0.000000</xmpG:black>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -49.4014 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 49.4014 li
545.676 49.4014 li
545.676 0 li
cp
clp
[1 0 0 1 0 0 ]ct
234.241 14.0059 mo
205.565 49.3994 li
207.844 49.4014 li
236.523 14.0039 li
234.241 14.0059 li
cp
true sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 1 nzopmsc
f
401.567 14.0059 mo
372.891 49.3994 li
375.17 49.4014 li
403.85 14.0039 li
401.567 14.0059 li
cp
f
gsave
0 49.4014 mo
545.676 49.4014 li
545.676 0 li
0 0 li
0 49.4014 li
cp
clp
245.254 14.4536 mo
246.134 14.4536 li
246.134 13.0942 246.193 11.9951 248.013 11.9951 cv
248.502 11.9951 248.942 12.0552 249.342 12.1348 cv
249.342 13.4541 li
248.502 13.4541 li
248.502 12.7944 248.373 12.5747 248.002 12.5747 cv
247.593 12.5747 247.353 12.8647 247.353 13.4644 cv
247.353 14.4536 li
248.662 14.4536 li
248.662 15.0332 li
247.353 15.0332 li
247.353 18.1719 li
247.353 18.6313 247.403 18.8013 247.913 18.8013 cv
248.442 18.8013 li
248.442 19.291 li
245.254 19.291 li
245.254 18.8013 li
245.574 18.8013 li
246.083 18.8013 246.134 18.6313 246.134 18.1719 cv
246.134 15.0332 li
245.254 15.0332 li
245.254 14.4536 li
cp
f
251.763 16.9624 mo
251.073 16.9624 250.453 17.2119 250.453 18.0215 cv
250.453 18.5015 250.783 18.8115 251.213 18.8115 cv
252.152 18.8115 252.313 17.8716 252.342 16.9624 cv
251.763 16.9624 li
cp
252.502 18.4517 mo
252.482 18.4517 li
252.092 19.2412 251.473 19.4512 250.763 19.4512 cv
249.904 19.4512 249.234 18.9512 249.234 18.0117 cv
249.234 17.1821 249.764 16.3828 251.473 16.3828 cv
252.342 16.3828 li
252.342 15.9229 li
252.342 15.1831 252.163 14.8735 251.443 14.8735 cv
250.763 14.8735 250.613 15.293 250.613 15.7632 cv
249.494 15.7632 li
249.494 15.0933 249.804 14.2939 251.423 14.2939 cv
253.032 14.2939 253.532 14.7437 253.532 15.7827 cv
253.532 16.2925 253.462 17.7319 253.462 18.1719 cv
253.462 18.6313 253.512 18.8013 254.021 18.8013 cv
254.281 18.8013 li
254.281 19.291 li
252.502 19.291 li
252.502 18.4517 li
cp
f
258.122 16.083 mo
258.102 15.2432 257.942 14.8735 257.343 14.8735 cv
256.583 14.8735 256.063 15.1733 256.063 16.8022 cv
256.063 18.4116 256.453 18.8115 257.163 18.8115 cv
257.912 18.8115 258.172 18.4517 258.222 17.5122 cv
259.182 17.5122 li
259.182 18.6113 258.822 19.4512 257.123 19.4512 cv
255.444 19.4512 254.724 18.3516 254.724 16.8726 cv
254.724 15.3931 255.444 14.2939 257.123 14.2939 cv
257.772 14.2939 258.452 14.3936 259.082 14.6138 cv
259.082 16.083 li
258.122 16.083 li
cp
f
264.062 18.3413 mo
264.042 18.3413 li
263.812 19.0112 263.182 19.4512 262.173 19.4512 cv
261.183 19.4512 260.583 19.001 260.583 18.0718 cv
260.583 15.7329 li
260.583 15.0635 260.534 14.9736 260.134 14.9736 cv
259.764 14.9736 li
259.764 14.4536 li
260.274 14.4536 261.163 14.3936 261.803 14.334 cv
261.803 17.792 li
261.803 18.3813 262.123 18.6714 262.692 18.6714 cv
263.542 18.6714 263.912 18.1318 263.912 17.1021 cv
263.912 15.7329 li
263.912 15.0635 263.862 14.9736 263.462 14.9736 cv
263.092 14.9736 li
263.092 14.4536 li
263.602 14.4536 264.491 14.3936 265.131 14.334 cv
265.131 18.1719 li
265.131 18.6313 265.181 18.8013 265.691 18.8013 cv
265.951 18.8013 li
265.951 19.291 li
264.062 19.291 li
264.062 18.3413 li
cp
f
266.434 12.1147 mo
266.944 12.1147 267.833 12.0552 268.473 11.9951 cv
268.473 18.1719 li
268.473 18.6313 268.523 18.8013 269.033 18.8013 cv
269.292 18.8013 li
269.292 19.291 li
266.374 19.291 li
266.374 18.8013 li
266.694 18.8013 li
267.204 18.8013 267.253 18.6313 267.253 18.1719 cv
267.253 13.394 li
267.253 12.7246 267.204 12.6348 266.804 12.6348 cv
266.434 12.6348 li
266.434 12.1147 li
cp
f
269.714 14.4536 mo
270.644 14.3438 270.863 14.0537 270.943 13.0444 cv
271.813 13.0444 li
271.813 14.4536 li
273.412 14.4536 li
273.412 15.0332 li
271.813 15.0332 li
271.813 18.2114 li
271.813 18.6416 271.973 18.8311 272.333 18.8311 cv
272.692 18.8311 272.852 18.6416 272.852 18.2114 cv
272.852 17.7017 li
273.691 17.7017 li
273.691 17.9219 li
273.691 18.9912 273.132 19.4707 272.163 19.4707 cv
271.153 19.4707 270.593 19.1411 270.593 17.9019 cv
270.593 15.0332 li
269.714 15.0332 li
269.714 14.4536 li
cp
f
274.863 15.5732 mo
274.663 15.0933 274.544 14.9434 274.304 14.9434 cv
274.154 14.9434 li
274.154 14.4536 li
276.633 14.4536 li
276.633 14.9434 li
276.263 14.9434 li
276.093 14.9434 275.993 14.9834 275.993 15.1235 cv
275.993 15.2734 276.063 15.4131 276.123 15.5732 cv
276.942 17.792 li
277.852 15.4629 li
277.912 15.3232 277.962 15.2031 277.962 15.1133 cv
277.962 14.9736 277.892 14.9434 277.722 14.9434 cv
277.302 14.9434 li
277.302 14.4536 li
279.421 14.4536 li
279.421 14.9434 li
279.201 14.9434 li
278.991 14.9434 278.901 15.1035 278.762 15.4331 cv
276.803 20.1206 li
276.742 20.2603 276.643 20.4902 276.643 20.6504 cv
276.643 20.8604 276.752 20.9502 277.143 20.9502 cv
277.472 20.9502 li
277.472 21.4399 li
274.793 21.4399 li
274.793 20.9502 li
275.243 20.9502 li
275.623 20.9502 275.753 20.7402 275.883 20.3906 cv
276.362 19.1709 li
274.863 15.5732 li
cp
f
285.093 18.8711 mo
285.912 18.8711 286.212 18.2314 286.212 16.8726 cv
286.212 15.5132 285.912 14.8735 285.093 14.8735 cv
284.272 14.8735 283.973 15.5132 283.973 16.8726 cv
283.973 18.2314 284.272 18.8711 285.093 18.8711 cv
cp
285.093 14.2939 mo
286.771 14.2939 287.491 15.3931 287.491 16.8726 cv
287.491 18.3516 286.771 19.4512 285.093 19.4512 cv
283.413 19.4512 282.693 18.3516 282.693 16.8726 cv
282.693 15.3931 283.413 14.2939 285.093 14.2939 cv
cp
f
288.054 14.4536 mo
288.934 14.4536 li
288.934 13.0942 288.993 11.9951 290.813 11.9951 cv
291.302 11.9951 291.742 12.0552 292.142 12.1348 cv
292.142 13.4541 li
291.302 13.4541 li
291.302 12.7944 291.172 12.5747 290.803 12.5747 cv
290.393 12.5747 290.152 12.8647 290.152 13.4644 cv
290.152 14.4536 li
291.462 14.4536 li
291.462 15.0332 li
290.152 15.0332 li
290.152 18.1719 li
290.152 18.6313 290.202 18.8013 290.712 18.8013 cv
291.242 18.8013 li
291.242 19.291 li
288.054 19.291 li
288.054 18.8013 li
288.374 18.8013 li
288.884 18.8013 288.934 18.6313 288.934 18.1719 cv
288.934 15.0332 li
288.054 15.0332 li
288.054 14.4536 li
cp
f
294.724 14.4536 mo
295.293 14.4536 296.183 14.3936 296.673 14.334 cv
296.673 15.4434 li
296.692 15.4434 li
297.032 14.6338 297.603 14.2939 298.422 14.2939 cv
299.121 14.2939 299.641 14.5635 299.781 15.1733 cv
299.801 15.1733 li
300.131 14.6235 300.671 14.2939 301.33 14.2939 cv
302.239 14.2939 302.919 14.6436 302.919 15.8428 cv
302.919 18.1719 li
302.919 18.6313 302.969 18.8013 303.479 18.8013 cv
303.738 18.8013 li
303.738 19.291 li
301.05 19.291 li
301.05 18.8013 li
301.141 18.8013 li
301.65 18.8013 301.7 18.6313 301.7 18.1719 cv
301.7 16.1025 li
301.7 15.3931 301.43 15.0732 300.99 15.0732 cv
300.371 15.0732 299.871 15.4531 299.871 16.4224 cv
299.871 18.1719 li
299.871 18.6313 299.921 18.8013 300.431 18.8013 cv
300.57 18.8013 li
300.57 19.291 li
298.002 19.291 li
298.002 18.8013 li
298.092 18.8013 li
298.602 18.8013 298.651 18.6313 298.651 18.1719 cv
298.651 16.1025 li
298.651 15.3931 298.382 15.0732 297.942 15.0732 cv
297.322 15.0732 296.822 15.6528 296.822 16.5327 cv
296.822 18.1719 li
296.822 18.6313 296.872 18.8013 297.382 18.8013 cv
297.522 18.8013 li
297.522 19.291 li
294.724 19.291 li
294.724 18.8013 li
295.044 18.8013 li
295.554 18.8013 295.604 18.6313 295.604 18.1719 cv
295.604 15.7329 li
295.604 15.0635 295.554 14.9736 295.153 14.9736 cv
294.724 14.9736 li
294.724 14.4536 li
cp
f
306.782 16.9624 mo
306.093 16.9624 305.473 17.2119 305.473 18.0215 cv
305.473 18.5015 305.803 18.8115 306.232 18.8115 cv
307.172 18.8115 307.332 17.8716 307.361 16.9624 cv
306.782 16.9624 li
cp
307.521 18.4517 mo
307.502 18.4517 li
307.112 19.2412 306.492 19.4512 305.782 19.4512 cv
304.923 19.4512 304.254 18.9512 304.254 18.0117 cv
304.254 17.1821 304.783 16.3828 306.492 16.3828 cv
307.361 16.3828 li
307.361 15.9229 li
307.361 15.1831 307.182 14.8735 306.462 14.8735 cv
305.782 14.8735 305.633 15.293 305.633 15.7632 cv
304.514 15.7632 li
304.514 15.0933 304.823 14.2939 306.442 14.2939 cv
308.052 14.2939 308.551 14.7437 308.551 15.7827 cv
308.551 16.2925 308.481 17.7319 308.481 18.1719 cv
308.481 18.6313 308.531 18.8013 309.041 18.8013 cv
309.301 18.8013 li
309.301 19.291 li
307.521 19.291 li
307.521 18.4517 li
cp
f
309.604 14.4536 mo
310.533 14.3438 310.753 14.0537 310.833 13.0444 cv
311.703 13.0444 li
311.703 14.4536 li
313.302 14.4536 li
313.302 15.0332 li
311.703 15.0332 li
311.703 18.2114 li
311.703 18.6416 311.862 18.8311 312.223 18.8311 cv
312.582 18.8311 312.742 18.6416 312.742 18.2114 cv
312.742 17.7017 li
313.582 17.7017 li
313.582 17.9219 li
313.582 18.9912 313.022 19.4707 312.053 19.4707 cv
311.043 19.4707 310.483 19.1411 310.483 17.9019 cv
310.483 15.0332 li
309.604 15.0332 li
309.604 14.4536 li
cp
f
314.104 12.1147 mo
314.613 12.1147 315.503 12.0552 316.143 11.9951 cv
316.143 15.0635 li
316.163 15.0635 li
316.433 14.6533 316.912 14.2939 317.752 14.2939 cv
318.751 14.2939 319.471 14.6533 319.471 15.8428 cv
319.471 18.1719 li
319.471 18.6313 319.521 18.8013 320.03 18.8013 cv
320.29 18.8013 li
320.29 19.291 li
317.552 19.291 li
317.552 18.8013 li
317.691 18.8013 li
318.201 18.8013 318.252 18.6313 318.252 18.1719 cv
318.252 16.1025 li
318.252 15.3931 317.912 15.0732 317.372 15.0732 cv
316.643 15.0732 316.143 15.5933 316.143 16.5327 cv
316.143 18.1719 li
316.143 18.6313 316.192 18.8013 316.702 18.8013 cv
316.842 18.8013 li
316.842 19.291 li
314.044 19.291 li
314.044 18.8013 li
314.363 18.8013 li
314.873 18.8013 314.923 18.6313 314.923 18.1719 cv
314.923 13.394 li
314.923 12.7246 314.873 12.6348 314.474 12.6348 cv
314.104 12.6348 li
314.104 12.1147 li
cp
f
324.372 16.3726 mo
324.372 15.5532 324.162 14.8433 323.303 14.8433 cv
322.442 14.8433 322.193 15.5332 322.193 16.3726 cv
324.372 16.3726 li
cp
322.193 16.9521 mo
322.193 17.6318 322.203 18.8711 323.433 18.8711 cv
324.162 18.8711 324.462 18.4814 324.472 17.7319 cv
325.491 17.7319 li
325.481 18.5913 324.981 19.4512 323.313 19.4512 cv
321.633 19.4512 320.914 18.3516 320.914 16.8726 cv
320.914 15.3931 321.633 14.2939 323.313 14.2939 cv
324.922 14.2939 325.591 15.0435 325.591 16.7227 cv
325.591 16.9521 li
322.193 16.9521 li
cp
f
326.273 14.4536 mo
326.844 14.4536 327.732 14.3936 328.223 14.334 cv
328.223 15.4434 li
328.242 15.4434 li
328.582 14.6338 329.152 14.2939 329.972 14.2939 cv
330.671 14.2939 331.191 14.5635 331.331 15.1733 cv
331.351 15.1733 li
331.681 14.6235 332.221 14.2939 332.88 14.2939 cv
333.79 14.2939 334.469 14.6436 334.469 15.8428 cv
334.469 18.1719 li
334.469 18.6313 334.52 18.8013 335.029 18.8013 cv
335.289 18.8013 li
335.289 19.291 li
332.601 19.291 li
332.601 18.8013 li
332.69 18.8013 li
333.2 18.8013 333.25 18.6313 333.25 18.1719 cv
333.25 16.1025 li
333.25 15.3931 332.98 15.0732 332.54 15.0732 cv
331.921 15.0732 331.421 15.4531 331.421 16.4224 cv
331.421 18.1719 li
331.421 18.6313 331.471 18.8013 331.98 18.8013 cv
332.12 18.8013 li
332.12 19.291 li
329.552 19.291 li
329.552 18.8013 li
329.642 18.8013 li
330.151 18.8013 330.201 18.6313 330.201 18.1719 cv
330.201 16.1025 li
330.201 15.3931 329.932 15.0732 329.492 15.0732 cv
328.872 15.0732 328.373 15.6528 328.373 16.5327 cv
328.373 18.1719 li
328.373 18.6313 328.423 18.8013 328.933 18.8013 cv
329.072 18.8013 li
329.072 19.291 li
326.273 19.291 li
326.273 18.8013 li
326.594 18.8013 li
327.104 18.8013 327.153 18.6313 327.153 18.1719 cv
327.153 15.7329 li
327.153 15.0635 327.104 14.9736 326.703 14.9736 cv
326.273 14.9736 li
326.273 14.4536 li
cp
f
338.332 16.9624 mo
337.643 16.9624 337.022 17.2119 337.022 18.0215 cv
337.022 18.5015 337.353 18.8115 337.782 18.8115 cv
338.722 18.8115 338.882 17.8716 338.912 16.9624 cv
338.332 16.9624 li
cp
339.071 18.4517 mo
339.052 18.4517 li
338.662 19.2412 338.042 19.4512 337.333 19.4512 cv
336.473 19.4512 335.804 18.9512 335.804 18.0117 cv
335.804 17.1821 336.333 16.3828 338.042 16.3828 cv
338.912 16.3828 li
338.912 15.9229 li
338.912 15.1831 338.731 14.8735 338.013 14.8735 cv
337.333 14.8735 337.183 15.293 337.183 15.7632 cv
336.063 15.7632 li
336.063 15.0933 336.373 14.2939 337.992 14.2939 cv
339.602 14.2939 340.102 14.7437 340.102 15.7827 cv
340.102 16.2925 340.031 17.7319 340.031 18.1719 cv
340.031 18.6313 340.081 18.8013 340.591 18.8013 cv
340.851 18.8013 li
340.851 19.291 li
339.071 19.291 li
339.071 18.4517 li
cp
f
341.154 14.4536 mo
342.083 14.3438 342.304 14.0537 342.383 13.0444 cv
343.253 13.0444 li
343.253 14.4536 li
344.852 14.4536 li
344.852 15.0332 li
343.253 15.0332 li
343.253 18.2114 li
343.253 18.6416 343.413 18.8311 343.772 18.8311 cv
344.132 18.8311 344.292 18.6416 344.292 18.2114 cv
344.292 17.7017 li
345.132 17.7017 li
345.132 17.9219 li
345.132 18.9912 344.572 19.4707 343.603 19.4707 cv
342.593 19.4707 342.033 19.1411 342.033 17.9019 cv
342.033 15.0332 li
341.154 15.0332 li
341.154 14.4536 li
cp
f
347.063 11.9951 mo
347.533 11.9951 347.793 12.3149 347.793 12.7446 cv
347.793 13.1743 347.533 13.4941 347.063 13.4941 cv
346.593 13.4941 346.333 13.1743 346.333 12.7446 cv
346.333 12.3149 346.593 11.9951 347.063 11.9951 cv
cp
345.653 14.4536 mo
346.163 14.4536 347.053 14.3936 347.692 14.334 cv
347.692 18.1719 li
347.692 18.6313 347.742 18.8013 348.252 18.8013 cv
348.512 18.8013 li
348.512 19.291 li
345.594 19.291 li
345.594 18.8013 li
345.914 18.8013 li
346.423 18.8013 346.474 18.6313 346.474 18.1719 cv
346.474 15.7329 li
346.474 15.0635 346.423 14.9736 346.023 14.9736 cv
345.653 14.9736 li
345.653 14.4536 li
cp
f
352.352 16.083 mo
352.332 15.2432 352.172 14.8735 351.572 14.8735 cv
350.813 14.8735 350.293 15.1733 350.293 16.8022 cv
350.293 18.4116 350.683 18.8115 351.393 18.8115 cv
352.142 18.8115 352.402 18.4517 352.452 17.5122 cv
353.411 17.5122 li
353.411 18.6113 353.052 19.4512 351.353 19.4512 cv
349.674 19.4512 348.954 18.3516 348.954 16.8726 cv
348.954 15.3931 349.674 14.2939 351.353 14.2939 cv
352.002 14.2939 352.682 14.3936 353.312 14.6138 cv
353.312 16.083 li
352.352 16.083 li
cp
f
354.254 17.7319 mo
355.093 17.7319 li
355.093 18.4414 355.283 18.9014 355.973 18.9014 cv
356.612 18.9014 357.032 18.6313 357.032 18.1719 cv
357.032 17.8018 356.893 17.582 355.973 17.3022 cv
354.813 16.9521 354.254 16.5327 354.254 15.7529 cv
354.254 14.8433 355.073 14.2939 356.253 14.2939 cv
357.012 14.2939 357.682 14.4336 357.972 14.5635 cv
357.972 15.9326 li
357.132 15.9326 li
357.132 15.1631 356.942 14.8433 356.223 14.8433 cv
355.763 14.8433 355.473 15.0332 355.473 15.4331 cv
355.473 15.813 355.732 16.083 356.192 16.2329 cv
357.012 16.5024 li
357.872 16.7822 358.251 17.0723 358.251 17.832 cv
358.251 19.001 357.142 19.4512 356.093 19.4512 cv
355.273 19.4512 354.543 19.251 354.254 19.1309 cv
354.254 17.7319 li
cp
f
364.332 16.9624 mo
363.643 16.9624 363.023 17.2119 363.023 18.0215 cv
363.023 18.5015 363.353 18.8115 363.782 18.8115 cv
364.722 18.8115 364.882 17.8716 364.912 16.9624 cv
364.332 16.9624 li
cp
365.072 18.4517 mo
365.052 18.4517 li
364.662 19.2412 364.043 19.4512 363.333 19.4512 cv
362.474 19.4512 361.804 18.9512 361.804 18.0117 cv
361.804 17.1821 362.333 16.3828 364.043 16.3828 cv
364.912 16.3828 li
364.912 15.9229 li
364.912 15.1831 364.732 14.8735 364.013 14.8735 cv
363.333 14.8735 363.183 15.293 363.183 15.7632 cv
362.063 15.7632 li
362.063 15.0933 362.373 14.2939 363.992 14.2939 cv
365.602 14.2939 366.102 14.7437 366.102 15.7827 cv
366.102 16.2925 366.031 17.7319 366.031 18.1719 cv
366.031 18.6313 366.081 18.8013 366.591 18.8013 cv
366.851 18.8013 li
366.851 19.291 li
365.072 19.291 li
365.072 18.4517 li
cp
f
367.334 14.4536 mo
367.844 14.4536 368.733 14.3936 369.223 14.334 cv
369.223 15.4434 li
369.243 15.4434 li
369.582 14.6338 370.152 14.2939 370.962 14.2939 cv
371.941 14.2939 372.701 14.7334 372.701 15.813 cv
372.701 18.1719 li
372.701 18.6313 372.751 18.8013 373.261 18.8013 cv
373.521 18.8013 li
373.521 19.291 li
370.782 19.291 li
370.782 18.8013 li
370.922 18.8013 li
371.432 18.8013 371.481 18.6313 371.481 18.1719 cv
371.481 16.1025 li
371.481 15.3931 371.142 15.0732 370.602 15.0732 cv
369.872 15.0732 369.373 15.5933 369.373 16.5327 cv
369.373 18.1719 li
369.373 18.6313 369.423 18.8013 369.933 18.8013 cv
370.072 18.8013 li
370.072 19.291 li
367.273 19.291 li
367.273 18.8013 li
367.594 18.8013 li
368.104 18.8013 368.153 18.6313 368.153 18.1719 cv
368.153 15.7329 li
368.153 15.0635 368.104 14.9736 367.703 14.9736 cv
367.334 14.9736 li
367.334 14.4536 li
cp
f
376.522 15.0132 mo
375.822 15.0132 375.423 15.4731 375.423 16.8423 cv
375.423 18.1519 375.833 18.7314 376.563 18.7314 cv
377.142 18.7314 377.632 18.2417 377.632 17.0122 cv
377.632 15.5933 377.212 15.0132 376.522 15.0132 cv
cp
377.722 18.5112 mo
377.701 18.5112 li
377.441 19.1309 376.912 19.4512 376.152 19.4512 cv
374.963 19.4512 374.144 18.5815 374.144 16.9424 cv
374.144 15.0635 374.913 14.2939 376.143 14.2939 cv
376.853 14.2939 377.302 14.6436 377.571 15.0835 cv
377.592 15.0835 li
377.592 13.394 li
377.592 12.7246 377.542 12.6348 377.142 12.6348 cv
376.772 12.6348 li
376.772 12.1147 li
377.282 12.1147 378.171 12.0552 378.811 11.9951 cv
378.811 18.1719 li
378.811 18.6313 378.861 18.8013 379.371 18.8013 cv
379.69 18.8013 li
379.69 19.291 li
377.722 19.291 li
377.722 18.5112 li
cp
f
245.314 26.4541 mo
245.824 26.4541 246.713 26.3936 247.203 26.334 cv
247.203 27.4434 li
247.223 27.4434 li
247.563 26.6338 248.132 26.2939 248.942 26.2939 cv
249.921 26.2939 250.681 26.7334 250.681 27.8125 cv
250.681 30.1719 li
250.681 30.6318 250.731 30.8018 251.241 30.8018 cv
251.5 30.8018 li
251.5 31.291 li
248.762 31.291 li
248.762 30.8018 li
248.902 30.8018 li
249.412 30.8018 249.462 30.6318 249.462 30.1719 cv
249.462 28.1025 li
249.462 27.3936 249.122 27.0732 248.583 27.0732 cv
247.853 27.0732 247.353 27.5928 247.353 28.5322 cv
247.353 30.1719 li
247.353 30.6318 247.403 30.8018 247.913 30.8018 cv
248.053 30.8018 li
248.053 31.291 li
245.254 31.291 li
245.254 30.8018 li
245.574 30.8018 li
246.083 30.8018 246.134 30.6318 246.134 30.1719 cv
246.134 27.7334 li
246.134 27.0635 246.083 26.9736 245.684 26.9736 cv
245.314 26.9736 li
245.314 26.4541 li
cp
f
254.542 28.9619 mo
253.853 28.9619 253.233 29.2119 253.233 30.0215 cv
253.233 30.501 253.563 30.8115 253.993 30.8115 cv
254.933 30.8115 255.092 29.8721 255.122 28.9619 cv
254.542 28.9619 li
cp
255.282 30.4512 mo
255.262 30.4512 li
254.873 31.2412 254.253 31.4512 253.543 31.4512 cv
252.684 31.4512 252.014 30.9512 252.014 30.0117 cv
252.014 29.1826 252.544 28.3828 254.253 28.3828 cv
255.122 28.3828 li
255.122 27.9229 li
255.122 27.1836 254.942 26.873 254.223 26.873 cv
253.543 26.873 253.393 27.293 253.393 27.7627 cv
252.274 27.7627 li
252.274 27.0938 252.583 26.2939 254.203 26.2939 cv
255.812 26.2939 256.312 26.7432 256.312 27.7832 cv
256.312 28.293 256.242 29.7314 256.242 30.1719 cv
256.242 30.6318 256.292 30.8018 256.801 30.8018 cv
257.061 30.8018 li
257.061 31.291 li
255.282 31.291 li
255.282 30.4512 li
cp
f
257.364 26.4541 mo
258.294 26.3438 258.514 26.0537 258.594 25.0444 cv
259.463 25.0444 li
259.463 26.4541 li
261.063 26.4541 li
261.063 27.0332 li
259.463 27.0332 li
259.463 30.2119 li
259.463 30.6416 259.623 30.8311 259.983 30.8311 cv
260.343 30.8311 260.503 30.6416 260.503 30.2119 cv
260.503 29.7021 li
261.342 29.7021 li
261.342 29.9219 li
261.342 30.9912 260.783 31.4707 259.813 31.4707 cv
258.804 31.4707 258.244 31.1406 258.244 29.9014 cv
258.244 27.0332 li
257.364 27.0332 li
257.364 26.4541 li
cp
f
266.162 30.3418 mo
266.142 30.3418 li
265.912 31.0107 265.282 31.4512 264.273 31.4512 cv
263.283 31.4512 262.684 31.001 262.684 30.0713 cv
262.684 27.7334 li
262.684 27.0635 262.634 26.9736 262.234 26.9736 cv
261.864 26.9736 li
261.864 26.4541 li
262.374 26.4541 263.264 26.3936 263.903 26.334 cv
263.903 29.792 li
263.903 30.3818 264.223 30.6709 264.792 30.6709 cv
265.642 30.6709 266.012 30.1318 266.012 29.1025 cv
266.012 27.7334 li
266.012 27.0635 265.962 26.9736 265.562 26.9736 cv
265.192 26.9736 li
265.192 26.4541 li
265.702 26.4541 266.592 26.3936 267.231 26.334 cv
267.231 30.1719 li
267.231 30.6318 267.281 30.8018 267.791 30.8018 cv
268.051 30.8018 li
268.051 31.291 li
266.162 31.291 li
266.162 30.3418 li
cp
f
268.474 26.4541 mo
269.044 26.4541 269.934 26.3936 270.423 26.334 cv
270.423 27.4434 li
270.443 27.4434 li
270.783 26.6338 271.353 26.2939 272.162 26.2939 cv
272.452 26.2939 272.732 26.334 272.962 26.4141 cv
272.962 27.8525 li
272.002 27.8525 li
271.992 27.3535 271.882 27.0732 271.493 27.0732 cv
271.033 27.0732 270.573 27.6934 270.573 28.5322 cv
270.573 30.1719 li
270.573 30.6318 270.623 30.8018 271.133 30.8018 cv
271.663 30.8018 li
271.663 31.291 li
268.474 31.291 li
268.474 30.8018 li
268.794 30.8018 li
269.304 30.8018 269.354 30.6318 269.354 30.1719 cv
269.354 27.7334 li
269.354 27.0635 269.304 26.9736 268.904 26.9736 cv
268.474 26.9736 li
268.474 26.4541 li
cp
f
275.795 28.9619 mo
275.105 28.9619 274.485 29.2119 274.485 30.0215 cv
274.485 30.501 274.815 30.8115 275.245 30.8115 cv
276.185 30.8115 276.345 29.8721 276.375 28.9619 cv
275.795 28.9619 li
cp
276.534 30.4512 mo
276.515 30.4512 li
276.125 31.2412 275.505 31.4512 274.796 31.4512 cv
273.936 31.4512 273.267 30.9512 273.267 30.0117 cv
273.267 29.1826 273.796 28.3828 275.505 28.3828 cv
276.375 28.3828 li
276.375 27.9229 li
276.375 27.1836 276.194 26.873 275.475 26.873 cv
274.796 26.873 274.646 27.293 274.646 27.7627 cv
273.526 27.7627 li
273.526 27.0938 273.836 26.2939 275.455 26.2939 cv
277.064 26.2939 277.563 26.7432 277.563 27.7832 cv
277.563 28.293 277.494 29.7314 277.494 30.1719 cv
277.494 30.6318 277.544 30.8018 278.054 30.8018 cv
278.313 30.8018 li
278.313 31.291 li
276.534 31.291 li
276.534 30.4512 li
cp
f
278.796 24.1147 mo
279.306 24.1147 280.195 24.0552 280.835 23.9951 cv
280.835 30.1719 li
280.835 30.6318 280.885 30.8018 281.395 30.8018 cv
281.654 30.8018 li
281.654 31.291 li
278.736 31.291 li
278.736 30.8018 li
279.057 30.8018 li
279.565 30.8018 279.616 30.6318 279.616 30.1719 cv
279.616 25.394 li
279.616 24.7246 279.565 24.6348 279.166 24.6348 cv
278.796 24.6348 li
278.796 24.1147 li
cp
f
285.176 29.7314 mo
286.016 29.7314 li
286.016 30.4414 286.206 30.9014 286.896 30.9014 cv
287.535 30.9014 287.955 30.6318 287.955 30.1719 cv
287.955 29.8018 287.814 29.582 286.896 29.3018 cv
285.736 28.9521 285.176 28.5322 285.176 27.7529 cv
285.176 26.8438 285.996 26.2939 287.175 26.2939 cv
287.935 26.2939 288.604 26.4336 288.895 26.5635 cv
288.895 27.9326 li
288.055 27.9326 li
288.055 27.1631 287.864 26.8438 287.146 26.8438 cv
286.686 26.8438 286.396 27.0332 286.396 27.4336 cv
286.396 27.8125 286.655 28.083 287.115 28.2324 cv
287.935 28.5029 li
288.794 28.7822 289.174 29.0723 289.174 29.832 cv
289.174 31.001 288.064 31.4512 287.016 31.4512 cv
286.195 31.4512 285.466 31.251 285.176 31.1309 cv
285.176 29.7314 li
cp
f
293.274 28.083 mo
293.255 27.2432 293.095 26.873 292.495 26.873 cv
291.735 26.873 291.216 27.1729 291.216 28.8027 cv
291.216 30.4111 291.605 30.8115 292.315 30.8115 cv
293.064 30.8115 293.324 30.4512 293.374 29.5117 cv
294.334 29.5117 li
294.334 30.6113 293.974 31.4512 292.275 31.4512 cv
290.596 31.4512 289.876 30.3516 289.876 28.8721 cv
289.876 27.3936 290.596 26.2939 292.275 26.2939 cv
292.925 26.2939 293.604 26.3936 294.234 26.6133 cv
294.234 28.083 li
293.274 28.083 li
cp
f
296.325 23.9951 mo
296.795 23.9951 297.055 24.3149 297.055 24.7446 cv
297.055 25.1743 296.795 25.4941 296.325 25.4941 cv
295.855 25.4941 295.596 25.1743 295.596 24.7446 cv
295.596 24.3149 295.855 23.9951 296.325 23.9951 cv
cp
294.916 26.4541 mo
295.426 26.4541 296.315 26.3936 296.955 26.334 cv
296.955 30.1719 li
296.955 30.6318 297.005 30.8018 297.515 30.8018 cv
297.774 30.8018 li
297.774 31.291 li
294.856 31.291 li
294.856 30.8018 li
295.176 30.8018 li
295.686 30.8018 295.736 30.6318 295.736 30.1719 cv
295.736 27.7334 li
295.736 27.0635 295.686 26.9736 295.286 26.9736 cv
294.916 26.9736 li
294.916 26.4541 li
cp
f
301.854 28.373 mo
301.854 27.5527 301.645 26.8438 300.785 26.8438 cv
299.926 26.8438 299.676 27.5332 299.676 28.373 cv
301.854 28.373 li
cp
299.676 28.9521 mo
299.676 29.6318 299.686 30.8711 300.915 30.8711 cv
301.645 30.8711 301.944 30.4814 301.954 29.7314 cv
302.974 29.7314 li
302.964 30.5918 302.464 31.4512 300.795 31.4512 cv
299.116 31.4512 298.396 30.3516 298.396 28.8721 cv
298.396 27.3936 299.116 26.2939 300.795 26.2939 cv
302.404 26.2939 303.073 27.043 303.073 28.7227 cv
303.073 28.9521 li
299.676 28.9521 li
cp
f
303.816 26.4541 mo
304.326 26.4541 305.216 26.3936 305.705 26.334 cv
305.705 27.4434 li
305.726 27.4434 li
306.065 26.6338 306.635 26.2939 307.444 26.2939 cv
308.424 26.2939 309.184 26.7334 309.184 27.8125 cv
309.184 30.1719 li
309.184 30.6318 309.233 30.8018 309.743 30.8018 cv
310.003 30.8018 li
310.003 31.291 li
307.265 31.291 li
307.265 30.8018 li
307.404 30.8018 li
307.914 30.8018 307.964 30.6318 307.964 30.1719 cv
307.964 28.1025 li
307.964 27.3936 307.624 27.0732 307.085 27.0732 cv
306.354 27.0732 305.855 27.5928 305.855 28.5322 cv
305.855 30.1719 li
305.855 30.6318 305.905 30.8018 306.415 30.8018 cv
306.555 30.8018 li
306.555 31.291 li
303.756 31.291 li
303.756 30.8018 li
304.076 30.8018 li
304.586 30.8018 304.636 30.6318 304.636 30.1719 cv
304.636 27.7334 li
304.636 27.0635 304.586 26.9736 304.187 26.9736 cv
303.816 26.9736 li
303.816 26.4541 li
cp
f
313.845 28.083 mo
313.824 27.2432 313.664 26.873 313.064 26.873 cv
312.306 26.873 311.785 27.1729 311.785 28.8027 cv
311.785 30.4111 312.175 30.8115 312.885 30.8115 cv
313.635 30.8115 313.895 30.4512 313.944 29.5117 cv
314.903 29.5117 li
314.903 30.6113 314.544 31.4512 312.845 31.4512 cv
311.166 31.4512 310.446 30.3516 310.446 28.8721 cv
310.446 27.3936 311.166 26.2939 312.845 26.2939 cv
313.494 26.2939 314.174 26.3936 314.804 26.6133 cv
314.804 28.083 li
313.845 28.083 li
cp
f
319.084 28.373 mo
319.084 27.5527 318.874 26.8438 318.015 26.8438 cv
317.155 26.8438 316.905 27.5332 316.905 28.373 cv
319.084 28.373 li
cp
316.905 28.9521 mo
316.905 29.6318 316.915 30.8711 318.145 30.8711 cv
318.874 30.8711 319.174 30.4814 319.185 29.7314 cv
320.203 29.7314 li
320.193 30.5918 319.694 31.4512 318.024 31.4512 cv
316.346 31.4512 315.626 30.3516 315.626 28.8721 cv
315.626 27.3936 316.346 26.2939 318.024 26.2939 cv
319.634 26.2939 320.304 27.043 320.304 28.7227 cv
320.304 28.9521 li
316.905 28.9521 li
cp
f
321.306 29.7314 mo
322.146 29.7314 li
322.146 30.4414 322.336 30.9014 323.025 30.9014 cv
323.665 30.9014 324.085 30.6318 324.085 30.1719 cv
324.085 29.8018 323.944 29.582 323.025 29.3018 cv
321.866 28.9521 321.306 28.5322 321.306 27.7529 cv
321.306 26.8438 322.126 26.2939 323.305 26.2939 cv
324.064 26.2939 324.734 26.4336 325.024 26.5635 cv
325.024 27.9326 li
324.185 27.9326 li
324.185 27.1631 323.994 26.8438 323.275 26.8438 cv
322.815 26.8438 322.525 27.0332 322.525 27.4336 cv
322.525 27.8125 322.785 28.083 323.245 28.2324 cv
324.064 28.5029 li
324.924 28.7822 325.304 29.0723 325.304 29.832 cv
325.304 31.001 324.194 31.4512 323.146 31.4512 cv
322.325 31.4512 321.596 31.251 321.306 31.1309 cv
321.306 29.7314 li
cp
f
413.007 14.4536 mo
416.885 14.4536 li
416.885 15.2031 li
414.146 18.6514 li
415.626 18.6514 li
416.045 18.6514 416.226 18.5615 416.226 17.9019 cv
416.226 17.6621 li
417.064 17.6621 li
417.064 19.291 li
412.827 19.291 li
412.827 18.5015 li
415.605 15.0332 li
414.246 15.0332 li
413.896 15.0332 413.847 15.333 413.847 15.8027 cv
413.847 16.0127 li
413.007 16.0127 li
413.007 14.4536 li
cp
f
421.285 16.3726 mo
421.285 15.5532 421.075 14.8433 420.216 14.8433 cv
419.356 14.8433 419.106 15.5332 419.106 16.3726 cv
421.285 16.3726 li
cp
419.106 16.9521 mo
419.106 17.6318 419.116 18.8711 420.346 18.8711 cv
421.075 18.8711 421.375 18.4814 421.385 17.7319 cv
422.404 17.7319 li
422.395 18.5913 421.895 19.4512 420.226 19.4512 cv
418.547 19.4512 417.827 18.3516 417.827 16.8726 cv
417.827 15.3931 418.547 14.2939 420.226 14.2939 cv
421.835 14.2939 422.505 15.0435 422.505 16.7227 cv
422.505 16.9521 li
419.106 16.9521 li
cp
f
423.188 14.4536 mo
423.757 14.4536 424.646 14.3936 425.136 14.334 cv
425.136 15.4434 li
425.156 15.4434 li
425.496 14.6338 426.065 14.2939 426.875 14.2939 cv
427.165 14.2939 427.445 14.334 427.675 14.4136 cv
427.675 15.853 li
426.715 15.853 li
426.705 15.353 426.596 15.0732 426.205 15.0732 cv
425.746 15.0732 425.286 15.6929 425.286 16.5327 cv
425.286 18.1719 li
425.286 18.6313 425.336 18.8013 425.846 18.8013 cv
426.375 18.8013 li
426.375 19.291 li
423.188 19.291 li
423.188 18.8013 li
423.507 18.8013 li
424.017 18.8013 424.066 18.6313 424.066 18.1719 cv
424.066 15.7329 li
424.066 15.0635 424.017 14.9736 423.617 14.9736 cv
423.188 14.9736 li
423.188 14.4536 li
cp
f
428.247 14.4536 mo
428.757 14.4536 429.646 14.3936 430.136 14.334 cv
430.136 15.4434 li
430.156 15.4434 li
430.496 14.6338 431.065 14.2939 431.875 14.2939 cv
432.854 14.2939 433.614 14.7334 433.614 15.813 cv
433.614 18.1719 li
433.614 18.6313 433.664 18.8013 434.174 18.8013 cv
434.434 18.8013 li
434.434 19.291 li
431.695 19.291 li
431.695 18.8013 li
431.835 18.8013 li
432.345 18.8013 432.395 18.6313 432.395 18.1719 cv
432.395 16.1025 li
432.395 15.3931 432.055 15.0732 431.516 15.0732 cv
430.786 15.0732 430.286 15.5933 430.286 16.5327 cv
430.286 18.1719 li
430.286 18.6313 430.336 18.8013 430.846 18.8013 cv
430.985 18.8013 li
430.985 19.291 li
428.188 19.291 li
428.188 18.8013 li
428.507 18.8013 li
429.017 18.8013 429.066 18.6313 429.066 18.1719 cv
429.066 15.7329 li
429.066 15.0635 429.017 14.9736 428.617 14.9736 cv
428.247 14.9736 li
428.247 14.4536 li
cp
f
436.326 11.9951 mo
436.796 11.9951 437.056 12.3149 437.056 12.7446 cv
437.056 13.1743 436.796 13.4941 436.326 13.4941 cv
435.856 13.4941 435.597 13.1743 435.597 12.7446 cv
435.597 12.3149 435.856 11.9951 436.326 11.9951 cv
cp
434.917 14.4536 mo
435.427 14.4536 436.316 14.3936 436.956 14.334 cv
436.956 18.1719 li
436.956 18.6313 437.006 18.8013 437.516 18.8013 cv
437.775 18.8013 li
437.775 19.291 li
434.857 19.291 li
434.857 18.8013 li
435.177 18.8013 li
435.687 18.8013 435.736 18.6313 435.736 18.1719 cv
435.736 15.7329 li
435.736 15.0635 435.687 14.9736 435.287 14.9736 cv
434.917 14.9736 li
434.917 14.4536 li
cp
f
441.155 14.4536 mo
443.694 14.4536 li
443.694 14.9434 li
443.364 14.9434 li
443.194 14.9434 443.074 14.9932 442.885 15.1733 cv
441.596 16.4526 li
443.044 18.2817 li
443.404 18.7314 443.534 18.7915 443.944 18.8013 cv
443.944 19.291 li
441.415 19.291 li
441.415 18.8013 li
441.615 18.8013 li
441.765 18.8013 441.865 18.7314 441.865 18.6313 cv
441.865 18.5513 441.825 18.4814 440.406 16.6323 cv
441.325 15.6729 li
441.745 15.2432 441.815 15.1631 441.815 15.0835 cv
441.815 14.9834 441.726 14.9434 441.655 14.9434 cv
441.155 14.9434 li
441.155 14.4536 li
cp
438.257 12.1147 mo
438.767 12.1147 439.656 12.0552 440.296 11.9951 cv
440.296 18.1719 li
440.296 18.6313 440.346 18.8013 440.855 18.8013 cv
440.995 18.8013 li
440.995 19.291 li
438.197 19.291 li
438.197 18.8013 li
438.517 18.8013 li
439.026 18.8013 439.076 18.6313 439.076 18.1719 cv
439.076 13.394 li
439.076 12.7246 439.026 12.6348 438.627 12.6348 cv
438.257 12.6348 li
438.257 12.1147 li
cp
f
447.726 16.3726 mo
447.726 15.5532 447.516 14.8433 446.656 14.8433 cv
445.797 14.8433 445.547 15.5332 445.547 16.3726 cv
447.726 16.3726 li
cp
445.547 16.9521 mo
445.547 17.6318 445.557 18.8711 446.786 18.8711 cv
447.516 18.8711 447.815 18.4814 447.826 17.7319 cv
448.845 17.7319 li
448.835 18.5913 448.335 19.4512 446.666 19.4512 cv
444.987 19.4512 444.268 18.3516 444.268 16.8726 cv
444.268 15.3931 444.987 14.2939 446.666 14.2939 cv
448.275 14.2939 448.945 15.0435 448.945 16.7227 cv
448.945 16.9521 li
445.547 16.9521 li
cp
f
453.877 11.9951 mo
454.347 11.9951 454.606 12.3149 454.606 12.7446 cv
454.606 13.1743 454.347 13.4941 453.877 13.4941 cv
453.407 13.4941 453.147 13.1743 453.147 12.7446 cv
453.147 12.3149 453.407 11.9951 453.877 11.9951 cv
cp
452.468 14.4536 mo
452.978 14.4536 453.867 14.3936 454.507 14.334 cv
454.507 18.1719 li
454.507 18.6313 454.557 18.8013 455.066 18.8013 cv
455.326 18.8013 li
455.326 19.291 li
452.408 19.291 li
452.408 18.8013 li
452.728 18.8013 li
453.237 18.8013 453.287 18.6313 453.287 18.1719 cv
453.287 15.7329 li
453.287 15.0635 453.237 14.9736 452.838 14.9736 cv
452.468 14.9736 li
452.468 14.4536 li
cp
f
455.808 14.4536 mo
456.317 14.4536 457.207 14.3936 457.696 14.334 cv
457.696 15.4434 li
457.717 15.4434 li
458.057 14.6338 458.626 14.2939 459.436 14.2939 cv
460.415 14.2939 461.175 14.7334 461.175 15.813 cv
461.175 18.1719 li
461.175 18.6313 461.225 18.8013 461.734 18.8013 cv
461.994 18.8013 li
461.994 19.291 li
459.256 19.291 li
459.256 18.8013 li
459.396 18.8013 li
459.905 18.8013 459.955 18.6313 459.955 18.1719 cv
459.955 16.1025 li
459.955 15.3931 459.615 15.0732 459.076 15.0732 cv
458.347 15.0732 457.847 15.5933 457.847 16.5327 cv
457.847 18.1719 li
457.847 18.6313 457.896 18.8013 458.406 18.8013 cv
458.546 18.8013 li
458.546 19.291 li
455.748 19.291 li
455.748 18.8013 li
456.067 18.8013 li
456.577 18.8013 456.627 18.6313 456.627 18.1719 cv
456.627 15.7329 li
456.627 15.0635 456.577 14.9736 456.178 14.9736 cv
455.808 14.9736 li
455.808 14.4536 li
cp
f
462.737 17.7319 mo
463.577 17.7319 li
463.577 18.4414 463.767 18.9014 464.457 18.9014 cv
465.096 18.9014 465.516 18.6313 465.516 18.1719 cv
465.516 17.8018 465.376 17.582 464.457 17.3022 cv
463.297 16.9521 462.737 16.5327 462.737 15.7529 cv
462.737 14.8433 463.557 14.2939 464.736 14.2939 cv
465.496 14.2939 466.166 14.4336 466.455 14.5635 cv
466.455 15.9326 li
465.616 15.9326 li
465.616 15.1631 465.426 14.8433 464.706 14.8433 cv
464.247 14.8433 463.957 15.0332 463.957 15.4331 cv
463.957 15.813 464.217 16.083 464.677 16.2329 cv
465.496 16.5024 li
466.355 16.7822 466.735 17.0723 466.735 17.832 cv
466.735 19.001 465.626 19.4512 464.576 19.4512 cv
463.757 19.4512 463.027 19.251 462.737 19.1309 cv
462.737 17.7319 li
cp
f
467.418 14.4536 mo
468.347 14.3438 468.567 14.0537 468.647 13.0444 cv
469.517 13.0444 li
469.517 14.4536 li
471.115 14.4536 li
471.115 15.0332 li
469.517 15.0332 li
469.517 18.2114 li
469.517 18.6416 469.677 18.8311 470.036 18.8311 cv
470.396 18.8311 470.556 18.6416 470.556 18.2114 cv
470.556 17.7017 li
471.396 17.7017 li
471.396 17.9219 li
471.396 18.9912 470.836 19.4707 469.866 19.4707 cv
468.856 19.4707 468.297 19.1411 468.297 17.9019 cv
468.297 15.0332 li
467.418 15.0332 li
467.418 14.4536 li
cp
f
473.327 11.9951 mo
473.797 11.9951 474.057 12.3149 474.057 12.7446 cv
474.057 13.1743 473.797 13.4941 473.327 13.4941 cv
472.857 13.4941 472.597 13.1743 472.597 12.7446 cv
472.597 12.3149 472.857 11.9951 473.327 11.9951 cv
cp
471.918 14.4536 mo
472.427 14.4536 473.316 14.3936 473.956 14.334 cv
473.956 18.1719 li
473.956 18.6313 474.006 18.8013 474.516 18.8013 cv
474.776 18.8013 li
474.776 19.291 li
471.857 19.291 li
471.857 18.8013 li
472.178 18.8013 li
472.688 18.8013 472.737 18.6313 472.737 18.1719 cv
472.737 15.7329 li
472.737 15.0635 472.688 14.9736 472.287 14.9736 cv
471.918 14.9736 li
471.918 14.4536 li
cp
f
475.197 14.4536 mo
476.127 14.3438 476.347 14.0537 476.427 13.0444 cv
477.296 13.0444 li
477.296 14.4536 li
478.896 14.4536 li
478.896 15.0332 li
477.296 15.0332 li
477.296 18.2114 li
477.296 18.6416 477.456 18.8311 477.816 18.8311 cv
478.176 18.8311 478.336 18.6416 478.336 18.2114 cv
478.336 17.7017 li
479.176 17.7017 li
479.176 17.9219 li
479.176 18.9912 478.615 19.4707 477.646 19.4707 cv
476.637 19.4707 476.077 19.1411 476.077 17.9019 cv
476.077 15.0332 li
475.197 15.0332 li
475.197 14.4536 li
cp
f
483.995 18.3413 mo
483.975 18.3413 li
483.745 19.0112 483.115 19.4512 482.106 19.4512 cv
481.116 19.4512 480.517 19.001 480.517 18.0718 cv
480.517 15.7329 li
480.517 15.0635 480.467 14.9736 480.067 14.9736 cv
479.697 14.9736 li
479.697 14.4536 li
480.207 14.4536 481.097 14.3936 481.736 14.334 cv
481.736 17.792 li
481.736 18.3813 482.056 18.6714 482.626 18.6714 cv
483.476 18.6714 483.845 18.1318 483.845 17.1021 cv
483.845 15.7329 li
483.845 15.0635 483.795 14.9736 483.396 14.9736 cv
483.025 14.9736 li
483.025 14.4536 li
483.535 14.4536 484.425 14.3936 485.064 14.334 cv
485.064 18.1719 li
485.064 18.6313 485.114 18.8013 485.624 18.8013 cv
485.884 18.8013 li
485.884 19.291 li
483.995 19.291 li
483.995 18.3413 li
cp
f
486.308 14.4536 mo
487.236 14.3438 487.457 14.0537 487.536 13.0444 cv
488.406 13.0444 li
488.406 14.4536 li
490.005 14.4536 li
490.005 15.0332 li
488.406 15.0332 li
488.406 18.2114 li
488.406 18.6416 488.566 18.8311 488.926 18.8311 cv
489.285 18.8311 489.445 18.6416 489.445 18.2114 cv
489.445 17.7017 li
490.285 17.7017 li
490.285 17.9219 li
490.285 18.9912 489.726 19.4707 488.756 19.4707 cv
487.746 19.4707 487.187 19.1411 487.187 17.9019 cv
487.187 15.0332 li
486.308 15.0332 li
486.308 14.4536 li
cp
f
494.405 16.3726 mo
494.405 15.5532 494.195 14.8433 493.336 14.8433 cv
492.477 14.8433 492.227 15.5332 492.227 16.3726 cv
494.405 16.3726 li
cp
492.227 16.9521 mo
492.227 17.6318 492.236 18.8711 493.466 18.8711 cv
494.195 18.8711 494.495 18.4814 494.505 17.7319 cv
495.524 17.7319 li
495.515 18.5913 495.015 19.4512 493.346 19.4512 cv
491.667 19.4512 490.947 18.3516 490.947 16.8726 cv
490.947 15.3931 491.667 14.2939 493.346 14.2939 cv
494.955 14.2939 495.624 15.0435 495.624 16.7227 cv
495.624 16.9521 li
492.227 16.9521 li
cp
f
499.087 14.4536 mo
499.967 14.4536 li
499.967 13.0942 500.026 11.9951 501.846 11.9951 cv
502.335 11.9951 502.775 12.0552 503.175 12.1348 cv
503.175 13.4541 li
502.335 13.4541 li
502.335 12.7944 502.205 12.5747 501.836 12.5747 cv
501.426 12.5747 501.186 12.8647 501.186 13.4644 cv
501.186 14.4536 li
502.495 14.4536 li
502.495 15.0332 li
501.186 15.0332 li
501.186 18.1719 li
501.186 18.6313 501.236 18.8013 501.746 18.8013 cv
502.275 18.8013 li
502.275 19.291 li
499.087 19.291 li
499.087 18.8013 li
499.407 18.8013 li
499.917 18.8013 499.967 18.6313 499.967 18.1719 cv
499.967 15.0332 li
499.087 15.0332 li
499.087 14.4536 li
cp
f
505.397 18.8711 mo
506.217 18.8711 506.517 18.2314 506.517 16.8726 cv
506.517 15.5132 506.217 14.8735 505.397 14.8735 cv
504.578 14.8735 504.278 15.5132 504.278 16.8726 cv
504.278 18.2314 504.578 18.8711 505.397 18.8711 cv
cp
505.397 14.2939 mo
507.076 14.2939 507.796 15.3931 507.796 16.8726 cv
507.796 18.3516 507.076 19.4512 505.397 19.4512 cv
503.719 19.4512 502.999 18.3516 502.999 16.8726 cv
502.999 15.3931 503.719 14.2939 505.397 14.2939 cv
cp
f
508.358 14.4536 mo
508.929 14.4536 509.818 14.3936 510.308 14.334 cv
510.308 15.4434 li
510.328 15.4434 li
510.668 14.6338 511.237 14.2939 512.047 14.2939 cv
512.337 14.2939 512.616 14.334 512.847 14.4136 cv
512.847 15.853 li
511.887 15.853 li
511.877 15.353 511.767 15.0732 511.377 15.0732 cv
510.917 15.0732 510.458 15.6929 510.458 16.5327 cv
510.458 18.1719 li
510.458 18.6313 510.508 18.8013 511.018 18.8013 cv
511.547 18.8013 li
511.547 19.291 li
508.358 19.291 li
508.358 18.8013 li
508.679 18.8013 li
509.188 18.8013 509.238 18.6313 509.238 18.1719 cv
509.238 15.7329 li
509.238 15.0635 509.188 14.9736 508.789 14.9736 cv
508.358 14.9736 li
508.358 14.4536 li
cp
f
415.246 28.9619 mo
414.556 28.9619 413.937 29.2119 413.937 30.0215 cv
413.937 30.501 414.267 30.8115 414.696 30.8115 cv
415.636 30.8115 415.796 29.8721 415.825 28.9619 cv
415.246 28.9619 li
cp
415.985 30.4512 mo
415.965 30.4512 li
415.575 31.2412 414.956 31.4512 414.246 31.4512 cv
413.387 31.4512 412.717 30.9512 412.717 30.0117 cv
412.717 29.1826 413.247 28.3828 414.956 28.3828 cv
415.825 28.3828 li
415.825 27.9229 li
415.825 27.1836 415.646 26.873 414.926 26.873 cv
414.246 26.873 414.097 27.293 414.097 27.7627 cv
412.977 27.7627 li
412.977 27.0938 413.287 26.2939 414.906 26.2939 cv
416.515 26.2939 417.015 26.7432 417.015 27.7832 cv
417.015 28.293 416.944 29.7314 416.944 30.1719 cv
416.944 30.6318 416.995 30.8018 417.505 30.8018 cv
417.765 30.8018 li
417.765 31.291 li
415.985 31.291 li
415.985 30.4512 li
cp
f
420.766 27.0137 mo
420.066 27.0137 419.666 27.4727 419.666 28.8428 cv
419.666 30.1514 420.076 30.7314 420.806 30.7314 cv
421.386 30.7314 421.875 30.2412 421.875 29.0127 cv
421.875 27.5928 421.455 27.0137 420.766 27.0137 cv
cp
421.965 30.5117 mo
421.945 30.5117 li
421.686 31.1309 421.155 31.4512 420.396 31.4512 cv
419.207 31.4512 418.387 30.5811 418.387 28.9424 cv
418.387 27.0635 419.156 26.2939 420.386 26.2939 cv
421.096 26.2939 421.545 26.6436 421.815 27.083 cv
421.835 27.083 li
421.835 25.394 li
421.835 24.7246 421.785 24.6348 421.386 24.6348 cv
421.016 24.6348 li
421.016 24.1147 li
421.525 24.1147 422.415 24.0552 423.055 23.9951 cv
423.055 30.1719 li
423.055 30.6318 423.104 30.8018 423.614 30.8018 cv
423.934 30.8018 li
423.934 31.291 li
421.965 31.291 li
421.965 30.5117 li
cp
f
427.206 26.4541 mo
429.325 26.4541 li
429.325 26.9434 li
429.195 26.9434 li
428.985 26.9434 428.896 27.0234 428.795 27.2832 cv
427.246 31.3506 li
426.066 31.3506 li
424.518 27.333 li
424.388 27.0029 424.328 26.9434 424.107 26.9434 cv
423.988 26.9434 li
423.988 26.4541 li
426.486 26.4541 li
426.486 26.9434 li
426.156 26.9434 li
425.856 26.9434 425.757 27.0137 425.757 27.123 cv
425.757 27.2529 425.816 27.373 425.847 27.4727 cv
426.807 30.292 li
426.826 30.292 li
427.866 27.3232 li
427.896 27.2529 427.916 27.1533 427.916 27.0732 cv
427.916 27.0029 427.855 26.9434 427.626 26.9434 cv
427.206 26.9434 li
427.206 26.4541 li
cp
f
431.997 28.9619 mo
431.308 28.9619 430.688 29.2119 430.688 30.0215 cv
430.688 30.501 431.018 30.8115 431.447 30.8115 cv
432.387 30.8115 432.547 29.8721 432.577 28.9619 cv
431.997 28.9619 li
cp
432.736 30.4512 mo
432.717 30.4512 li
432.327 31.2412 431.707 31.4512 430.998 31.4512 cv
430.138 31.4512 429.469 30.9512 429.469 30.0117 cv
429.469 29.1826 429.998 28.3828 431.707 28.3828 cv
432.577 28.3828 li
432.577 27.9229 li
432.577 27.1836 432.396 26.873 431.678 26.873 cv
430.998 26.873 430.848 27.293 430.848 27.7627 cv
429.729 27.7627 li
429.729 27.0938 430.038 26.2939 431.657 26.2939 cv
433.267 26.2939 433.767 26.7432 433.767 27.7832 cv
433.767 28.293 433.696 29.7314 433.696 30.1719 cv
433.696 30.6318 433.746 30.8018 434.256 30.8018 cv
434.516 30.8018 li
434.516 31.291 li
432.736 31.291 li
432.736 30.4512 li
cp
f
434.998 26.4541 mo
435.508 26.4541 436.397 26.3936 436.888 26.334 cv
436.888 27.4434 li
436.907 27.4434 li
437.247 26.6338 437.817 26.2939 438.627 26.2939 cv
439.606 26.2939 440.365 26.7334 440.365 27.8125 cv
440.365 30.1719 li
440.365 30.6318 440.416 30.8018 440.925 30.8018 cv
441.186 30.8018 li
441.186 31.291 li
438.446 31.291 li
438.446 30.8018 li
438.587 30.8018 li
439.097 30.8018 439.146 30.6318 439.146 30.1719 cv
439.146 28.1025 li
439.146 27.3936 438.807 27.0732 438.267 27.0732 cv
437.537 27.0732 437.037 27.5928 437.037 28.5322 cv
437.037 30.1719 li
437.037 30.6318 437.087 30.8018 437.597 30.8018 cv
437.737 30.8018 li
437.737 31.291 li
434.938 31.291 li
434.938 30.8018 li
435.259 30.8018 li
435.769 30.8018 435.818 30.6318 435.818 30.1719 cv
435.818 27.7334 li
435.818 27.0635 435.769 26.9736 435.368 26.9736 cv
434.998 26.9736 li
434.998 26.4541 li
cp
f
445.026 28.083 mo
445.007 27.2432 444.847 26.873 444.247 26.873 cv
443.487 26.873 442.968 27.1729 442.968 28.8027 cv
442.968 30.4111 443.357 30.8115 444.067 30.8115 cv
444.816 30.8115 445.076 30.4512 445.127 29.5117 cv
446.086 29.5117 li
446.086 30.6113 445.727 31.4512 444.027 31.4512 cv
442.348 31.4512 441.629 30.3516 441.629 28.8721 cv
441.629 27.3936 442.348 26.2939 444.027 26.2939 cv
444.677 26.2939 445.356 26.3936 445.986 26.6133 cv
445.986 28.083 li
445.026 28.083 li
cp
f
450.267 28.373 mo
450.267 27.5527 450.057 26.8438 449.197 26.8438 cv
448.338 26.8438 448.088 27.5332 448.088 28.373 cv
450.267 28.373 li
cp
448.088 28.9521 mo
448.088 29.6318 448.098 30.8711 449.327 30.8711 cv
450.057 30.8711 450.356 30.4814 450.366 29.7314 cv
451.386 29.7314 li
451.376 30.5918 450.876 31.4512 449.207 31.4512 cv
447.528 31.4512 446.809 30.3516 446.809 28.8721 cv
446.809 27.3936 447.528 26.2939 449.207 26.2939 cv
450.816 26.2939 451.485 27.043 451.485 28.7227 cv
451.485 28.9521 li
448.088 28.9521 li
cp
f
454.747 27.0137 mo
454.048 27.0137 453.647 27.4727 453.647 28.8428 cv
453.647 30.1514 454.058 30.7314 454.787 30.7314 cv
455.367 30.7314 455.856 30.2412 455.856 29.0127 cv
455.856 27.5928 455.437 27.0137 454.747 27.0137 cv
cp
455.946 30.5117 mo
455.927 30.5117 li
455.667 31.1309 455.137 31.4512 454.377 31.4512 cv
453.188 31.4512 452.368 30.5811 452.368 28.9424 cv
452.368 27.0635 453.138 26.2939 454.367 26.2939 cv
455.077 26.2939 455.526 26.6436 455.797 27.083 cv
455.816 27.083 li
455.816 25.394 li
455.816 24.7246 455.767 24.6348 455.367 24.6348 cv
454.997 24.6348 li
454.997 24.1147 li
455.507 24.1147 456.396 24.0552 457.036 23.9951 cv
457.036 30.1719 li
457.036 30.6318 457.086 30.8018 457.596 30.8018 cv
457.915 30.8018 li
457.915 31.291 li
455.946 31.291 li
455.946 30.5117 li
cp
f
461.059 26.4541 mo
461.628 26.4541 462.518 26.3936 463.008 26.334 cv
463.008 27.4434 li
463.027 27.4434 li
463.367 26.6338 463.937 26.2939 464.757 26.2939 cv
465.456 26.2939 465.976 26.5635 466.115 27.1729 cv
466.136 27.1729 li
466.466 26.624 467.005 26.2939 467.665 26.2939 cv
468.574 26.2939 469.254 26.6436 469.254 27.8428 cv
469.254 30.1719 li
469.254 30.6318 469.304 30.8018 469.813 30.8018 cv
470.073 30.8018 li
470.073 31.291 li
467.385 31.291 li
467.385 30.8018 li
467.475 30.8018 li
467.984 30.8018 468.034 30.6318 468.034 30.1719 cv
468.034 28.1025 li
468.034 27.3936 467.765 27.0732 467.325 27.0732 cv
466.705 27.0732 466.206 27.4531 466.206 28.4229 cv
466.206 30.1719 li
466.206 30.6318 466.256 30.8018 466.766 30.8018 cv
466.905 30.8018 li
466.905 31.291 li
464.337 31.291 li
464.337 30.8018 li
464.427 30.8018 li
464.937 30.8018 464.986 30.6318 464.986 30.1719 cv
464.986 28.1025 li
464.986 27.3936 464.717 27.0732 464.276 27.0732 cv
463.657 27.0732 463.157 27.6533 463.157 28.5322 cv
463.157 30.1719 li
463.157 30.6318 463.207 30.8018 463.717 30.8018 cv
463.856 30.8018 li
463.856 31.291 li
461.059 31.291 li
461.059 30.8018 li
461.378 30.8018 li
461.888 30.8018 461.938 30.6318 461.938 30.1719 cv
461.938 27.7334 li
461.938 27.0635 461.888 26.9736 461.488 26.9736 cv
461.059 26.9736 li
461.059 26.4541 li
cp
f
473.117 28.9619 mo
472.427 28.9619 471.808 29.2119 471.808 30.0215 cv
471.808 30.501 472.138 30.8115 472.567 30.8115 cv
473.507 30.8115 473.667 29.8721 473.696 28.9619 cv
473.117 28.9619 li
cp
473.856 30.4512 mo
473.836 30.4512 li
473.446 31.2412 472.827 31.4512 472.117 31.4512 cv
471.258 31.4512 470.588 30.9512 470.588 30.0117 cv
470.588 29.1826 471.118 28.3828 472.827 28.3828 cv
473.696 28.3828 li
473.696 27.9229 li
473.696 27.1836 473.517 26.873 472.797 26.873 cv
472.117 26.873 471.968 27.293 471.968 27.7627 cv
470.848 27.7627 li
470.848 27.0938 471.158 26.2939 472.777 26.2939 cv
474.386 26.2939 474.886 26.7432 474.886 27.7832 cv
474.886 28.293 474.815 29.7314 474.815 30.1719 cv
474.815 30.6318 474.866 30.8018 475.376 30.8018 cv
475.636 30.8018 li
475.636 31.291 li
473.856 31.291 li
473.856 30.4512 li
cp
f
475.938 26.4541 mo
476.868 26.3438 477.088 26.0537 477.168 25.0444 cv
478.037 25.0444 li
478.037 26.4541 li
479.637 26.4541 li
479.637 27.0332 li
478.037 27.0332 li
478.037 30.2119 li
478.037 30.6416 478.197 30.8311 478.558 30.8311 cv
478.917 30.8311 479.077 30.6416 479.077 30.2119 cv
479.077 29.7021 li
479.916 29.7021 li
479.916 29.9219 li
479.916 30.9912 479.356 31.4707 478.388 31.4707 cv
477.378 31.4707 476.818 31.1406 476.818 29.9014 cv
476.818 27.0332 li
475.938 27.0332 li
475.938 26.4541 li
cp
f
484.036 28.373 mo
484.036 27.5527 483.826 26.8438 482.967 26.8438 cv
482.107 26.8438 481.857 27.5332 481.857 28.373 cv
484.036 28.373 li
cp
481.857 28.9521 mo
481.857 29.6318 481.867 30.8711 483.097 30.8711 cv
483.826 30.8711 484.126 30.4814 484.137 29.7314 cv
485.156 29.7314 li
485.146 30.5918 484.646 31.4512 482.977 31.4512 cv
481.298 31.4512 480.578 30.3516 480.578 28.8721 cv
480.578 27.3936 481.298 26.2939 482.977 26.2939 cv
484.586 26.2939 485.256 27.043 485.256 28.7227 cv
485.256 28.9521 li
481.857 28.9521 li
cp
f
485.938 26.4541 mo
486.508 26.4541 487.397 26.3936 487.888 26.334 cv
487.888 27.4434 li
487.907 27.4434 li
488.247 26.6338 488.816 26.2939 489.626 26.2939 cv
489.916 26.2939 490.196 26.334 490.426 26.4141 cv
490.426 27.8525 li
489.467 27.8525 li
489.457 27.3535 489.347 27.0732 488.957 27.0732 cv
488.497 27.0732 488.037 27.6934 488.037 28.5322 cv
488.037 30.1719 li
488.037 30.6318 488.087 30.8018 488.597 30.8018 cv
489.127 30.8018 li
489.127 31.291 li
485.938 31.291 li
485.938 30.8018 li
486.258 30.8018 li
486.768 30.8018 486.818 30.6318 486.818 30.1719 cv
486.818 27.7334 li
486.818 27.0635 486.768 26.9736 486.368 26.9736 cv
485.938 26.9736 li
485.938 26.4541 li
cp
f
492.407 23.9951 mo
492.877 23.9951 493.138 24.3149 493.138 24.7446 cv
493.138 25.1743 492.877 25.4941 492.407 25.4941 cv
491.938 25.4941 491.678 25.1743 491.678 24.7446 cv
491.678 24.3149 491.938 23.9951 492.407 23.9951 cv
cp
490.998 26.4541 mo
491.508 26.4541 492.397 26.3936 493.037 26.334 cv
493.037 30.1719 li
493.037 30.6318 493.087 30.8018 493.597 30.8018 cv
493.856 30.8018 li
493.856 31.291 li
490.938 31.291 li
490.938 30.8018 li
491.258 30.8018 li
491.768 30.8018 491.818 30.6318 491.818 30.1719 cv
491.818 27.7334 li
491.818 27.0635 491.768 26.9736 491.368 26.9736 cv
490.998 26.9736 li
490.998 26.4541 li
cp
f
496.897 28.9619 mo
496.207 28.9619 495.588 29.2119 495.588 30.0215 cv
495.588 30.501 495.918 30.8115 496.348 30.8115 cv
497.287 30.8115 497.446 29.8721 497.477 28.9619 cv
496.897 28.9619 li
cp
497.637 30.4512 mo
497.616 30.4512 li
497.227 31.2412 496.607 31.4512 495.897 31.4512 cv
495.038 31.4512 494.368 30.9512 494.368 30.0117 cv
494.368 29.1826 494.898 28.3828 496.607 28.3828 cv
497.477 28.3828 li
497.477 27.9229 li
497.477 27.1836 497.297 26.873 496.577 26.873 cv
495.897 26.873 495.748 27.293 495.748 27.7627 cv
494.628 27.7627 li
494.628 27.0938 494.938 26.2939 496.558 26.2939 cv
498.166 26.2939 498.666 26.7432 498.666 27.7832 cv
498.666 28.293 498.596 29.7314 498.596 30.1719 cv
498.596 30.6318 498.646 30.8018 499.156 30.8018 cv
499.416 30.8018 li
499.416 31.291 li
497.637 31.291 li
497.637 30.4512 li
cp
f
499.898 24.1147 mo
500.408 24.1147 501.298 24.0552 501.938 23.9951 cv
501.938 30.1719 li
501.938 30.6318 501.987 30.8018 502.497 30.8018 cv
502.757 30.8018 li
502.757 31.291 li
499.839 31.291 li
499.839 30.8018 li
500.158 30.8018 li
500.668 30.8018 500.718 30.6318 500.718 30.1719 cv
500.718 25.394 li
500.718 24.7246 500.668 24.6348 500.269 24.6348 cv
499.898 24.6348 li
499.898 24.1147 li
cp
f
503.498 29.7314 mo
504.338 29.7314 li
504.338 30.4414 504.527 30.9014 505.218 30.9014 cv
505.857 30.9014 506.276 30.6318 506.276 30.1719 cv
506.276 29.8018 506.137 29.582 505.218 29.3018 cv
504.058 28.9521 503.498 28.5322 503.498 27.7529 cv
503.498 26.8438 504.317 26.2939 505.497 26.2939 cv
506.257 26.2939 506.927 26.4336 507.216 26.5635 cv
507.216 27.9326 li
506.377 27.9326 li
506.377 27.1631 506.187 26.8438 505.467 26.8438 cv
505.008 26.8438 504.718 27.0332 504.718 27.4336 cv
504.718 27.8125 504.978 28.083 505.438 28.2324 cv
506.257 28.5029 li
507.116 28.7822 507.496 29.0723 507.496 29.832 cv
507.496 31.001 506.387 31.4512 505.337 31.4512 cv
504.518 31.4512 503.788 31.251 503.498 31.1309 cv
503.498 29.7314 li
cp
f
grestore
66.915 14.0059 mo
38.2388 49.3994 li
40.5181 49.4014 li
69.1968 14.0039 li
66.915 14.0059 li
cp
f
gsave
0 49.4014 mo
545.676 49.4014 li
545.676 0 li
0 0 li
0 49.4014 li
cp
clp
17.0415 33.5 mo
18.5728 33.5 19.3696 34.4492 19.8887 34.6563 cv
21.0977 35.1367 21.3008 34.8906 21.3008 34.8906 cv
21.3008 26.0313 li
21.3008 25.9453 21.1724 25.9453 21.1724 25.9453 cv
21.1724 25.9453 19.9937 25.7637 19.5884 25.5166 cv
19.2036 25.2822 17.7695 24.4248 16.7207 24.4248 cv
15.6685 24.4248 15.4795 24.875 15.4795 24.875 cv
15.4795 33.8213 li
15.4795 33.8213 15.9717 33.5 17.0415 33.5 cv
9.31543 26.0566 mo
9.31543 34.8701 li
9.31543 34.8701 9.41162 34.9883 10.0005 34.8271 cv
10.6787 34.6416 11.5195 33.7783 12.6978 33.5205 cv
13.5815 33.3291 14.7734 33.6074 15.0518 33.7998 cv
15.0518 24.9707 li
15.0518 24.9707 14.5176 24.4473 13.6396 24.4473 cv
12.7827 24.4473 11.3374 25.2168 10.7817 25.4961 cv
10.2974 25.7373 9.78857 25.9199 9.41748 25.9561 cv
9.30566 25.9658 9.31543 26.0566 9.31543 26.0566 cv
14.7368 34.7148 mo
14.7368 35.0322 14.9946 35.29 15.3115 35.29 cv
15.6294 35.29 15.8867 35.0322 15.8867 34.7148 cv
15.8867 34.3984 15.6294 34.1396 15.3115 34.1396 cv
14.9946 34.1396 14.7368 34.3984 14.7368 34.7148 cv
7.52881 22.3623 mo
8.72949 22.3623 8.83447 21.2266 8.83447 21.2266 cv
6.21338 21.2266 li
6.21338 21.2266 6.32666 22.3623 7.52881 22.3623 cv
6.19238 20.2656 mo
8.86475 20.2656 li
8.86475 19.1924 li
6.19141 19.1924 li
6.19238 20.2656 li
cp
22.1284 38.9648 mo
23.3296 38.9648 23.4346 37.8301 23.4346 37.8301 cv
20.8135 37.8301 li
20.8135 37.8301 20.9268 38.9648 22.1284 38.9648 cv
20.7925 36.8691 mo
23.4648 36.8691 li
23.4648 35.7949 li
20.7915 35.7949 li
20.7925 36.8691 li
cp
21.6685 34.2744 mo
21.8066 34.46 21.9658 34.6064 22.1274 34.6387 cv
22.5854 34.5459 23.0205 33.5527 23.0098 33.3018 cv
23.0308 33.1953 22.9248 33.0713 22.9458 33.0313 cv
22.9678 32.9932 23.1816 33.0713 23.3018 33.0713 cv
23.4214 33.0713 23.6836 32.9463 23.8638 32.9492 cv
24.2065 32.9541 24.2427 33.1426 24.3027 33.1641 cv
24.3477 33.1797 24.4214 33.1563 24.5234 33.208 cv
24.6274 33.2588 24.7778 33.3994 24.7217 33.5371 cv
24.5645 33.5527 24.4858 33.5313 24.3994 33.5313 cv
24.2837 33.5313 24.1318 33.6543 24.1216 33.7402 cv
24.1206 33.7539 24.4478 33.7734 24.6094 33.7783 cv
25.1226 33.7949 24.9507 33.4814 24.9468 33.4658 cv
24.9346 33.4063 25.2256 33.4697 25.2256 33.7021 cv
25.2256 33.8955 24.8916 34.0059 24.6147 33.9824 cv
24.3955 33.9629 24.1416 33.8613 24.0815 33.8516 cv
24.0566 33.8477 23.9136 34.1514 24.1484 34.1494 cv
24.2427 34.1494 24.3398 34.0938 24.3398 34.0938 cv
24.3867 34.0938 24.4727 34.2373 24.1548 34.3047 cv
23.7065 34.4033 23.4707 34.4121 23.3657 34.7041 cv
23.2847 34.9229 23.3174 35.1592 23.4385 35.3564 cv
23.7827 35.918 24.8818 35.834 25.1406 35.4893 cv
25.2295 35.3701 25.2446 35.2051 25.1357 35.2051 cv
24.8257 35.2324 24.3516 35.2822 24.3306 34.8965 cv
24.3354 34.5742 24.8857 34.5781 25.3926 34.0605 cv
25.7925 33.6543 25.8735 33.3877 25.9077 33.1758 cv
25.9175 33.1133 25.9204 32.916 25.9204 32.916 cv
25.9307 32.8525 26.0854 33.1035 26.1025 33.1504 cv
26.2168 33.4492 26.1328 33.7783 26.1328 33.7783 cv
26.2505 33.6768 26.3984 33.5098 26.4678 33.3857 cv
26.5068 33.3125 26.5664 33.2119 26.5928 33.1572 cv
26.6318 33.0752 26.6484 33.3594 26.6094 33.5732 cv
26.5537 33.8848 26.2734 34.1455 26.2734 34.1455 cv
26.8267 34.1426 27.0518 33.5137 27.0518 33.5137 cv
27.4727 34.0039 26.8057 34.6357 26.8057 34.6357 cv
26.8057 34.6357 26.8887 34.665 27.0088 34.6348 cv
27.1626 34.5947 27.2656 34.5596 27.3657 34.4424 cv
27.4634 34.3271 27.3584 34.7236 27.0908 34.8906 cv
26.6367 35.1768 26.1738 35.2041 26.1738 35.2041 cv
26.2637 35.4189 26.6387 35.46 26.8525 35.4414 cv
27.1445 35.415 27.3828 35.208 27.3828 35.208 cv
27.7148 35.7969 26.8545 36.1777 26.7915 36.207 cv
27.0298 36.3896 27.2188 36.4727 27.3506 36.4941 cv
27.4097 36.5029 27.4575 36.499 27.4995 36.4854 cv
27.5278 36.4834 27.4277 36.6328 27.1885 36.6064 cv
26.7876 36.5625 26.4385 36.4395 26.4385 36.4395 cv
26.9736 37.5752 27.6274 37.5322 27.6777 37.5273 cv
27.6777 37.5273 27.6777 38.0313 26.9766 38.0313 cv
26.9404 38.0313 26.9058 38.0283 26.8706 38.0234 cv
26.6118 37.9834 26.3887 37.8105 26.3618 37.79 cv
26.3726 38.1611 27.1934 38.5498 27.1934 38.5498 cv
27.2368 38.5889 27.0098 38.6719 26.7124 38.625 cv
26.5625 38.6016 26.3955 38.5469 26.2344 38.4355 cv
25.8564 38.1768 25.5498 37.6289 25.5225 37.5801 cv
25.3125 38.4404 26.0098 38.8447 26.1836 38.8691 cv
26.2876 38.8818 26.0254 39.0039 25.7637 38.9629 cv
25.7134 38.9561 25.6646 38.9424 25.6177 38.9219 cv
25.1294 38.708 24.8574 38.207 24.8325 38.1602 cv
24.8228 38.2012 24.7324 38.6289 25.0815 39.0381 cv
25.0928 39.0508 25.0625 39.0537 25.0156 39.0469 cv
24.9575 39.0381 24.8706 39.0117 24.8047 38.9658 cv
24.5366 38.7754 24.3174 38.4619 24.2715 38.0654 cv
24.0347 38.1084 23.8667 38.3379 23.7847 38.5215 cv
23.7046 38.6904 23.7075 38.9014 23.7998 39.0537 cv
23.9248 39.2734 24.0537 39.3779 24.2227 39.4131 cv
24.3638 39.4414 24.5127 39.4355 24.6504 39.46 cv
24.7725 39.4814 24.8857 39.5244 24.9775 39.6328 cv
25.1094 39.7891 25.0107 40.1553 24.7988 40.0986 cv
24.7988 40.0986 24.8687 39.9248 24.7295 39.793 cv
24.6787 39.7559 24.6255 39.7344 24.5757 39.7256 cv
24.4688 39.71 24.3716 39.7568 24.3115 39.8682 cv
24.1826 40.1104 24.6626 40.4063 24.8926 40.498 cv
24.8926 40.498 25.0176 40.5771 25.1514 40.5977 cv
25.2886 40.6191 25.4346 40.5781 25.4707 40.3311 cv
25.4204 40.2842 25.2925 40.2617 25.2974 40.0264 cv
25.3008 39.8369 25.4526 39.7559 25.4526 39.7559 cv
25.5068 39.5273 25.8574 39.542 25.8574 39.542 cv
25.8877 39.5498 25.8618 39.5664 25.8418 39.5732 cv
25.7515 39.6045 25.7295 39.6816 25.7476 39.7402 cv
25.7656 39.7969 25.9404 39.9063 25.8018 40.2715 cv
25.8257 40.2754 25.9824 40.2822 26.0117 40.0264 cv
26.0234 39.9268 25.9888 39.835 26.0308 39.7549 cv
26.0654 39.6875 26.1587 39.6396 26.2578 39.6689 cv
26.3628 39.6299 26.4448 39.6221 26.5107 39.6328 cv
26.7007 39.6611 26.7476 39.8408 26.7476 39.8408 cv
26.7476 39.8408 26.7495 39.8643 26.7295 39.8594 cv
26.7124 39.8516 26.6885 39.8457 26.6626 39.8418 cv
26.5708 39.8281 26.4497 39.8359 26.4697 39.9063 cv
26.4824 39.9521 26.5215 40.0156 26.4224 40.1436 cv
26.2778 40.3301 25.9756 40.1992 26.0664 40.585 cv
26.0796 40.5654 26.1558 40.4619 26.3228 40.4775 cv
26.4624 40.4912 26.6108 40.6553 26.6084 40.8877 cv
26.6035 40.9746 26.5698 41.0498 26.4888 41.1045 cv
26.4888 41.1045 26.4766 41.0947 26.4795 41.0811 cv
26.5054 40.9746 26.4614 40.9033 26.3848 40.8867 cv
26.2388 40.875 26.2876 40.9844 26.1074 40.9795 cv
26.0835 40.9795 26.0615 40.9775 26.0415 40.9746 cv
25.9746 40.9639 25.9326 40.9414 25.8877 40.9346 cv
25.8745 40.9326 25.8608 40.9316 25.8457 40.9336 cv
25.6187 40.9629 25.3286 41.1309 25.2236 41.2891 cv
25.1196 41.4473 25.2368 41.4922 25.1416 41.6377 cv
25.0615 41.7627 24.9678 41.7539 24.9678 41.7539 cv
24.9678 41.7539 24.9634 41.7891 24.9688 41.833 cv
24.9766 41.8945 25.0015 41.9727 25.0815 41.9902 cv
25.0815 41.9902 25.1064 42.002 25.0845 42.0078 cv
25.0596 42.0156 25.0117 42.0303 24.9595 42.0215 cv
24.8955 42.0117 24.8247 41.9678 24.7896 41.833 cv
24.7798 41.7959 24.7725 41.751 24.7695 41.6992 cv
24.7695 41.6992 24.6377 41.5752 24.6968 41.4189 cv
24.7695 41.2246 24.9414 41.2842 24.8706 41.0537 cv
24.7915 40.7979 24.2988 40.3701 23.9878 40.3213 cv
23.9126 40.3096 23.8486 40.3213 23.8037 40.3623 cv
23.6987 40.457 23.6777 40.7236 24.0107 40.7461 cv
23.9434 40.8848 23.8276 40.9229 23.6367 40.8789 cv
23.4868 40.8438 23.3296 40.6113 23.3896 40.3066 cv
23.4688 39.9092 23.2207 39.5918 22.9824 39.5537 cv
22.9487 39.5488 22.9146 39.5488 22.8828 39.5557 cv
22.6006 39.6035 22.6465 40.0176 22.6465 40.0176 cv
22.7915 41.6279 li
22.7837 41.6777 22.8057 41.7529 22.8535 41.833 cv
22.9468 41.9873 23.1357 42.1602 23.4014 42.2168 cv
23.6304 42.2598 23.8145 42.2051 23.8745 42.125 cv
23.8906 42.0996 23.9897 41.9512 23.9395 41.833 cv
23.9238 41.7969 23.8945 41.7637 23.8457 41.7383 cv
23.8315 41.7324 23.8184 41.7275 23.8066 41.7256 cv
23.7217 41.7139 23.6685 41.792 23.6514 41.7822 cv
23.6074 41.6719 23.6714 41.4717 23.9697 41.5293 cv
24.1694 41.5664 24.2397 41.6992 24.2568 41.833 cv
24.2754 41.9883 24.2227 42.1436 24.2227 42.1436 cv
24.2227 42.1436 24.3955 42.083 24.6006 42.1143 cv
24.6196 42.1172 24.6387 42.1211 24.6587 42.126 cv
24.8184 42.1914 24.9316 42.2686 24.9546 42.4404 cv
24.9805 42.6387 24.8096 42.7354 24.8096 42.7354 cv
24.8096 42.7354 24.8628 42.5918 24.7114 42.5039 cv
24.6704 42.4834 24.6338 42.4697 24.5986 42.4648 cv
24.4004 42.4346 24.2998 42.6367 24.3105 42.79 cv
24.3237 43.0342 24.2627 43.2266 24.0796 43.2529 cv
24.0376 43.2559 24.0024 43.2539 23.9736 43.25 cv
23.8408 43.2295 23.8306 43.1484 23.8306 43.1484 cv
23.8306 43.1484 24.0288 43.166 24.0225 42.9844 cv
24.0425 42.5322 23.2524 42.542 22.9604 42.3896 cv
22.7095 42.2695 22.6074 42.1152 22.6074 42.1152 cv
22.6074 42.1152 22.5918 42.1338 22.5947 42.2275 cv
22.6475 42.6982 22.9287 42.7178 23.2114 42.7832 cv
23.3994 42.833 23.6128 42.9902 23.6128 43.2559 cv
23.6128 43.6328 23.3647 43.5918 23.3647 43.5918 cv
23.3647 43.5918 23.4634 43.292 23.1904 43.249 cv
23.1704 43.2461 23.1475 43.2441 23.1226 43.2441 cv
22.9688 43.2441 22.8804 43.3223 22.7876 43.3955 cv
22.6426 43.5117 22.2124 44.0156 22.1284 44.0977 cv
22.0444 44.0156 21.6138 43.5117 21.4688 43.3955 cv
21.3755 43.3223 21.2876 43.2441 21.1338 43.2441 cv
21.1084 43.2441 21.0864 43.2461 21.0654 43.249 cv
20.7925 43.292 20.8916 43.5918 20.8916 43.5918 cv
20.8916 43.5918 20.6436 43.6328 20.6436 43.2559 cv
20.6436 42.9902 20.8564 42.833 21.0444 42.7832 cv
21.3276 42.7178 21.6084 42.6982 21.6616 42.2275 cv
21.6646 42.1338 21.6484 42.1152 21.6484 42.1152 cv
21.6484 42.1152 21.5464 42.2695 21.2954 42.3896 cv
21.0034 42.542 20.2134 42.5322 20.2334 42.9844 cv
20.2275 43.166 20.4258 43.1484 20.4258 43.1484 cv
20.4258 43.1484 20.4155 43.2295 20.2827 43.25 cv
20.2534 43.2539 20.2188 43.2559 20.1768 43.2529 cv
19.9937 43.2266 19.9326 43.0342 19.9458 42.79 cv
19.9565 42.6367 19.8555 42.4346 19.6577 42.4648 cv
19.6226 42.4697 19.5854 42.4834 19.5444 42.5039 cv
19.3936 42.5918 19.4468 42.7354 19.4468 42.7354 cv
19.4468 42.7354 19.2754 42.6387 19.3018 42.4404 cv
19.3247 42.2686 19.4375 42.1914 19.5977 42.126 cv
19.6177 42.1211 19.6367 42.1172 19.6558 42.1143 cv
19.8618 42.083 20.0337 42.1436 20.0337 42.1436 cv
20.0337 42.1436 19.9805 41.9883 19.9995 41.833 cv
20.0166 41.6992 20.0864 41.5664 20.2876 41.5293 cv
20.5845 41.4717 20.6484 41.6719 20.6045 41.7822 cv
20.5874 41.792 20.5347 41.7139 20.4497 41.7256 cv
20.4375 41.7275 20.4248 41.7324 20.4106 41.7383 cv
20.3618 41.7637 20.3325 41.7969 20.3164 41.833 cv
20.2666 41.9512 20.3657 42.0996 20.3818 42.125 cv
20.4414 42.2051 20.6255 42.2598 20.8545 42.2168 cv
21.1206 42.1602 21.3096 41.9873 21.4028 41.833 cv
21.4507 41.7529 21.4727 41.6777 21.4648 41.6279 cv
21.6094 40.0176 li
21.6094 40.0176 21.6558 39.6035 21.3735 39.5557 cv
21.3418 39.5488 21.3076 39.5488 21.2744 39.5537 cv
21.0356 39.5918 20.7876 39.9092 20.8667 40.3066 cv
20.9268 40.6113 20.7705 40.8438 20.6196 40.8789 cv
20.4287 40.9229 20.3125 40.8848 20.2456 40.7461 cv
20.5786 40.7236 20.5576 40.457 20.4526 40.3623 cv
20.4077 40.3213 20.3438 40.3096 20.2686 40.3213 cv
19.9575 40.3701 19.4648 40.7979 19.3857 41.0537 cv
19.3145 41.2842 19.4868 41.2246 19.5596 41.4189 cv
19.6187 41.5752 19.4868 41.6992 19.4868 41.6992 cv
19.4834 41.751 19.4766 41.7959 19.4668 41.833 cv
19.4316 41.9678 19.3608 42.0117 19.2964 42.0215 cv
19.2446 42.0303 19.1968 42.0156 19.1714 42.0078 cv
19.2544 41.9727 19.2798 41.8945 19.2876 41.833 cv
19.2925 41.7891 19.2886 41.7539 19.2886 41.7539 cv
19.2886 41.7539 19.1948 41.7627 19.1147 41.6377 cv
19.0195 41.4922 19.1367 41.4473 19.0327 41.2891 cv
18.9277 41.1309 18.6377 40.9629 18.4106 40.9336 cv
18.3955 40.9316 18.3818 40.9326 18.3687 40.9346 cv
18.3237 40.9414 18.2817 40.9639 18.2148 40.9746 cv
18.1948 40.9775 18.1724 40.9795 18.1484 40.9795 cv
17.9688 40.9844 18.0176 40.875 17.8716 40.8867 cv
17.7944 40.9033 17.7505 40.9746 17.7764 41.0811 cv
17.7798 41.0947 17.7676 41.1045 17.7676 41.1045 cv
17.6865 41.0498 17.6528 40.9746 17.6475 40.8877 cv
17.6455 40.6553 17.7935 40.4912 17.9336 40.4775 cv
18.1006 40.4619 18.1777 40.5654 18.1895 40.585 cv
18.2808 40.1992 17.9785 40.3301 17.8335 40.1436 cv
17.7344 40.0156 17.7734 39.9521 17.7866 39.9063 cv
17.8066 39.8359 17.6855 39.8281 17.5938 39.8418 cv
17.5674 39.8457 17.5435 39.8516 17.5278 39.8594 cv
17.5088 39.8408 17.5557 39.6611 17.7456 39.6328 cv
17.8115 39.6221 17.8945 39.6299 17.9985 39.6689 cv
18.0977 39.6396 18.1904 39.6875 18.2256 39.7549 cv
18.2676 39.835 18.2324 39.9268 18.2446 40.0264 cv
18.2734 40.2822 18.4307 40.2754 18.4546 40.2715 cv
18.3154 39.9063 18.4907 39.7969 18.5088 39.7402 cv
18.5264 39.6816 18.5044 39.6045 18.4146 39.5732 cv
18.3945 39.5664 18.3687 39.5498 18.3984 39.542 cv
18.3984 39.542 18.7495 39.5273 18.8037 39.7559 cv
18.8037 39.7559 18.9556 39.8369 18.9585 40.0264 cv
18.9634 40.2617 18.8354 40.2842 18.7856 40.3311 cv
18.8218 40.5781 18.9678 40.6191 19.1045 40.5977 cv
19.2388 40.5771 19.3638 40.498 19.3638 40.498 cv
19.5938 40.4063 20.0737 40.1104 19.9448 39.8682 cv
19.8848 39.7568 19.7876 39.71 19.6807 39.7256 cv
19.6304 39.7344 19.5776 39.7559 19.5264 39.793 cv
19.3877 39.9248 19.4575 40.0986 19.4575 40.0986 cv
19.2456 40.1553 19.1465 39.7891 19.2788 39.6328 cv
19.3706 39.5244 19.4834 39.4814 19.6055 39.46 cv
19.7437 39.4355 19.8926 39.4414 20.0337 39.4131 cv
20.2026 39.3779 20.3315 39.2734 20.4565 39.0537 cv
20.5488 38.9014 20.5518 38.6904 20.4717 38.5215 cv
20.3896 38.3379 20.2217 38.1084 19.9844 38.0654 cv
19.9385 38.4619 19.7197 38.7754 19.4517 38.9658 cv
19.3857 39.0117 19.2988 39.0381 19.2407 39.0469 cv
19.1934 39.0537 19.1636 39.0508 19.1748 39.0381 cv
19.5244 38.6289 19.4336 38.2012 19.4238 38.1602 cv
19.3984 38.207 19.1265 38.708 18.6387 38.9219 cv
18.5918 38.9424 18.5425 38.9561 18.4927 38.9629 cv
18.2314 39.0039 17.9697 38.8818 18.0728 38.8691 cv
18.2466 38.8447 18.9434 38.4404 18.7334 37.5801 cv
18.7065 37.6289 18.4004 38.1768 18.0215 38.4355 cv
17.8608 38.5469 17.6934 38.6016 17.5435 38.625 cv
17.2466 38.6719 17.0195 38.5889 17.0625 38.5498 cv
17.0625 38.5498 17.8838 38.1611 17.8945 37.79 cv
17.8677 37.8105 17.6445 37.9834 17.3857 38.0234 cv
17.3506 38.0283 17.3154 38.0313 17.2798 38.0313 cv
16.5786 38.0313 16.5786 37.5273 16.5786 37.5273 cv
16.6284 37.5322 17.2827 37.5752 17.8174 36.4395 cv
17.8174 36.4395 17.4688 36.5625 17.0674 36.6064 cv
16.8286 36.6328 16.7285 36.4834 16.7568 36.4854 cv
16.7988 36.499 16.8467 36.5029 16.9058 36.4941 cv
17.0376 36.4727 17.2266 36.3896 17.4648 36.207 cv
17.4014 36.1777 16.5415 35.7969 16.8735 35.208 cv
16.8735 35.208 17.1118 35.415 17.4038 35.4414 cv
17.6177 35.46 17.9927 35.4189 18.0825 35.2041 cv
18.0825 35.2041 17.6196 35.1768 17.1655 34.8906 cv
17.1514 34.8818 17.1377 34.873 17.1245 34.8633 cv
16.9175 34.8623 16.7036 34.873 16.4814 34.8955 cv
16.3345 35.4707 15.8574 35.8926 15.2925 35.8926 cv
14.7295 35.8926 14.2544 35.4746 14.1055 34.9043 cv
13.7388 34.8389 13.3857 34.8301 13.0405 34.8584 cv
4.99072 43.4307 li
5.76758 44.1582 6.61768 44.7744 7.50439 45.2881 cv
15.0317 37.2734 li
15.0317 41.5156 li
10.3047 46.5498 li
12.0234 47.1309 13.7568 47.3936 15.2915 47.3936 cv
21.1616 47.3936 29.9287 43.5479 29.7285 32.7871 cv
29.7285 25.8652 li
25.9678 29.8711 li
21.9824 29.8711 li
29.7285 21.6211 li
29.7285 17.0859 li
21.6074 25.7354 li
21.6445 25.7656 21.6665 25.8008 21.6665 25.8389 cv
21.6685 34.2744 li
cp
19.0938 35.1396 mo
19.0498 35.2314 19.0518 35.4043 19.1157 35.4893 cv
19.3506 35.8018 20.2754 35.9004 20.7026 35.4971 cv
20.1494 35.4111 19.6284 35.2676 19.0938 35.1396 cv
8.94971 26.082 mo
8.94678 26.0586 8.94336 26.0107 8.95166 25.9541 cv
8.7334 25.8916 8.49463 25.8574 8.36084 25.7871 cv
8.10938 25.667 8.00684 25.5117 8.00684 25.5117 cv
8.00684 25.5117 7.9917 25.5313 7.99463 25.625 cv
8.04736 26.0947 8.32861 26.1152 8.61182 26.1797 cv
8.73682 26.2129 8.87256 26.2939 8.94971 26.4229 cv
8.94971 26.082 li
cp
9.77979 25.5078 mo
9.92139 25.4658 10.0776 25.4102 10.2388 25.3428 cv
10.2197 25.3154 10.2026 25.2783 10.1895 25.2295 cv
10.1797 25.1934 10.1724 25.1484 10.1694 25.0957 cv
10.1694 25.0957 10.0376 24.9717 10.0967 24.8164 cv
10.1694 24.6221 10.3418 24.6807 10.2705 24.4512 cv
10.1904 24.1953 9.69873 23.7666 9.3877 23.7178 cv
9.3125 23.707 9.24854 23.7178 9.20361 23.7578 cv
9.09863 23.8535 9.07764 24.1211 9.41064 24.1426 cv
9.34277 24.2822 9.22754 24.3203 9.03662 24.2754 cv
8.88574 24.2412 8.72949 24.0078 8.78955 23.7031 cv
8.86865 23.3057 8.62061 22.9893 8.38184 22.9512 cv
8.34863 22.9463 8.31445 22.9463 8.28271 22.9531 cv
8.00049 23.001 8.04639 23.415 8.04639 23.415 cv
8.19141 25.0254 li
8.18359 25.0752 8.20557 25.1504 8.25342 25.2295 cv
8.34668 25.3838 8.53467 25.5566 8.80176 25.6143 cv
9.03076 25.6572 9.21338 25.6016 9.27441 25.5215 cv
9.29053 25.4971 9.38965 25.3477 9.33984 25.2295 cv
9.32373 25.1943 9.29443 25.1611 9.24561 25.1348 cv
9.23145 25.1289 9.21875 25.125 9.20557 25.123 cv
9.12158 25.1104 9.06738 25.1895 9.05176 25.1787 cv
9.00781 25.0693 9.07178 24.8691 9.36865 24.9248 cv
9.56982 24.9619 9.63965 25.0957 9.65576 25.2295 cv
9.67578 25.3848 9.62256 25.541 9.62256 25.541 cv
9.62256 25.541 9.68555 25.5186 9.77979 25.5078 cv
10.3794 25.2822 mo
10.4585 25.2461 10.5386 25.209 10.6187 25.1689 cv
10.9004 25.0273 11.4087 24.7607 11.9556 24.5303 cv
12.4937 24.3027 13.1294 24.0811 13.6396 24.0811 cv
14.1528 24.0811 14.5645 24.2354 14.8477 24.3867 cv
14.9897 24.4629 15.1006 24.54 15.1777 24.5986 cv
15.2056 24.6221 li
15.2158 24.6074 15.2275 24.5908 15.2417 24.5742 cv
15.3008 24.502 15.3867 24.4189 15.5107 24.3408 cv
15.7607 24.1826 16.1426 24.0596 16.7207 24.0596 cv
17.3267 24.0596 18.0068 24.3018 18.5547 24.5498 cv
18.6807 24.6084 li
28.0796 14.5986 li
23.8218 14.5986 li
15.5435 23.4141 li
15.5435 19.1709 li
19.8364 14.5986 li
.853516 14.5986 li
.853516 32.7871 li
.841797 33.4668 .864746 34.1182 .92041 34.7441 cv
5.01563 30.3818 li
8.94971 30.3818 li
8.94971 26.9063 li
8.87646 27.0078 8.76465 26.9893 8.76465 26.9893 cv
8.76465 26.9893 8.86377 26.6895 8.59082 26.6455 cv
8.56982 26.6426 8.54736 26.6406 8.52246 26.6406 cv
8.36768 26.6406 8.28076 26.7188 8.1875 26.793 cv
8.04248 26.9092 7.61279 27.4131 7.52881 27.4951 cv
7.44482 27.4131 7.01367 26.9092 6.86768 26.793 cv
6.77539 26.7188 6.6875 26.6406 6.53369 26.6406 cv
6.50879 26.6406 6.48584 26.6426 6.46582 26.6455 cv
6.19141 26.6895 6.2915 26.9893 6.2915 26.9893 cv
6.2915 26.9893 6.04346 27.0303 6.04346 26.6533 cv
6.04346 26.3867 6.25537 26.2295 6.44336 26.1797 cv
6.72754 26.1152 7.00879 26.0947 7.06152 25.625 cv
7.06445 25.5313 7.04883 25.5117 7.04883 25.5117 cv
7.04883 25.5117 6.94678 25.667 6.69482 25.7871 cv
6.40283 25.9395 5.61377 25.9287 5.63379 26.3809 cv
5.62744 26.5615 5.82568 26.5449 5.82568 26.5449 cv
5.82568 26.5449 5.81543 26.627 5.68262 26.6465 cv
5.65381 26.6514 5.61865 26.6533 5.57666 26.6504 cv
5.39355 26.624 5.33252 26.4307 5.3457 26.1865 cv
5.35645 26.0342 5.25439 25.832 5.05664 25.8613 cv
5.02246 25.8672 4.98438 25.8789 4.94482 25.9004 cv
4.79346 25.9883 4.84668 26.1318 4.84668 26.1318 cv
4.84668 26.1318 4.67578 26.0361 4.70166 25.8369 cv
4.72461 25.666 4.8374 25.5879 4.99756 25.5215 cv
5.01758 25.5176 5.03662 25.5137 5.05566 25.5107 cv
5.26074 25.4795 5.43262 25.541 5.43262 25.541 cv
5.43262 25.541 5.38037 25.3848 5.39941 25.2295 cv
5.4165 25.0957 5.48682 24.9619 5.68652 24.9248 cv
5.98438 24.8691 6.04883 25.0693 6.00342 25.1787 cv
5.98779 25.1895 5.93457 25.1104 5.84961 25.123 cv
5.8374 25.125 5.82471 25.1289 5.81055 25.1348 cv
5.76074 25.1611 5.73145 25.1943 5.7168 25.2295 cv
5.6665 25.3477 5.76465 25.4971 5.78174 25.5215 cv
5.8418 25.6016 6.02539 25.6572 6.25439 25.6143 cv
6.52051 25.5566 6.70947 25.3838 6.80176 25.2295 cv
6.85059 25.1504 6.87158 25.0752 6.86475 25.0254 cv
7.00977 23.415 li
7.00977 23.415 7.05566 23.001 6.77344 22.9531 cv
6.74072 22.9463 6.70752 22.9463 6.67383 22.9512 cv
6.43555 22.9893 6.1875 23.3057 6.26563 23.7031 cv
6.32568 24.0078 6.16943 24.2412 6.01953 24.2754 cv
5.82861 24.3203 5.7124 24.2822 5.64551 24.1426 cv
5.97852 24.1211 5.95752 23.8535 5.85254 23.7578 cv
5.80762 23.7178 5.74268 23.707 5.66748 23.7178 cv
5.35645 23.7666 4.86475 24.1953 4.78564 24.4512 cv
4.71484 24.6807 4.88672 24.6221 4.95947 24.8164 cv
5.01855 24.9717 4.88672 25.0957 4.88672 25.0957 cv
4.88281 25.1484 4.87549 25.1934 4.8667 25.2295 cv
4.83057 25.3652 4.76074 25.4092 4.6958 25.4189 cv
4.64453 25.4268 4.59668 25.4131 4.57178 25.4053 cv
4.65479 25.3691 4.67969 25.292 4.68652 25.2295 cv
4.69141 25.1855 4.6875 25.1504 4.6875 25.1504 cv
4.6875 25.1504 4.59473 25.1602 4.51367 25.0352 cv
4.41943 24.8887 4.53564 24.8428 4.43262 24.6855 cv
4.32764 24.5283 4.0376 24.3604 3.81055 24.3311 cv
3.79541 24.3291 3.78174 24.3301 3.76758 24.332 cv
3.72363 24.3379 3.68164 24.3613 3.61377 24.3711 cv
3.59473 24.375 3.57275 24.377 3.54736 24.377 cv
3.36865 24.3809 3.41748 24.2715 3.27051 24.2842 cv
3.19482 24.2998 3.15039 24.3721 3.17578 24.4766 cv
3.17969 24.4922 3.16748 24.502 3.16748 24.502 cv
3.08643 24.4473 3.05273 24.3721 3.04639 24.2842 cv
3.04541 24.0518 3.19336 23.8877 3.3335 23.875 cv
3.49951 23.8594 3.57666 23.9619 3.58984 23.9814 cv
3.68066 23.5957 3.37842 23.7266 3.23242 23.541 cv
3.13477 23.4131 3.17383 23.3486 3.18652 23.3027 cv
3.20654 23.2334 3.08545 23.2246 2.99365 23.2393 cv
2.96777 23.2432 2.94336 23.249 2.92676 23.2549 cv
2.90869 23.2383 2.95557 23.0576 3.14551 23.0303 cv
3.21045 23.0186 3.29346 23.0273 3.39844 23.0664 cv
3.49658 23.0371 3.59082 23.085 3.62549 23.1523 cv
3.66748 23.2324 3.63281 23.3242 3.64355 23.4229 cv
3.67383 23.6787 3.83057 23.6719 3.85449 23.6689 cv
3.71582 23.3027 3.89063 23.1943 3.90869 23.1367 cv
3.92676 23.0791 3.90479 23.002 3.81348 22.9697 cv
3.79443 22.9629 3.76855 22.9473 3.79883 22.9395 cv
3.79883 22.9395 4.14941 22.9238 4.20361 23.1533 cv
4.20361 23.1533 4.35449 23.2334 4.3584 23.4229 cv
4.36279 23.6592 4.23438 23.6807 4.18555 23.7275 cv
4.22168 23.9746 4.36768 24.0156 4.50439 23.9951 cv
4.63867 23.9736 4.7627 23.8945 4.7627 23.8945 cv
4.99365 23.8027 5.47266 23.5068 5.34375 23.2646 cv
5.28467 23.1543 5.1875 23.1074 5.08057 23.123 cv
5.02979 23.1309 4.97754 23.1533 4.92676 23.1895 cv
4.7876 23.3223 4.85645 23.4961 4.85645 23.4961 cv
4.64551 23.5518 4.54639 23.1855 4.67871 23.0303 cv
4.77051 22.9209 4.88379 22.8779 5.00439 22.8564 cv
5.14258 22.832 5.2915 22.8379 5.43359 22.8086 cv
5.60254 22.7754 5.73145 22.6699 5.85645 22.4512 cv
5.94873 22.2979 5.95166 22.0869 5.87158 21.9189 cv
5.78955 21.7354 5.62061 21.5049 5.38379 21.4619 cv
5.33838 21.8594 5.11963 22.1719 4.85156 22.3633 cv
4.78564 22.4092 4.69873 22.4346 4.64063 22.4443 cv
4.59375 22.4512 4.56348 22.4482 4.57471 22.4336 cv
4.92383 22.0264 4.8335 21.5977 4.82373 21.5566 cv
4.79883 21.6035 4.52539 22.1045 4.03857 22.3193 cv
3.9917 22.3389 3.94238 22.3516 3.89258 22.3604 cv
3.63037 22.4014 3.36865 22.2793 3.47266 22.2656 cv
3.64551 22.2422 4.34375 21.8369 4.13379 20.9766 cv
4.10645 21.0264 3.7998 21.5742 3.42139 21.833 cv
3.26074 21.9443 3.09277 21.999 2.94336 22.0215 cv
2.64551 22.0693 2.41943 21.9863 2.46143 21.9473 cv
2.46143 21.9473 3.28369 21.5576 3.29346 21.1865 cv
3.2666 21.208 3.04443 21.3799 2.78564 21.4199 cv
2.75049 21.4248 2.71484 21.4277 2.67969 21.4277 cv
1.97852 21.4277 1.97852 20.9238 1.97852 20.9238 cv
2.02783 20.9287 2.68262 20.9717 3.21777 19.8359 cv
3.21777 19.8359 2.86865 19.959 2.4668 20.0029 cv
2.22852 20.0303 2.12842 19.8799 2.15674 19.8818 cv
2.19873 19.8955 2.24561 19.9004 2.30566 19.8906 cv
2.4375 19.8701 2.62549 19.7871 2.86475 19.6035 cv
2.80078 19.5752 1.94141 19.1943 2.27344 18.6045 cv
2.27344 18.6045 2.51074 18.8115 2.80273 18.8379 cv
3.01758 18.8564 3.3916 18.8164 3.48242 18.6006 cv
3.48242 18.6006 3.01953 18.5742 2.56543 18.2881 cv
2.29736 18.1211 2.19238 17.7236 2.29053 17.8389 cv
2.39063 17.957 2.49365 17.9922 2.64746 18.0313 cv
2.76758 18.0615 2.84961 18.0332 2.84961 18.0332 cv
2.84961 18.0332 2.18262 17.4014 2.60449 16.9111 cv
2.60449 16.9111 2.82959 17.54 3.38281 17.542 cv
3.38281 17.542 3.10254 17.2822 3.04639 16.9697 cv
3.00781 16.7559 3.02344 16.4717 3.0625 16.5527 cv
3.08984 16.6094 3.14941 16.71 3.18848 16.7832 cv
3.25781 16.9072 3.40479 17.0732 3.52246 17.1748 cv
3.52246 17.1748 3.43848 16.8457 3.55371 16.5469 cv
3.5708 16.501 3.72461 16.25 3.73584 16.3125 cv
3.73584 16.3125 3.73779 16.5098 3.74854 16.5732 cv
3.78271 16.7852 3.86377 17.0508 4.26367 17.458 cv
4.77051 17.9746 5.3208 17.9707 5.32471 18.2939 cv
5.30469 18.6787 4.83057 18.6289 4.51953 18.6016 cv
4.41162 18.6016 4.42578 18.7666 4.51563 18.8848 cv
4.77441 19.2314 5.87256 19.3154 6.2168 18.7529 cv
6.33838 18.5557 6.37158 18.3203 6.28955 18.1006 cv
6.18555 17.8086 5.94971 17.7998 5.50146 17.7021 cv
5.18359 17.6338 5.26953 17.4912 5.31641 17.4912 cv
5.31641 17.4912 5.41357 17.5459 5.50781 17.5459 cv
5.74268 17.5479 5.59961 17.2451 5.57471 17.249 cv
5.51465 17.2578 5.26074 17.3604 5.0415 17.3789 cv
4.76367 17.4033 4.43066 17.292 4.43066 17.0986 cv
4.43066 16.8672 4.72168 16.8018 4.7085 16.8633 cv
4.70557 16.8779 4.53369 17.1924 5.04639 17.1748 cv
5.2085 17.1699 5.53564 17.1514 5.53467 17.1367 cv
5.52441 17.0508 5.37256 16.9277 5.25684 16.9277 cv
5.17041 16.9277 5.0918 16.9502 4.93457 16.9336 cv
4.87842 16.7959 5.02881 16.6563 5.13184 16.6045 cv
5.23438 16.5527 5.30859 16.5771 5.35352 16.5605 cv
5.41357 16.54 5.44971 16.3506 5.79248 16.3457 cv
5.97266 16.3428 6.2334 16.4678 6.35449 16.4678 cv
6.47461 16.4678 6.68848 16.3896 6.71045 16.4277 cv
6.73145 16.4678 6.62451 16.5908 6.64551 16.6992 cv
6.63574 16.9502 7.06982 17.9424 7.52783 18.0361 cv
7.98438 17.9424 8.42041 16.9502 8.40967 16.6992 cv
8.43066 16.5908 8.32373 16.4678 8.34473 16.4277 cv
8.3667 16.3896 8.58154 16.4678 8.70166 16.4678 cv
8.82178 16.4678 9.08252 16.3428 9.26367 16.3457 cv
9.60645 16.3506 9.64258 16.54 9.70264 16.5605 cv
9.74756 16.5771 9.8208 16.5527 9.92383 16.6045 cv
10.0264 16.6563 10.1768 16.7959 10.1206 16.9336 cv
9.96484 16.9502 9.88477 16.9277 9.79883 16.9277 cv
9.68262 16.9277 9.53076 17.0508 9.52148 17.1367 cv
9.51953 17.1514 9.84668 17.1699 10.0098 17.1748 cv
10.5225 17.1924 10.3506 16.8779 10.3467 16.8633 cv
10.3335 16.8018 10.6255 16.8672 10.6255 17.0986 cv
10.6255 17.292 10.2915 17.4033 10.0137 17.3789 cv
9.79541 17.3604 9.5415 17.2578 9.48145 17.249 cv
9.45654 17.2451 9.3125 17.5479 9.54883 17.5459 cv
9.64258 17.5459 9.73975 17.4912 9.73975 17.4912 cv
9.78662 17.4912 9.87256 17.6338 9.55469 17.7021 cv
9.10645 17.7998 8.86963 17.8086 8.76563 18.1006 cv
8.68457 18.3203 8.71777 18.5557 8.83838 18.7529 cv
9.18262 19.3154 10.2817 19.2314 10.5405 18.8848 cv
10.6294 18.7666 10.6445 18.6016 10.5356 18.6016 cv
10.2256 18.6289 9.75146 18.6787 9.73047 18.2939 cv
9.73584 17.9707 10.2856 17.9746 10.7925 17.458 cv
11.1914 17.0508 11.2734 16.7852 11.3076 16.5732 cv
11.3174 16.5098 11.3208 16.3125 11.3208 16.3125 cv
11.3306 16.25 11.4858 16.501 11.5024 16.5469 cv
11.6167 16.8457 11.5327 17.1748 11.5327 17.1748 cv
11.6504 17.0732 11.7988 16.9072 11.8667 16.7832 cv
11.9067 16.71 11.9668 16.6094 11.9927 16.5527 cv
12.0317 16.4717 12.0474 16.7559 12.0098 16.9697 cv
11.9536 17.2822 11.6738 17.542 11.6738 17.542 cv
12.2266 17.54 12.4507 16.9111 12.4507 16.9111 cv
12.8726 17.4014 12.2056 18.0332 12.2056 18.0332 cv
12.2056 18.0332 12.2876 18.0615 12.4087 18.0313 cv
12.5625 17.9922 12.6646 17.957 12.7646 17.8389 cv
12.8638 17.7236 12.7588 18.1211 12.4907 18.2881 cv
12.0366 18.5742 11.5737 18.6006 11.5737 18.6006 cv
11.6636 18.8164 12.0386 18.8564 12.2524 18.8379 cv
12.5444 18.8115 12.7827 18.6045 12.7827 18.6045 cv
13.1138 19.1943 12.2544 19.5752 12.1914 19.6035 cv
12.4297 19.7871 12.6187 19.8701 12.7495 19.8906 cv
12.8096 19.9004 12.8574 19.8955 12.8994 19.8818 cv
12.9277 19.8799 12.8276 20.0303 12.5884 20.0029 cv
12.1875 19.959 11.8384 19.8359 11.8384 19.8359 cv
12.3735 20.9717 13.0278 20.9287 13.0776 20.9238 cv
13.0776 20.9238 13.0776 21.4277 12.3765 21.4277 cv
12.3408 21.4277 12.3057 21.4248 12.2705 21.4199 cv
12.0117 21.3799 11.7886 21.208 11.7617 21.1865 cv
11.7725 21.5576 12.5938 21.9473 12.5938 21.9473 cv
12.6367 21.9863 12.4097 22.0693 12.1128 22.0215 cv
11.9624 21.999 11.7954 21.9443 11.6348 21.833 cv
11.2554 21.5742 10.9487 21.0264 10.9214 20.9766 cv
10.7114 21.8369 11.4097 22.2422 11.5825 22.2656 cv
11.6865 22.2793 11.4248 22.4014 11.1626 22.3604 cv
11.1138 22.3516 11.0645 22.3389 11.0176 22.3193 cv
10.5298 22.1045 10.2578 21.6035 10.2324 21.5566 cv
10.2227 21.5977 10.1318 22.0264 10.4805 22.4336 cv
10.4927 22.4482 10.4624 22.4512 10.4155 22.4443 cv
10.3564 22.4346 10.2705 22.4092 10.2046 22.3633 cv
9.93652 22.1719 9.71777 21.8594 9.67139 21.4619 cv
9.43457 21.5049 9.2666 21.7354 9.18457 21.9189 cv
9.10449 22.0869 9.10742 22.2979 9.19873 22.4512 cv
9.32471 22.6699 9.45361 22.7754 9.62256 22.8086 cv
9.76367 22.8379 9.9126 22.832 10.0508 22.8564 cv
10.1724 22.8779 10.2856 22.9209 10.3774 23.0303 cv
10.5098 23.1855 10.4097 23.5518 10.1987 23.4961 cv
10.1987 23.4961 10.2686 23.3223 10.1294 23.1895 cv
10.0786 23.1533 10.0254 23.1309 9.97461 23.123 cv
9.86865 23.1074 9.77051 23.1543 9.71143 23.2646 cv
9.58252 23.5068 10.0625 23.8027 10.2925 23.8945 cv
10.2925 23.8945 10.4165 23.9736 10.5518 23.9951 cv
10.6875 24.0156 10.8345 23.9746 10.8696 23.7275 cv
10.8208 23.6807 10.6924 23.6592 10.6968 23.4229 cv
10.7007 23.2334 10.8525 23.1533 10.8525 23.1533 cv
10.9067 22.9238 11.2568 22.9395 11.2568 22.9395 cv
11.2876 22.9473 11.2607 22.9629 11.2417 22.9697 cv
11.1514 23.002 11.1294 23.0791 11.1475 23.1367 cv
11.1646 23.1943 11.3408 23.3027 11.2017 23.6689 cv
11.2246 23.6719 11.3828 23.6787 11.4116 23.4229 cv
11.4224 23.3242 11.3887 23.2324 11.4307 23.1523 cv
11.4658 23.085 11.5586 23.0371 11.6577 23.0664 cv
11.7617 23.0273 11.8447 23.0186 11.9106 23.0303 cv
12.1006 23.0576 12.1465 23.2383 12.1465 23.2383 cv
12.1465 23.2383 12.1494 23.2598 12.1284 23.2549 cv
12.1118 23.249 12.0884 23.2432 12.0625 23.2393 cv
11.9707 23.2246 11.8496 23.2334 11.8696 23.3027 cv
11.8828 23.3486 11.9214 23.4131 11.8228 23.541 cv
11.6777 23.7266 11.3755 23.5957 11.4668 23.9814 cv
11.4785 23.9619 11.5557 23.8594 11.7227 23.875 cv
11.8628 23.8877 12.0098 24.0518 12.0088 24.2842 cv
12.0034 24.3721 11.9697 24.4473 11.8887 24.502 cv
11.8887 24.502 11.8755 24.4922 11.8794 24.4766 cv
11.9048 24.3721 11.8618 24.2998 11.7847 24.2842 cv
11.6387 24.2715 11.6865 24.3809 11.5078 24.377 cv
11.4834 24.377 11.4614 24.375 11.4414 24.3711 cv
11.3735 24.3613 11.3315 24.3379 11.2876 24.332 cv
11.2734 24.3301 11.2598 24.3291 11.2456 24.3311 cv
11.0186 24.3604 10.7285 24.5283 10.6235 24.6855 cv
10.5195 24.8428 10.6367 24.8887 10.5415 25.0352 cv
10.4604 25.1602 10.3677 25.1504 10.3677 25.1504 cv
10.3677 25.1504 10.3638 25.1855 10.3687 25.2295 cv
10.3706 25.2471 10.3735 25.2637 10.3794 25.2822 cv
3.09863 41.2021 mo
8.94873 34.9717 li
8.94873 33.1523 li
8.28564 33.1299 li
8.28564 33.1299 7.82959 33.0029 7.94238 32.5518 cv
8.04443 32.1445 8.47754 32.2363 8.47754 32.2363 cv
8.47754 32.2363 8.37549 31.8613 8.75781 31.6904 cv
8.82666 31.6582 8.89063 31.6445 8.94873 31.6436 cv
8.94971 30.4365 li
1.63965 38.2207 li
2.01465 39.3271 2.51074 40.3184 3.09863 41.2021 cv
30.2764 14.0498 mo
30.2764 32.7822 li
30.4844 43.9717 21.3306 47.9424 15.2915 47.9424 cv
9.25146 47.9424 .0976563 43.9717 .305664 32.7822 cv
.305664 14.0498 li
5.8916 14.0498 li
5.86182 13.7041 5.95557 13.4629 5.96484 13.4521 cv
13.5957 11.9238 17.2866 11.8516 24.9116 13.4561 cv
25.0757 13.6543 25.1064 13.8662 25.0786 14.0498 cv
30.2764 14.0498 li
cp
18.9966 31.7256 mo
18.8008 32.3584 li
19.2388 32.5049 li
18.9966 31.7256 li
cp
18.9077 31.5391 mo
18.9385 31.4365 18.8428 31.4082 18.8618 31.3652 cv
18.8755 31.333 19.0088 31.4053 19.0884 31.4424 cv
19.1685 31.4795 19.2915 31.5117 19.3237 31.6211 cv
19.3555 31.7295 19.7744 33.1592 19.8145 33.292 cv
19.8594 33.4414 19.9478 33.3994 19.9214 33.4678 cv
19.9106 33.4951 19.7876 33.4355 19.5444 33.3398 cv
19.3428 33.2598 19.2427 33.2344 19.2427 33.2021 cv
19.2427 33.1357 19.4468 33.2451 19.3984 33.1064 cv
19.3667 33.0127 19.2964 32.7676 19.2964 32.7676 cv
18.7334 32.585 li
18.6538 32.8574 li
18.6138 32.9932 18.7417 32.9707 18.7178 33.0215 cv
18.7046 33.0498 18.6245 33.0137 18.5205 32.9707 cv
18.4204 32.9307 18.3774 32.9229 18.3818 32.8936 cv
18.3867 32.8457 18.4668 32.915 18.5034 32.8174 cv
18.5415 32.7178 18.8794 31.626 18.9077 31.5391 cv
19.6226 29.0811 mo
19.6226 29.7373 li
19.6655 29.7529 19.9907 29.9609 19.9907 29.5557 cv
19.9907 29.1504 19.6226 29.0811 19.6226 29.0811 cv
19.1255 30.5156 mo
19.1255 30.415 19.2646 30.5537 19.2646 30.3936 cv
19.2646 28.9844 li
19.2646 28.8076 19.1846 28.8145 19.1846 28.7441 cv
19.1846 28.6748 19.3398 28.7764 19.3765 28.793 cv
19.4136 28.8076 19.8198 29.0166 19.8628 29.0381 cv
19.9048 29.0586 20.3374 29.2363 20.3374 29.71 cv
20.3374 30.0361 20.0654 29.9834 20.0654 29.9834 cv
20.0654 29.9834 20.3374 30.1426 20.3525 30.3828 cv
20.3696 30.623 20.4014 30.8262 20.4014 30.8584 cv
20.4014 30.8896 20.4497 31.0293 20.5986 30.9014 cv
20.5986 30.9014 20.6157 31.1875 20.2896 31.082 cv
20.0767 31.0127 20.0166 30.8154 20.0015 30.6816 cv
19.9844 30.5479 19.9106 29.9043 19.6216 29.9141 cv
19.6216 30.5596 li
19.6216 30.7314 19.7227 30.6826 19.7227 30.7842 cv
19.7227 30.8486 19.5737 30.7461 19.4404 30.6924 cv
19.2427 30.6045 19.1255 30.5752 19.1255 30.5156 cv
17.1177 25.3574 mo
17.1177 25.3125 17.1997 25.3496 17.1997 25.3496 cv
17.7178 25.5361 li
17.7178 25.5361 17.8086 25.5674 17.8057 25.6084 cv
17.8027 25.6484 17.6294 25.5566 17.6294 25.7129 cv
17.6294 27.1729 li
17.6294 27.1729 17.6665 27.2705 17.8398 27.2002 cv
18.0127 27.1289 18.2695 26.959 18.2695 26.959 cv
18.2695 26.959 18.3916 26.8984 18.3618 26.9834 cv
18.3306 27.0684 18.2085 27.3389 18.2085 27.3389 cv
18.2085 27.3389 18.1816 27.4443 18.0425 27.4199 cv
17.9038 27.3955 17.5615 27.291 17.4668 27.2637 cv
17.3716 27.2373 17.1074 27.1563 17.1074 27.1563 cv
17.1074 27.1563 17.0537 27.1455 17.0537 27.1045 cv
17.0537 27.0645 17.2197 27.1084 17.2197 26.9756 cv
17.2197 25.5498 li
17.2197 25.4209 17.1177 25.418 17.1177 25.3574 cv
18.4497 25.8623 mo
18.4648 25.7852 18.6016 25.8818 18.8257 25.9727 cv
19.0488 26.0654 19.2114 26.1123 19.1987 26.1504 cv
19.1846 26.1865 19.0254 26.126 19.0454 26.2314 cv
19.0654 26.3359 19.3164 27.1592 19.3164 27.1592 cv
19.3164 27.1592 19.6074 26.4688 19.6147 26.4414 cv
19.6357 26.3564 19.5366 26.3428 19.5464 26.3018 cv
19.5576 26.2588 19.6455 26.3164 19.7168 26.3564 cv
19.7876 26.3965 19.9028 26.4336 19.8828 26.4824 cv
19.8628 26.5293 19.7778 26.4209 19.7437 26.502 cv
19.7095 26.583 19.1265 27.8906 19.1265 27.8906 cv
18.5435 26.0107 li
18.5107 25.9023 18.4395 25.9121 18.4497 25.8623 cv
17.4287 28.0313 mo
17.5034 28.0313 17.4888 28.3066 17.4995 28.3965 cv
17.5205 28.5684 17.5718 28.7188 17.5176 28.7217 cv
17.4365 28.7256 17.3398 28.4531 17.2085 28.3184 cv
17.0854 28.1914 16.6338 27.96 16.6338 28.916 cv
16.6338 29.7344 16.9888 29.7168 17.1826 29.6563 cv
17.3726 29.5957 17.4517 29.4463 17.4736 29.4609 cv
17.4966 29.4756 17.3164 29.8652 16.9204 29.9102 cv
16.5244 29.9541 16.1367 29.5664 16.1367 28.957 cv
16.1367 28.3477 16.4355 27.9746 16.8125 27.9746 cv
17.1157 27.9746 17.2046 28.1836 17.3345 28.1836 cv
17.4214 28.1836 17.3428 28.0313 17.4287 28.0313 cv
17.7715 28.2744 mo
17.7715 28.2129 18.0396 28.3213 18.2495 28.3818 cv
18.4595 28.4434 18.8555 28.5078 18.8555 28.6357 cv
18.8555 28.7939 18.8965 28.9453 18.8457 28.9453 cv
18.8145 28.9453 18.7505 28.7451 18.6865 28.6797 cv
18.5884 28.582 18.3887 28.5381 18.3345 28.5283 cv
18.2798 28.5176 18.2935 28.5205 18.2935 28.5586 cv
18.2935 29.0674 li
18.2935 29.0674 18.4287 29.1338 18.5034 29.1006 cv
18.5786 29.0674 18.5884 28.9482 18.6328 28.958 cv
18.6758 28.9678 18.6597 29.0596 18.6528 29.2363 cv
18.6455 29.4121 18.6665 29.5723 18.6216 29.5547 cv
18.5786 29.5381 18.5747 29.3887 18.4834 29.2998 cv
18.3916 29.2119 18.2905 29.1992 18.2905 29.1992 cv
18.2905 30.0293 li
18.2905 30.0293 18.3916 30.1406 18.6016 30.0732 cv
18.8115 30.0049 18.9604 29.8633 18.9946 29.8965 cv
19.0288 29.9307 19.0117 29.9775 18.9106 30.1367 cv
18.8086 30.2969 18.7544 30.3984 18.6528 30.3535 cv
18.5508 30.3096 18.3208 30.2217 18.1787 30.1582 cv
18.0366 30.0928 17.7417 30.0215 17.7417 29.9609 cv
17.7417 29.9004 17.8867 30.0117 17.8867 29.8359 cv
17.8867 28.416 li
17.8867 28.3447 17.7715 28.3223 17.7715 28.2744 cv
16.9756 30.7813 mo
16.9727 30.7412 17.0337 30.7568 17.1245 30.7852 cv
17.2158 30.8115 17.3247 30.8389 17.3994 30.9609 cv
17.4736 31.083 18.0366 32.0449 18.0366 32.0449 cv
18.0327 31.1768 li
18.0327 31.0615 17.9307 31.0586 17.9307 31.0107 cv
17.9307 30.9668 18.0088 31.0107 18.0908 31.0391 cv
18.1714 31.0664 18.2905 31.0791 18.2905 31.1172 cv
18.2905 31.1543 18.1855 31.0996 18.1855 31.2012 cv
18.1855 32.8379 li
18.1855 32.8379 18.1855 32.9092 18.1377 32.8438 cv
18.0996 32.792 17.2568 31.4346 17.2568 31.4346 cv
17.2568 31.4346 17.2598 32.2852 17.2568 32.374 cv
17.2534 32.4746 17.3657 32.4648 17.3657 32.5156 cv
17.3657 32.5674 17.2466 32.54 17.1724 32.5264 cv
17.0977 32.5117 16.9858 32.5234 16.9858 32.458 cv
16.9858 32.3936 17.0874 32.4922 17.0874 32.3398 cv
17.0874 30.9473 li
17.0874 30.8418 16.9785 30.835 16.9756 30.7813 cv
10.2134 26.6162 mo
10.2998 26.5859 10.5425 26.4824 10.5557 26.5107 cv
10.5898 26.5869 10.4297 26.5703 10.4824 26.7217 cv
10.5278 26.8496 10.8086 27.5176 10.8086 27.5176 cv
11.0547 26.5566 li
11.1074 26.3486 10.9395 26.4209 10.9258 26.3701 cv
10.9165 26.335 11.0488 26.2949 11.1235 26.2627 cv
11.1846 26.2344 11.3828 26.1494 11.3936 26.1748 cv
11.4194 26.2422 11.3184 26.2422 11.2656 26.4287 cv
11.2017 26.6504 10.8276 28.1543 10.7236 28.2109 cv
10.6646 28.2432 10.1494 26.9463 10.1094 26.8447 cv
10.0698 26.7441 9.93066 26.7822 9.91748 26.7217 cv
9.91162 26.6982 10.1274 26.6445 10.2134 26.6162 cv
11.6094 26.0361 mo
11.7695 25.9834 12.0527 25.8633 12.3564 25.6924 cv
12.3975 25.6689 12.5215 25.5918 12.5806 25.7031 cv
12.6416 25.8184 12.6875 25.9697 12.6504 25.9863 cv
12.5957 26.0088 12.5596 25.9639 12.4907 25.9268 cv
12.4297 25.8945 12.3516 25.8584 12.2764 25.8789 cv
12.2017 25.9004 12.0996 25.9453 12.0996 25.9453 cv
12.1006 26.4707 li
12.1006 26.4707 12.2866 26.4707 12.3086 26.3701 cv
12.3257 26.2891 12.3584 26.1826 12.4175 26.167 cv
12.4517 26.1582 12.4414 26.2656 12.4458 26.417 cv
12.4478 26.4688 12.4507 26.498 12.4517 26.5264 cv
12.4556 26.7119 12.4448 26.7734 12.4175 26.7783 cv
12.3667 26.7881 12.3237 26.6533 12.3115 26.6211 cv
12.2896 26.5654 12.1006 26.6162 12.1006 26.6465 cv
12.1006 27.4033 li
12.1006 27.4033 12.2446 27.3262 12.3086 27.2881 cv
12.3955 27.2373 12.5425 27.0684 12.5996 26.9678 cv
12.6558 26.8691 12.6777 26.7881 12.7295 26.7969 cv
12.7627 26.8018 12.6924 27.1279 12.6924 27.1279 cv
12.6924 27.1279 12.6875 27.2559 12.5806 27.3086 cv
12.4746 27.3633 11.8774 27.6416 11.8257 27.667 cv
11.7236 27.7148 11.6006 27.8027 11.5986 27.7549 cv
11.5957 27.6797 11.6978 27.7197 11.6978 27.499 cv
11.6948 26.2373 li
11.6948 26.2373 11.6904 26.1309 11.6094 26.1162 cv
11.5474 26.1064 11.4897 26.0771 11.6094 26.0361 cv
14.2026 26.9141 mo
14.2988 26.9258 14.3418 26.8877 14.3418 26.8877 cv
14.3418 26.8877 14.3096 27.1279 14.0586 27.1279 cv
13.7178 27.1279 13.7227 26.541 13.6265 26.3701 cv
13.5308 26.1992 13.3696 26.29 13.3696 26.29 cv
13.3696 26.8877 li
13.3696 27.0801 13.4897 26.9971 13.4897 27.0674 cv
13.4897 27.0957 13.3965 27.1123 13.3965 27.1123 cv
13.3965 27.1123 13.1357 27.1865 13.0396 27.208 cv
12.9434 27.2285 12.9014 27.251 12.9014 27.208 cv
12.9014 27.1318 12.9966 27.1807 12.9966 26.9707 cv
12.9966 25.7354 li
12.9966 25.4951 12.8584 25.5752 12.8555 25.5078 cv
12.8535 25.4678 12.9517 25.4492 13.0474 25.4248 cv
13.2085 25.3848 13.2695 25.335 13.4985 25.2813 cv
13.7197 25.2295 14.1074 25.335 14.1074 25.6436 cv
14.1074 25.9863 13.9146 26.0547 13.8086 26.1348 cv
14.2026 26.3271 14.0264 26.8926 14.2026 26.9141 cv
13.3677 25.4141 mo
13.3677 26.0859 li
13.3677 26.0859 13.6836 26.0654 13.6836 25.7021 cv
13.6836 25.2695 13.3677 25.4141 13.3677 25.4141 cv
10.4058 29.1611 mo
10.5864 29.0918 11.0615 28.9961 11.0615 29.4072 cv
11.0615 29.7012 10.8696 29.7695 10.8696 29.7695 cv
10.8696 29.7695 11.2168 29.834 11.2168 30.1221 cv
11.2168 30.4531 11.0566 30.6826 10.8755 30.7793 cv
10.7827 30.8281 10.2134 31.1035 10.1597 31.1357 cv
10.1064 31.168 9.97949 31.2373 9.96582 31.2061 cv
9.93262 31.1338 10.0586 31.1465 10.0586 30.9326 cv
10.0586 29.6016 li
10.0586 29.3193 9.92578 29.4443 9.92578 29.3701 cv
9.92578 29.3242 10.2197 29.2324 10.4058 29.1611 cv
10.3726 29.3037 mo
10.3726 29.8535 li
10.3726 29.8535 10.6826 29.7383 10.6826 29.4707 cv
10.6826 29.1514 10.3726 29.3037 10.3726 29.3037 cv
10.3784 30.0322 mo
10.3784 30.8623 li
10.3784 30.8623 10.8057 30.7734 10.8057 30.2559 cv
10.8057 29.8125 10.3784 30.0322 10.3784 30.0322 cv
12.2476 28.4463 mo
12.3057 28.4189 12.4585 28.3359 12.4766 28.3613 cv
12.5034 28.3984 12.4155 28.4063 12.3545 28.6699 cv
12.3315 28.7656 12.0444 30.2773 11.9375 30.3301 cv
11.9038 30.3477 11.4165 29.1396 11.3716 29.0439 cv
11.2915 28.873 11.2065 28.9883 11.1904 28.9268 cv
11.1807 28.8877 11.3135 28.8379 11.4248 28.7881 cv
11.4834 28.7607 11.6987 28.6309 11.7217 28.6572 cv
11.7666 28.708 11.6035 28.71 11.6816 28.8945 cv
11.7334 29.0186 12.0068 29.6201 12.0068 29.6201 cv
12.0068 29.6201 12.1665 28.9424 12.2158 28.7129 cv
12.2627 28.4844 12.0874 28.5977 12.0815 28.5479 cv
12.0786 28.5186 12.1665 28.4814 12.2417 28.4492 cv
12.2476 28.4463 li
cp
12.7407 28.2559 mo
12.7368 28.2168 12.8916 28.1904 12.9707 28.1689 cv
13.1045 28.1328 13.1895 28.1074 13.2456 28.1631 cv
13.3018 28.2197 13.5757 28.6621 13.5757 28.6621 cv
13.5757 28.6621 13.9287 28.1631 13.9565 28.1299 cv
13.9844 28.0957 13.9956 28.0488 14.1367 28.0459 cv
14.2988 28.043 14.3716 28.0264 14.3716 28.0596 cv
14.3716 28.1211 14.2705 28.0908 14.2646 28.2197 cv
14.2607 28.3203 14.2646 29.5137 14.2646 29.5811 cv
14.2646 29.7334 14.3687 29.6816 14.3687 29.7334 cv
14.3687 29.7832 14.3018 29.7627 14.0635 29.7607 cv
13.8677 29.7578 13.7358 29.7861 13.7358 29.749 cv
13.7358 29.6816 13.8398 29.7383 13.8398 29.6006 cv
13.8398 28.6904 li
13.8398 28.6904 13.4976 29.1895 13.4805 29.1895 cv
13.4604 29.1895 13.0435 28.5527 13.0435 28.5527 cv
13.0435 29.6426 li
13.0435 29.8174 13.2168 29.7148 13.2168 29.7832 cv
13.2168 29.8174 13.0845 29.832 12.9878 29.8564 cv
12.8755 29.8838 12.7778 29.9258 12.7656 29.8945 cv
12.7417 29.8271 12.8867 29.8643 12.8867 29.668 cv
12.8867 29.4941 12.8887 28.4941 12.8867 28.4209 cv
12.8804 28.2275 12.7466 28.3115 12.7407 28.2559 cv
10.1558 32.0381 mo
10.1558 31.9932 10.3477 31.9219 10.4756 31.8623 cv
10.7056 31.7549 11.4478 31.376 11.4478 32.2891 cv
11.4478 33.127 10.8594 33.2656 10.6738 33.3506 cv
10.4868 33.4365 10.2334 33.5596 10.2148 33.5186 cv
10.1816 33.4531 10.3154 33.4424 10.3154 33.293 cv
10.3154 32.252 li
10.3154 31.9902 10.1558 32.126 10.1558 32.0381 cv
11.0786 32.2939 mo
11.0786 31.6748 10.6836 31.9053 10.6836 31.9053 cv
10.6836 33.1777 li
10.6836 33.1777 11.0786 33.1699 11.0786 32.2939 cv
11.6567 31.3789 mo
11.6567 31.3369 11.7095 31.332 11.8057 31.2832 cv
11.9028 31.2363 11.9604 31.1816 12.0464 31.2568 cv
12.1318 31.332 12.5957 31.8652 12.5957 31.8652 cv
12.5957 31.1074 li
12.5957 31.0215 12.4468 31.1338 12.4468 31.0488 cv
12.4468 30.9854 12.5107 30.9854 12.6167 30.9424 cv
12.7236 30.8994 12.8784 30.7822 12.8784 30.8564 cv
12.8784 30.9473 12.7666 30.9199 12.7666 31.0381 cv
12.7666 32.5 li
12.7666 32.623 12.7554 32.623 12.7026 32.623 cv
12.6704 32.623 11.9316 31.6924 11.9316 31.6924 cv
11.9316 32.6846 li
11.9316 32.7754 12.1108 32.6504 12.1108 32.7354 cv
12.1108 32.7832 12.0034 32.8096 11.8965 32.8525 cv
11.7896 32.8945 11.6406 32.9648 11.6406 32.9111 cv
11.6406 32.8213 11.7734 32.8525 11.7734 32.7617 cv
11.7734 31.4756 li
11.7734 31.3789 11.6567 31.4541 11.6567 31.3789 cv
13.2856 30.7295 mo
13.2856 30.667 13.3867 30.6768 13.5786 30.6445 cv
13.7705 30.6133 13.9414 30.5488 13.9414 30.6133 cv
13.9414 30.709 13.8086 30.6338 13.8086 30.7891 cv
13.8086 32.2891 li
13.8086 32.3643 13.9097 32.3096 13.9097 32.3691 cv
13.9097 32.4443 13.7285 32.4121 13.5947 32.4121 cv
13.4556 32.4121 13.2798 32.4443 13.2798 32.3848 cv
13.2798 32.2842 13.4028 32.3848 13.4028 32.2891 cv
13.4028 30.8643 li
13.4028 30.7139 13.2856 30.8525 13.2856 30.7295 cv
27.5908 29.0869 mo
27.6924 28.6797 28.1255 28.7705 28.1255 28.7705 cv
28.1255 28.7705 28.0225 28.3955 28.4048 28.2236 cv
28.8286 28.0342 29.0396 28.502 29.0396 28.502 cv
29.2178 29.707 li
27.9326 29.665 li
27.9326 29.665 27.4775 29.5381 27.5908 29.0869 cv
12.8018 45.4541 mo
12.9038 45.0479 13.3364 45.1387 13.3364 45.1387 cv
13.3364 45.1387 13.2334 44.7637 13.6157 44.5918 cv
14.0396 44.4014 14.2505 44.8701 14.2505 44.8701 cv
14.4287 46.0752 li
13.1436 46.0322 li
13.1436 46.0322 12.6885 45.9053 12.8018 45.4541 cv
27.5796 20.5352 mo
27.6816 20.1289 28.1147 20.2197 28.1147 20.2197 cv
28.1147 20.2197 28.0117 19.8447 28.3936 19.6729 cv
28.8174 19.4824 29.0288 19.9512 29.0288 19.9512 cv
29.2065 21.1563 li
27.9214 21.1133 li
27.9214 21.1133 27.4668 20.9863 27.5796 20.5352 cv
25.6758 22.6123 mo
25.7778 22.2061 26.2104 22.2969 26.2104 22.2969 cv
26.2104 22.2969 26.1074 21.9219 26.4897 21.75 cv
26.9136 21.5586 27.1245 22.0283 27.1245 22.0283 cv
27.3027 23.2334 li
26.0176 23.1904 li
26.0176 23.1904 25.5625 23.0625 25.6758 22.6123 cv
23.7715 24.6895 mo
23.8735 24.2832 24.3066 24.374 24.3066 24.374 cv
24.3066 24.374 24.2036 23.998 24.5854 23.8271 cv
25.0098 23.6357 25.2207 24.1035 25.2207 24.1035 cv
25.3984 25.3096 li
24.1138 25.2666 li
24.1138 25.2666 23.6587 25.1396 23.7715 24.6895 cv
21.8677 26.7656 mo
21.9697 26.3594 22.4028 26.4502 22.4028 26.4502 cv
22.4028 26.4502 22.2998 26.0752 22.6826 25.9043 cv
23.1055 25.7129 23.3164 26.1807 23.3164 26.1807 cv
23.4946 27.3867 li
22.2104 27.3438 li
22.2104 27.3438 21.7544 27.2168 21.8677 26.7656 cv
12.5684 36.5283 mo
12.6704 36.1211 13.1035 36.2119 13.1035 36.2119 cv
13.1035 36.2119 13.0005 35.8369 13.3828 35.666 cv
13.8066 35.4746 14.0176 35.9434 14.0176 35.9434 cv
14.1958 37.1494 li
12.9106 37.1064 li
12.9106 37.1064 12.4556 36.9785 12.5684 36.5283 cv
10.4575 38.8242 mo
10.5596 38.418 10.9927 38.5088 10.9927 38.5088 cv
10.9927 38.5088 10.8896 38.1338 11.2715 37.9619 cv
11.6958 37.7705 11.9058 38.2393 11.9058 38.2393 cv
12.0845 39.4453 li
10.7998 39.4023 li
10.7998 39.4023 10.3447 39.2754 10.4575 38.8242 cv
8.3457 41.1201 mo
8.44775 40.7139 8.88037 40.8047 8.88037 40.8047 cv
8.88037 40.8047 8.77881 40.4297 9.16064 40.2578 cv
9.5835 40.0674 9.79443 40.5361 9.79443 40.5361 cv
9.97266 41.7412 li
8.68848 41.6982 li
8.68848 41.6982 8.23242 41.5713 8.3457 41.1201 cv
6.23438 43.416 mo
6.33643 43.0098 6.76953 43.1006 6.76953 43.1006 cv
6.76953 43.1006 6.6665 42.7256 7.04883 42.5537 cv
7.47266 42.3633 7.68359 42.832 7.68359 42.832 cv
7.86182 44.0371 li
6.57666 43.9941 li
6.57666 43.9941 6.12158 43.8672 6.23438 43.416 cv
1.27539 31.3145 mo
1.37744 30.9082 1.81055 30.999 1.81055 30.999 cv
1.81055 30.999 1.70752 30.623 2.08984 30.4521 cv
2.51367 30.2607 2.72461 30.7285 2.72461 30.7285 cv
2.90283 31.9346 li
1.61768 31.8916 li
1.61768 31.8916 1.1626 31.7646 1.27539 31.3145 cv
23.6328 16.0938 mo
23.7344 15.6875 24.1675 15.7793 24.1675 15.7793 cv
24.1675 15.7793 24.0645 15.4043 24.4468 15.2324 cv
24.8706 15.041 25.0815 15.5098 25.0815 15.5098 cv
25.2598 16.7148 li
23.9746 16.6719 li
23.9746 16.6719 23.5195 16.5449 23.6328 16.0938 cv
21.4966 18.3545 mo
21.5986 17.9492 22.0317 18.04 22.0317 18.04 cv
22.0317 18.04 21.9287 17.665 22.3115 17.4932 cv
22.7344 17.3018 22.9458 17.7695 22.9458 17.7695 cv
23.1235 18.9756 li
21.8398 18.9326 li
21.8398 18.9326 21.3838 18.8057 21.4966 18.3545 cv
19.3608 20.6162 mo
19.4624 20.209 19.8955 20.3008 19.8955 20.3008 cv
19.8955 20.3008 19.7935 19.9248 20.1758 19.7539 cv
20.5996 19.5625 20.8096 20.0313 20.8096 20.0313 cv
20.9878 21.2373 li
19.7036 21.1943 li
19.7036 21.1943 19.2485 21.0674 19.3608 20.6162 cv
17.2256 22.877 mo
17.3276 22.4697 17.7607 22.5605 17.7607 22.5605 cv
17.7607 22.5605 17.6577 22.1855 18.0396 22.0146 cv
18.4634 21.8242 18.6738 22.292 18.6738 22.292 cv
18.8525 23.4971 li
17.5674 23.4551 li
17.5674 23.4551 17.1128 23.3281 17.2256 22.877 cv
15.4478 16.0742 mo
15.5498 15.667 15.9824 15.7578 15.9824 15.7578 cv
15.9824 15.7578 15.8794 15.3828 16.2617 15.2109 cv
16.6855 15.0205 16.8955 15.4893 16.8955 15.4893 cv
17.0747 16.6943 li
15.7896 16.6514 li
15.7896 16.6514 15.3345 16.5244 15.4478 16.0742 cv
6.12354 34.5459 mo
6.22559 34.1396 6.65869 34.2314 6.65869 34.2314 cv
6.65869 34.2314 6.55566 33.8564 6.9375 33.6836 cv
7.36182 33.4941 7.57275 33.9619 7.57275 33.9619 cv
7.75049 35.167 li
6.46582 35.124 li
6.46582 35.124 6.01074 34.9971 6.12354 34.5459 cv
4.30469 36.541 mo
4.40576 36.1348 4.83984 36.2256 4.83984 36.2256 cv
4.83984 36.2256 4.73682 35.8506 5.11865 35.6787 cv
5.54248 35.4883 5.75244 35.9561 5.75244 35.9561 cv
5.93066 37.1621 li
4.64648 37.1191 li
4.64648 37.1191 4.19141 36.9922 4.30469 36.541 cv
2.48438 38.5361 mo
2.58643 38.1289 3.01953 38.2197 3.01953 38.2197 cv
3.01953 38.2197 2.9165 37.8447 3.29883 37.6729 cv
3.72266 37.4834 3.93359 37.9512 3.93359 37.9512 cv
4.11182 39.1563 li
2.82666 39.1133 li
2.82666 39.1133 2.37158 38.9873 2.48438 38.5361 cv
10.1416 11.5127 mo
10.8926 10.6182 li
11.7876 11.3691 li
11.0366 12.2646 li
10.1416 11.5127 li
cp
14.5547 11.2295 mo
14.5547 10.8926 14.9727 10.6191 15.4878 10.6191 cv
16.0024 10.6191 16.4204 10.8926 16.4204 11.2295 cv
16.4204 11.5684 16.0024 11.8418 15.4878 11.8418 cv
14.9727 11.8418 14.5547 11.5684 14.5547 11.2295 cv
6.60059 12.8125 mo
6.30566 12.8916 5.80273 12.8477 5.68848 12.4219 cv
5.57471 11.9971 5.98877 11.707 6.28271 11.6279 cv
6.57764 11.5488 7.08057 11.5928 7.19482 12.0186 cv
7.30859 12.4443 6.89551 12.7344 6.60059 12.8125 cv
20.8335 11.5127 mo
19.9385 12.2646 li
19.1875 11.3691 li
20.0825 10.6182 li
20.8335 11.5127 li
cp
24.6924 11.6279 mo
24.9868 11.707 25.4004 11.9971 25.2866 12.4219 cv
25.1724 12.8477 24.6694 12.8916 24.3745 12.8125 cv
24.0796 12.7344 23.6665 12.4443 23.7808 12.0186 cv
23.8945 11.5928 24.3975 11.5488 24.6924 11.6279 cv
10.6396 8.75977 mo
10.6396 8.75977 10.2646 8.56934 10.1685 8.49902 cv
10.0454 8.41016 9.84277 8.21973 9.84277 8.21973 cv
9.66846 8.50879 9.28857 8.93359 9.28857 8.93359 cv
9.28857 8.93359 10.1826 8.74707 10.6396 8.75977 cv
15.4365 7.8291 mo
15.2578 8.02832 14.9116 8.36914 14.5356 8.49805 cv
14.5356 8.49805 15.1548 8.48242 15.4224 8.47754 cv
15.4497 8.47754 li
15.7178 8.48242 16.3374 8.49805 16.3374 8.49805 cv
15.9604 8.36914 15.6147 8.02832 15.4365 7.8291 cv
20.2324 8.75977 mo
20.6895 8.74707 21.5835 8.93359 21.5835 8.93359 cv
21.5835 8.93359 21.2036 8.50879 21.0298 8.21973 cv
21.0298 8.21973 20.8267 8.41016 20.7036 8.49902 cv
20.6074 8.56934 20.2324 8.75977 20.2324 8.75977 cv
14.3745 4.15625 mo
14.3745 4.74219 14.8496 5.21777 15.4355 5.21777 cv
16.0225 5.21777 16.4976 4.74219 16.4976 4.15625 cv
16.4976 3.57031 16.0225 3.09473 15.4355 3.09473 cv
14.8496 3.09473 14.3745 3.57031 14.3745 4.15625 cv
13.8535 7.1123 mo
13.6455 7.14355 13.3516 7.22656 13.1797 6.85449 cv
13.0244 6.51758 13.6074 5.97168 13.8008 5.7959 cv
14.0508 5.56738 13.7256 5.32227 13.5347 5.58887 cv
13.4814 5.66309 13.0244 6.30859 12.6655 6.30859 cv
12.1094 6.30859 12.1416 5.65625 12.1416 5.65625 cv
12.1416 5.65625 11.5205 5.26074 11.5205 4.00293 cv
11.5205 2.88477 12.2598 2.34961 12.2598 2.34961 cv
12.2598 2.34961 12.2646 1.71289 12.7627 1.72852 cv
13.2598 1.74512 13.5815 2.42969 13.6138 2.47656 cv
13.8647 2.85449 14.1807 2.5332 13.9604 2.26367 cv
13.4395 1.62891 13.3296 1.12793 13.8994 .860352 cv
14.1064 .387695 14.7314 .0556641 15.4136 .00292969 cv
15.4365 .00195313 li
15.4585 0 li
16.1406 .0556641 16.7656 .387695 16.9727 .860352 cv
17.5425 1.12793 17.4326 1.62891 16.9116 2.26367 cv
16.6914 2.5332 17.0078 2.85449 17.2598 2.47656 cv
17.2905 2.42969 17.6128 1.74512 18.1108 1.72852 cv
18.6074 1.71289 18.6138 2.34961 18.6138 2.34961 cv
18.6138 2.34961 19.3516 2.88477 19.3516 4.00293 cv
19.3516 5.26074 18.7305 5.65625 18.7305 5.65625 cv
18.7305 5.65625 18.7627 6.30859 18.2065 6.30859 cv
17.8486 6.30859 17.3916 5.66309 17.3374 5.58887 cv
17.1475 5.32227 16.8218 5.56738 17.0718 5.7959 cv
17.2646 5.97168 17.8486 6.51758 17.6924 6.85449 cv
17.5215 7.22656 17.2275 7.14355 17.0186 7.1123 cv
17.0186 7.1123 16.8276 7.44434 16.5386 7.44531 cv
17.9824 8.52441 20.2495 7.91309 20.5537 7.12305 cv
20.5537 7.12305 20.1694 7.19922 20.1738 6.79688 cv
20.1768 6.55273 20.4248 6.4209 20.7598 6.37207 cv
20.6895 6.21777 20.6548 6.0332 20.6665 5.83203 cv
20.6997 5.26563 21.0898 4.79102 21.5396 4.77051 cv
21.9888 4.75195 22.3257 5.19434 22.2925 5.75977 cv
22.2764 6.04492 22.1685 6.30664 22.0088 6.5 cv
22.3374 6.6123 22.5698 6.78125 22.5386 6.97754 cv
22.4585 7.49707 21.9775 7.36914 21.9775 7.36914 cv
21.9194 8.55566 23.7295 8.7832 24.1924 8.47656 cv
24.0098 7.79199 24.2827 7.58594 24.4917 7.40137 cv
24.6406 7.26953 25.0835 6.99707 25.1445 6.95703 cv
25.2827 6.86719 25.3545 6.6748 25.2676 6.60352 cv
25.1865 6.53711 25.0054 6.65234 24.9194 6.74805 cv
24.7974 6.88574 24.5825 7.21191 24.2456 7.12305 cv
23.8384 7.01563 24.0146 6.5498 23.9458 6.29883 cv
23.5117 4.71582 23.8828 3.6123 25.4658 2.94922 cv
25.4658 2.94922 26.0674 2.31543 26.6074 2.60059 cv
27.1245 2.875 26.8037 3.71973 26.8037 3.71973 cv
26.9634 3.79492 li
27.5415 2.74609 28.3774 1.98535 29.5767 1.95508 cv
30.4268 1.93359 30.8364 2.43457 30.8696 3.12109 cv
30.9434 4.64941 29.3818 4.08008 29.5034 3.50879 cv
29.5034 3.50879 29.1255 3.54785 28.9175 3.87988 cv
28.9175 3.78418 28.9297 2.87695 28.1196 3.35645 cv
27.8887 3.49316 27.4805 4.17871 27.4507 4.26563 cv
27.3496 4.56641 27.4956 4.61426 27.3384 4.9082 cv
27.2158 5.1377 27.0435 5.19141 26.9697 5.35156 cv
26.8945 5.51172 27.0015 5.82813 26.8994 6.03125 cv
26.7754 6.28027 26.6045 6.29883 26.4927 6.52441 cv
26.4038 6.70215 25.2725 9.58496 25.2725 9.58496 cv
25.2725 9.58496 25.7227 9.87305 25.6367 10.3008 cv
25.5225 10.875 25.1577 10.751 24.9634 11.1279 cv
18.8218 9.54785 12.4648 9.53906 5.89453 11.1006 cv
5.69775 10.7568 5.34766 10.8613 5.23584 10.3008 cv
5.14941 9.87305 5.59961 9.58496 5.59961 9.58496 cv
5.59961 9.58496 4.46875 6.70215 4.37939 6.52441 cv
4.26758 6.29883 4.09668 6.28027 3.97266 6.03125 cv
3.87061 5.82813 3.97754 5.51172 3.90283 5.35156 cv
3.82861 5.19141 3.65674 5.1377 3.53467 4.9082 cv
3.37744 4.61426 3.52246 4.56641 3.42139 4.26563 cv
3.39258 4.17871 2.9834 3.49316 2.75244 3.35645 cv
1.94336 2.87695 1.95557 3.78418 1.95459 3.87988 cv
1.74756 3.54785 1.36865 3.50879 1.36865 3.50879 cv
1.49072 4.08008 -.0712891 4.64941 .00244141 3.12109 cv
.0356445 2.43457 .445801 1.93359 1.29541 1.95508 cv
2.49561 1.98535 3.33057 2.74609 3.90869 3.79492 cv
4.06982 3.71973 li
4.06982 3.71973 3.74854 2.875 4.26563 2.60059 cv
4.80469 2.31543 5.40674 2.94922 5.40674 2.94922 cv
6.98975 3.6123 7.36084 4.71582 6.92676 6.29883 cv
6.85742 6.5498 7.03369 7.01563 6.62646 7.12305 cv
6.28955 7.21191 6.07568 6.88574 5.95264 6.74805 cv
5.86768 6.65234 5.68652 6.53711 5.60449 6.60352 cv
5.51855 6.6748 5.58984 6.86719 5.72754 6.95703 cv
5.78857 6.99707 6.23145 7.26953 6.38037 7.40137 cv
6.58984 7.58594 6.86279 7.79199 6.68066 8.47656 cv
7.14258 8.7832 8.95264 8.55566 8.89551 7.36914 cv
8.89551 7.36914 8.41357 7.49707 8.3335 6.97754 cv
8.30371 6.78125 8.53467 6.6123 8.86377 6.5 cv
8.70361 6.30664 8.59668 6.04492 8.57959 5.75977 cv
8.54639 5.19434 8.88379 4.75195 9.3335 4.77051 cv
9.78271 4.79102 10.1738 5.26563 10.2065 5.83203 cv
10.2178 6.0332 10.1826 6.21777 10.1128 6.37207 cv
10.4478 6.4209 10.6968 6.55273 10.6987 6.79688 cv
10.7026 7.19922 10.3184 7.12305 10.3184 7.12305 cv
10.6226 7.91309 12.8896 8.52441 14.3345 7.44531 cv
14.0444 7.44434 13.8535 7.1123 13.8535 7.1123 cv
f
87.0405 31.2119 mo
84.5244 31.4336 li
84.0483 31.2969 83.2666 31.0762 82.5527 31.0762 cv
80.3257 31.0762 78.8633 32.3516 78.8633 34 cv
78.8633 35.5469 79.8325 36.3125 81.1074 36.7207 cv
81.1074 36.7539 li
79.9346 36.8564 79.4414 37.2813 79.4414 37.8252 cv
79.4414 38.4033 79.8325 38.6924 80.9717 38.9131 cv
80.9717 38.9473 li
79.7813 39.0664 78.3706 39.6953 78.3706 41.0723 cv
78.3706 42.4492 79.5435 43.5371 82.2295 43.5371 cv
85.0854 43.5371 86.6494 42.6025 86.6494 41.0215 cv
86.6494 39.0156 85.0513 38.7773 83.4536 38.6582 cv
81.5835 38.5225 81.2773 38.3525 81.2773 37.876 cv
81.2773 37.3154 82.0425 37.2305 82.6035 37.1455 cv
83.0117 37.0771 li
85.3916 36.6865 86.1396 35.4111 86.1396 34.0508 cv
86.1396 33.3203 85.8164 32.6572 85.3916 32.334 cv
85.3916 32.2998 li
87.0405 32.2998 li
87.0405 31.2119 li
cp
84.5757 41.0039 mo
84.5757 41.7861 84.0483 42.6025 82.4336 42.6025 cv
81.0054 42.6025 80.4443 41.9219 80.4443 41.0889 cv
80.4443 40.1885 80.9546 39.4404 82.4844 39.4404 cv
83.9634 39.4404 84.5757 40.1377 84.5757 41.0039 cv
83.8613 34.0342 mo
83.8613 35.5137 83.4365 36.2275 82.5186 36.2275 cv
81.6177 36.2275 81.0396 35.5811 81.0396 34.0508 cv
81.0396 32.5723 81.5493 32.0117 82.5015 32.0117 cv
83.3174 32.0117 83.8613 32.4873 83.8613 34.0342 cv
87.8223 32.2324 mo
88.5537 32.2324 li
89.2334 32.2324 89.3184 32.3857 89.3184 33.5244 cv
89.3184 37.6719 li
89.3184 38.4541 89.2334 38.7432 88.3667 38.7432 cv
87.8223 38.7432 li
87.8223 39.5762 li
93.2456 39.5762 li
93.2456 38.7432 li
92.3447 38.7432 li
91.4775 38.7432 91.3926 38.4541 91.3926 37.6719 cv
91.3926 34.8838 li
91.3926 33.4561 92.1743 32.4023 92.9565 32.4023 cv
93.6196 32.4023 93.8066 32.8779 93.8237 33.7285 cv
95.4556 33.7285 li
95.4556 31.2803 li
95.0645 31.1445 94.5884 31.0762 94.0957 31.0762 cv
92.7183 31.0762 91.7495 31.6543 91.1714 33.0313 cv
91.1377 33.0313 li
91.1377 31.1445 li
90.3047 31.2461 88.7915 31.3486 87.8223 31.3486 cv
87.8223 32.2324 li
cp
98.4175 35.4619 mo
98.4175 33.1504 98.9277 32.0625 100.321 32.0625 cv
101.715 32.0625 102.226 33.1504 102.226 35.4619 cv
102.226 37.7744 101.715 38.8623 100.321 38.8623 cv
98.9277 38.8623 98.4175 37.7744 98.4175 35.4619 cv
96.2417 35.4619 mo
96.2417 37.9785 97.4653 39.8486 100.321 39.8486 cv
103.178 39.8486 104.401 37.9785 104.401 35.4619 cv
104.401 32.9463 103.178 31.0762 100.321 31.0762 cv
97.4653 31.0762 96.2417 32.9463 96.2417 35.4619 cv
105.541 32.2324 mo
106.169 32.2324 li
106.85 32.2324 106.935 32.3857 106.935 33.5244 cv
106.935 37.6719 li
106.935 38.4541 106.85 38.7432 105.982 38.7432 cv
105.438 38.7432 li
105.438 39.5762 li
110.199 39.5762 li
110.199 38.7432 li
109.96 38.7432 li
109.093 38.7432 109.008 38.4541 109.008 37.6719 cv
109.008 34.8838 li
109.008 33.2861 109.858 32.4023 111.1 32.4023 cv
112.018 32.4023 112.596 32.9463 112.596 34.1533 cv
112.596 37.6719 li
112.596 38.4541 112.511 38.7432 111.644 38.7432 cv
111.405 38.7432 li
111.405 39.5762 li
116.063 39.5762 li
116.063 38.7432 li
115.622 38.7432 li
114.754 38.7432 114.669 38.4541 114.669 37.6719 cv
114.669 33.6602 li
114.669 31.8242 113.377 31.0762 111.711 31.0762 cv
110.334 31.0762 109.366 31.6543 108.788 33.0313 cv
108.753 33.0313 li
108.753 31.1445 li
107.92 31.2461 106.408 31.3486 105.541 31.3486 cv
105.541 32.2324 li
cp
116.964 32.2324 mo
117.593 32.2324 li
118.272 32.2324 118.358 32.3857 118.358 33.5244 cv
118.358 37.6719 li
118.358 38.4541 118.272 38.7432 117.406 38.7432 cv
116.862 38.7432 li
116.862 39.5762 li
121.827 39.5762 li
121.827 38.7432 li
121.384 38.7432 li
120.518 38.7432 120.433 38.4541 120.433 37.6719 cv
120.433 31.1445 li
119.343 31.2461 117.832 31.3486 116.964 31.3486 cv
116.964 32.2324 li
cp
118.12 28.4414 mo
118.12 29.1719 118.562 29.7158 119.361 29.7158 cv
120.161 29.7158 120.603 29.1719 120.603 28.4414 cv
120.603 27.71 120.161 27.166 119.361 27.166 cv
118.562 27.166 118.12 27.71 118.12 28.4414 cv
122.727 32.2324 mo
123.356 32.2324 li
124.036 32.2324 124.122 32.3857 124.122 33.5244 cv
124.122 37.6719 li
124.122 38.4541 124.036 38.7432 123.168 38.7432 cv
122.625 38.7432 li
122.625 39.5762 li
127.384 39.5762 li
127.384 38.7432 li
127.147 38.7432 li
126.28 38.7432 126.194 38.4541 126.194 37.6719 cv
126.194 34.8838 li
126.194 33.2861 127.045 32.4023 128.286 32.4023 cv
129.204 32.4023 129.783 32.9463 129.783 34.1533 cv
129.783 37.6719 li
129.783 38.4541 129.696 38.7432 128.83 38.7432 cv
128.591 38.7432 li
128.591 39.5762 li
133.25 39.5762 li
133.25 38.7432 li
132.809 38.7432 li
131.94 38.7432 131.855 38.4541 131.855 37.6719 cv
131.855 33.6602 li
131.855 31.8242 130.563 31.0762 128.897 31.0762 cv
127.521 31.0762 126.553 31.6543 125.975 33.0313 cv
125.94 33.0313 li
125.94 31.1445 li
125.106 31.2461 123.593 31.3486 122.727 31.3486 cv
122.727 32.2324 li
cp
142.804 31.2119 mo
140.288 31.4336 li
139.812 31.2969 139.029 31.0762 138.315 31.0762 cv
136.088 31.0762 134.626 32.3516 134.626 34 cv
134.626 35.5469 135.596 36.3125 136.871 36.7207 cv
136.871 36.7539 li
135.697 36.8564 135.205 37.2813 135.205 37.8252 cv
135.205 38.4033 135.596 38.6924 136.734 38.9131 cv
136.734 38.9473 li
135.544 39.0664 134.133 39.6953 134.133 41.0723 cv
134.133 42.4492 135.307 43.5371 137.993 43.5371 cv
140.849 43.5371 142.413 42.6025 142.413 41.0215 cv
142.413 39.0156 140.814 38.7773 139.216 38.6582 cv
137.347 38.5225 137.041 38.3525 137.041 37.876 cv
137.041 37.3154 137.806 37.2305 138.367 37.1455 cv
138.774 37.0771 li
141.154 36.6865 141.902 35.4111 141.902 34.0508 cv
141.902 33.3203 141.58 32.6572 141.154 32.334 cv
141.154 32.2998 li
142.804 32.2998 li
142.804 31.2119 li
cp
140.338 41.0039 mo
140.338 41.7861 139.812 42.6025 138.196 42.6025 cv
136.769 42.6025 136.208 41.9219 136.208 41.0889 cv
136.208 40.1885 136.717 39.4404 138.248 39.4404 cv
139.727 39.4404 140.338 40.1377 140.338 41.0039 cv
139.625 34.0342 mo
139.625 35.5137 139.2 36.2275 138.281 36.2275 cv
137.38 36.2275 136.803 35.5811 136.803 34.0508 cv
136.803 32.5723 137.313 32.0117 138.265 32.0117 cv
139.081 32.0117 139.625 32.4873 139.625 34.0342 cv
146.102 34.6123 mo
146.102 33.1846 146.526 32.0117 147.988 32.0117 cv
149.451 32.0117 149.808 33.2188 149.808 34.6123 cv
146.102 34.6123 li
cp
151.881 35.5986 mo
151.881 35.207 li
151.881 32.3516 150.743 31.0762 148.005 31.0762 cv
145.149 31.0762 143.925 32.9463 143.925 35.4619 cv
143.925 37.9785 145.149 39.8486 148.005 39.8486 cv
150.845 39.8486 151.694 38.3867 151.711 36.9238 cv
149.978 36.9238 li
149.96 38.1992 149.451 38.8623 148.209 38.8623 cv
146.119 38.8623 146.102 36.7539 146.102 35.5986 cv
151.881 35.5986 li
cp
153.225 32.2324 mo
153.854 32.2324 li
154.534 32.2324 154.619 32.3857 154.619 33.5244 cv
154.619 37.6719 li
154.619 38.4541 154.534 38.7432 153.667 38.7432 cv
153.123 38.7432 li
153.123 39.5762 li
157.882 39.5762 li
157.882 38.7432 li
157.645 38.7432 li
156.777 38.7432 156.692 38.4541 156.692 37.6719 cv
156.692 34.8838 li
156.692 33.2861 157.542 32.4023 158.784 32.4023 cv
159.702 32.4023 160.279 32.9463 160.279 34.1533 cv
160.279 37.6719 li
160.279 38.4541 160.194 38.7432 159.328 38.7432 cv
159.089 38.7432 li
159.089 39.5762 li
163.748 39.5762 li
163.748 38.7432 li
163.306 38.7432 li
162.438 38.7432 162.354 38.4541 162.354 37.6719 cv
162.354 33.6602 li
162.354 31.8242 161.062 31.0762 159.396 31.0762 cv
158.019 31.0762 157.049 31.6543 156.472 33.0313 cv
156.438 33.0313 li
156.438 31.1445 li
155.604 31.2461 154.091 31.3486 153.225 31.3486 cv
153.225 32.2324 li
cp
f
85.6973 22.5762 mo
88.9106 22.5762 li
88.9106 21.7432 li
88.4688 21.7432 li
87.6016 21.7432 87.5166 21.4541 87.5166 20.6719 cv
87.5166 14.1445 li
86.4287 14.2461 84.9155 14.3486 84.0483 14.3486 cv
84.0483 15.2324 li
84.6777 15.2324 li
85.3574 15.2324 85.4424 15.3857 85.4424 16.5244 cv
85.4424 18.8535 li
85.4424 20.6045 84.8135 21.5225 83.3687 21.5225 cv
82.3994 21.5225 81.8555 21.0293 81.8555 20.0264 cv
81.8555 14.1445 li
80.7676 14.2461 79.2544 14.3486 78.3877 14.3486 cv
78.3877 15.2324 li
79.0166 15.2324 li
79.6963 15.2324 79.7817 15.3857 79.7817 16.5244 cv
79.7817 20.502 li
79.7817 22.083 80.8013 22.8486 82.4844 22.8486 cv
84.2017 22.8486 85.2725 22.1006 85.6636 20.9609 cv
85.6973 20.9609 li
85.6973 22.5762 li
cp
89.8115 15.2324 mo
90.4404 15.2324 li
91.1206 15.2324 91.2056 15.3857 91.2056 16.5244 cv
91.2056 20.6719 li
91.2056 21.4541 91.1206 21.7432 90.2534 21.7432 cv
89.7095 21.7432 li
89.7095 22.5762 li
94.4697 22.5762 li
94.4697 21.7432 li
94.2314 21.7432 li
93.3643 21.7432 93.2793 21.4541 93.2793 20.6719 cv
93.2793 17.8838 li
93.2793 16.2861 94.1294 15.4023 95.3706 15.4023 cv
96.2886 15.4023 96.8667 15.9463 96.8667 17.1533 cv
96.8667 20.6719 li
96.8667 21.4541 96.7817 21.7432 95.9146 21.7432 cv
95.6763 21.7432 li
95.6763 22.5762 li
100.334 22.5762 li
100.334 21.7432 li
99.8926 21.7432 li
99.0254 21.7432 98.9404 21.4541 98.9404 20.6719 cv
98.9404 16.6602 li
98.9404 14.8242 97.6484 14.0762 95.9824 14.0762 cv
94.6055 14.0762 93.6367 14.6543 93.0586 16.0313 cv
93.0244 16.0313 li
93.0244 14.1445 li
92.1914 14.2461 90.6787 14.3486 89.8115 14.3486 cv
89.8115 15.2324 li
cp
101.235 15.2324 mo
101.864 15.2324 li
102.544 15.2324 102.629 15.3857 102.629 16.5244 cv
102.629 20.6719 li
102.629 21.4541 102.544 21.7432 101.678 21.7432 cv
101.133 21.7432 li
101.133 22.5762 li
106.098 22.5762 li
106.098 21.7432 li
105.655 21.7432 li
104.789 21.7432 104.704 21.4541 104.704 20.6719 cv
104.704 14.1445 li
103.616 14.2461 102.103 14.3486 101.235 14.3486 cv
101.235 15.2324 li
cp
102.392 11.4414 mo
102.392 12.1719 102.833 12.7158 103.632 12.7158 cv
104.432 12.7158 104.874 12.1719 104.874 11.4414 cv
104.874 10.71 104.432 10.166 103.632 10.166 cv
102.833 10.166 102.392 10.71 102.392 11.4414 cv
111.845 15.1816 mo
112.559 15.1816 li
112.95 15.1816 113.051 15.2832 113.051 15.4023 cv
113.051 15.5381 113.018 15.708 112.966 15.8271 cv
111.199 20.876 li
111.165 20.876 li
109.533 16.082 li
109.481 15.9121 109.379 15.708 109.379 15.4873 cv
109.379 15.2998 109.549 15.1816 110.06 15.1816 cv
110.621 15.1816 li
110.621 14.3486 li
106.371 14.3486 li
106.371 15.1816 li
106.575 15.1816 li
106.949 15.1816 107.05 15.2832 107.271 15.8447 cv
109.907 22.6787 li
111.913 22.6787 li
114.547 15.7588 li
114.717 15.3174 114.871 15.1816 115.228 15.1816 cv
115.449 15.1816 li
115.449 14.3486 li
111.845 14.3486 li
111.845 15.1816 li
cp
118.136 17.6123 mo
118.136 16.1846 118.561 15.0117 120.022 15.0117 cv
121.484 15.0117 121.841 16.2188 121.841 17.6123 cv
118.136 17.6123 li
cp
123.916 18.5986 mo
123.916 18.207 li
123.916 15.3516 122.776 14.0762 120.04 14.0762 cv
117.184 14.0762 115.959 15.9463 115.959 18.4619 cv
115.959 20.9785 117.184 22.8486 120.04 22.8486 cv
122.878 22.8486 123.729 21.3867 123.746 19.9238 cv
122.012 19.9238 li
121.995 21.1992 121.484 21.8623 120.244 21.8623 cv
118.152 21.8623 118.136 19.7539 118.136 18.5986 cv
123.916 18.5986 li
cp
125.157 15.2324 mo
125.888 15.2324 li
126.567 15.2324 126.652 15.3857 126.652 16.5244 cv
126.652 20.6719 li
126.652 21.4541 126.567 21.7432 125.701 21.7432 cv
125.157 21.7432 li
125.157 22.5762 li
130.58 22.5762 li
130.58 21.7432 li
129.679 21.7432 li
128.812 21.7432 128.727 21.4541 128.727 20.6719 cv
128.727 17.8838 li
128.727 16.4561 129.508 15.4023 130.291 15.4023 cv
130.954 15.4023 131.141 15.8779 131.158 16.7285 cv
132.79 16.7285 li
132.79 14.2803 li
132.398 14.1445 131.922 14.0762 131.43 14.0762 cv
130.053 14.0762 129.083 14.6543 128.505 16.0313 cv
128.472 16.0313 li
128.472 14.1445 li
127.639 14.2461 126.125 14.3486 125.157 14.3486 cv
125.157 15.2324 li
cp
133.982 22.3047 mo
134.476 22.5078 135.716 22.8486 137.11 22.8486 cv
138.896 22.8486 140.783 22.083 140.783 20.0947 cv
140.783 18.8027 140.137 18.3096 138.674 17.833 cv
137.28 17.374 li
136.499 17.1191 136.057 16.6602 136.057 16.0146 cv
136.057 15.334 136.549 15.0117 137.332 15.0117 cv
138.556 15.0117 138.878 15.5557 138.878 16.8643 cv
140.307 16.8643 li
140.307 14.5352 li
139.813 14.3145 138.674 14.0762 137.382 14.0762 cv
135.376 14.0762 133.982 15.0117 133.982 16.5586 cv
133.982 17.8838 134.935 18.5986 136.906 19.1934 cv
138.471 19.6689 138.708 20.043 138.708 20.6719 cv
138.708 21.4541 137.995 21.9131 136.906 21.9131 cv
135.733 21.9131 135.411 21.1309 135.411 19.9238 cv
133.982 19.9238 li
133.982 22.3047 li
cp
142.125 15.2324 mo
142.754 15.2324 li
143.435 15.2324 143.52 15.3857 143.52 16.5244 cv
143.52 20.6719 li
143.52 21.4541 143.435 21.7432 142.567 21.7432 cv
142.023 21.7432 li
142.023 22.5762 li
146.987 22.5762 li
146.987 21.7432 li
146.545 21.7432 li
145.679 21.7432 145.594 21.4541 145.594 20.6719 cv
145.594 14.1445 li
144.505 14.2461 142.993 14.3486 142.125 14.3486 cv
142.125 15.2324 li
cp
143.281 11.4414 mo
143.281 12.1719 143.724 12.7158 144.522 12.7158 cv
145.321 12.7158 145.764 12.1719 145.764 11.4414 cv
145.764 10.71 145.321 10.166 144.522 10.166 cv
143.724 10.166 143.281 10.71 143.281 11.4414 cv
147.787 15.334 mo
149.283 15.334 li
149.283 20.2129 li
149.283 22.3213 150.234 22.8818 151.952 22.8818 cv
153.601 22.8818 154.553 22.0664 154.553 20.2471 cv
154.553 19.873 li
153.125 19.873 li
153.125 20.7402 li
153.125 21.4717 152.853 21.7939 152.241 21.7939 cv
151.628 21.7939 151.356 21.4717 151.356 20.7402 cv
151.356 15.334 li
154.077 15.334 li
154.077 14.3486 li
151.356 14.3486 li
151.356 11.9512 li
149.877 11.9512 li
149.742 13.668 149.368 14.1611 147.787 14.3486 cv
147.787 15.334 li
cp
159.176 22.3721 mo
158.36 24.4463 li
158.14 25.041 157.918 25.3984 157.272 25.3984 cv
156.507 25.3984 li
156.507 26.2314 li
161.063 26.2314 li
161.063 25.3984 li
160.502 25.3984 li
159.839 25.3984 159.652 25.2451 159.652 24.8887 cv
159.652 24.6162 159.822 24.2256 159.924 23.9873 cv
163.256 16.0146 li
163.495 15.4531 163.647 15.1816 164.004 15.1816 cv
164.378 15.1816 li
164.378 14.3486 li
160.774 14.3486 li
160.774 15.1816 li
161.488 15.1816 li
161.777 15.1816 161.896 15.2324 161.896 15.4707 cv
161.896 15.623 161.812 15.8271 161.709 16.0654 cv
160.163 20.0264 li
158.769 16.252 li
158.667 15.9805 158.547 15.7422 158.547 15.4873 cv
158.547 15.249 158.717 15.1816 159.006 15.1816 cv
159.636 15.1816 li
159.636 14.3486 li
155.419 14.3486 li
155.419 15.1816 li
155.674 15.1816 li
156.083 15.1816 156.287 15.4365 156.626 16.252 cv
159.176 22.3721 li
cp
169.683 18.4619 mo
169.683 16.1504 170.192 15.0625 171.586 15.0625 cv
172.98 15.0625 173.491 16.1504 173.491 18.4619 cv
173.491 20.7744 172.98 21.8623 171.586 21.8623 cv
170.192 21.8623 169.683 20.7744 169.683 18.4619 cv
167.506 18.4619 mo
167.506 20.9785 168.73 22.8486 171.586 22.8486 cv
174.442 22.8486 175.667 20.9785 175.667 18.4619 cv
175.667 15.9463 174.442 14.0762 171.586 14.0762 cv
168.73 14.0762 167.506 15.9463 167.506 18.4619 cv
176.704 15.334 mo
178.2 15.334 li
178.2 20.6719 li
178.2 21.4541 178.114 21.7432 177.248 21.7432 cv
176.704 21.7432 li
176.704 22.5762 li
182.126 22.5762 li
182.126 21.7432 li
181.226 21.7432 li
180.358 21.7432 180.273 21.4541 180.273 20.6719 cv
180.273 15.334 li
182.5 15.334 li
182.5 14.3486 li
180.273 14.3486 li
180.273 12.665 li
180.273 11.6455 180.682 11.1523 181.378 11.1523 cv
182.007 11.1523 182.229 11.5264 182.229 12.6484 cv
183.656 12.6484 li
183.656 10.4043 li
182.977 10.2686 182.229 10.166 181.396 10.166 cv
178.301 10.166 178.2 12.0361 178.2 14.3486 cv
176.704 14.3486 li
176.704 15.334 li
cp
f
grestore
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 14.0%%AI8_CreatorVersion: 14.0.0%%For: (Jan Peter Birkner) ()%%Title: (RUGR_FWN_Zernike_EN_Black.eps)%%CreationDate: 4/1/14 9:37 AM%%Canvassize: 16383%AI9_DataStream%Gb!R&l#L&gQ7gfCTQ`@-*U^.MZtR[9l^("BFn:pI<nP^!b,AP'TZCW4AI]'1Ei/0e)f,3aYRa;sY0)^)gN'0GO4`+;^r!sWn]<0)%YMWWVSR;?jr;&'RlpBCE??Wl6>tX5#-_L=_o5F?3%la#KV<0\ijeLma)NA*/T>%qm?erE0\N\j,hB$$2>i4=cZ$Uq>Er,Bk:S.M;%J,f*;@fQ#qk47SNkM;7Fd"h(^^H91iqs*#!S,LSJ]3$Q!nU#`_&%<oNm_@EEhZa#8e`k&bZi04;l2L$nQfH,qoRm!'s8C^Nh;&q4%GcMng3r])Mros46mG7F]GOWSsmJP6M[INFXYFg79h:H"^\aurirpZ=6?:R2jd/Q<.f5L@IT&8D\SD9ZB?iA_l3kh*L\!JI$5L[7@%;2d5jM/c$/KY#?`OYJlp.-I[=o\KN;mD[3'?KSN%UV'79*Q?Up_*>@+Qn<4QeGFDg9&9<=btCY+K$q\t=qC2>>_)c+kPIJnZ2=LA%l1rlcp$GO1S$1.6AK@AugjOPK+(Jc.9$YQInrn"K?0lM/E-6Ug5)XdTo'#PGch8.^naeCe:2$(:s6&S6dbqa$RihBKK6FCNhU/-I%Z"nU%=Qig6^[?#NNT^OQ^YN7FGPt#Qn^A'0pp.8"XjLC.SKII_dic7X^=tSqbP45CH`P3UncJ*:3l>1ACjtr$d)OZrk<GPFIGp2a%N]uMi#dM=p]TCH(hOL34l5:P6a`%(i+rU9-a8]`C@j:@/p/h)JK:J!P5PoHgkkEuW$blLP;#&S_q3XSm7_b_i0sKhnZE@N(gmnkr%GN8#gkPd-HkJ,jc;7l?K7f'e4qRq+LrV.5n=T:q,dnaJLT>i9DIJK%tQD[?K<i+0X8tf:^:odK#^-nU,;k)XC9cq.6l/&C>n'm6o%7__m&j'uhHHq[<W+4F#GO/^CIQh8an02&":?bW>.^O.KVaG=E?1*1_9r03ekcXV@n$2mW$kaUd[C.7$509r0W(X_^$L;&ImVshW!%aKtM5oK3#0^5.69Sn+FgBDNhKS\CTm,a?$"hC5c[n#'4Y?1^4dH23UWX:L:qk#c4mAr1u'-frN_oJ1S-S%P:]N\s-2q*hFLqri7h%8QJ[%>(.eK7Xn;dqED!bb_eMUhabH1^ZauorTSMD3?e#V[A*,bhdmOV8n;8irU`S+!0%ujK/Jk_afJDkR5`?JI(>3-7P<_apI`b6%055uEe:t[IPY#4P:Wlh_:[.c?GA8Gr:#@=>,1"^+e:t^*aX<`tllDKSH%SpPBGe)XC86n!V$JY\?XQT>hIUdalgeAM2]=\W"Q(P9%VcJ&SoIeJ5cfLLP>]uu@Z`L^]NV)_'IgQ)!h(I#9q#n<PmOZT2Uj\qSd/Bb)H@"!NG5>HTbjo!D)A-SESt<9>Z!t@jYOj>@HLLVF%r@)"!l`Ul\-hC.07E6;ERX`J`-_KHNaS\tceLLTjJ'+tGjPR)uh+`A^HR:tFJ'+tXcfO'U:\j\EP8>kTR=EA_0>Ea$cTgNXZX:Sq%C$k,.=]bDXr[!&SmgJA>jndt>He(N[hs'S_?e"f?jg18.CdS0`:gXXtfuo`SGPV9^(Jd6biT3`/M/2`24[&dNjR4a/Gj]&a8cPmg%B;%Q1]"W,:k\lEnd%<IrVst8n*D^^J06<q]k!1/X^X8\GTDX'6573i(NPE3#Oh0_#T%eY7n'3r?f]3?a2H9<:J!YV_(OCi58M]iV%ATmF2CWdOjmmpeNDoGN64)!]kd8+:jkF@O"Hmp:FqjG.H'BA=0.i$&BU7KLI[GYV]YL7^4RaSt8l1pN'HMTl!-7I+Pr<iJcZ^:T$%SY+Kae0E:GQM.l4du;[(&UbMhn/#]ja7W)O&,4e"$sgm*'$n@[dWbYq-)!kt&R$pgatE9<4YjuYDtr([]CPNh[Sb0d]4(=ghQ]39%XA+T4kJtn&<dK3m-W:CV^T\<_`+m\'Ng8g%0p+shhCS:EPfcdN\W2R%FJ0SKZj;PakI=eBC7uMmfjm9X?eP#g<%)j,'H)U2Lg">j%7XrIa:7)nqaJ9QF79tN^oX'"Nd[30RT>^cMNYp8?n(+qkor0n+_u+;Q*)QdPpWLoKkEFceh(fp1VWSd`cu55bJO^!:i>oMEGu'El%G+oG?W0QB+)'+"SG<A7=j5#"/=XZ,]ZBOegrC5/PZ2XPs\O2IVo_Bh51hlX@kLmS/j\bmS-XU2NOc1rC42/ES-1)Jrs%ka0Y()\.%g#)TQ6]ZKd<g4O%p\/$#O4H[n)p6-`YP9L4qpuYQ`fL,hk5*oghd-2"rT)F?B@h(q]C0W.p\St)op^HgTAG")qc&.B[r:/phsHJ"%cJO*EhN!>>F0jcG&')Tc:]1%IVdJe?)#F5Z>gP.-IbA(5^KnE.jQ,TBpWk3GDa3%Ml\gt-PFETQf(5s6?cGl:`Z37;-h\.CT%s:O%H[`673kMd`je(<,"T*.fhk$!SGdDaGoBu=Mh07K&(Y8!I8(P;hN)KQQ*q+?u%pXO2,nkD#:"nOp:![_FrnG+t[!qo^j+mZ*HTs^)%\2aNYk2bo*kGJj(i.7NTS)e4sKs6$>Huj^UIX=*>BgH'tgt\Hm?L5H*p%E9Qq7b^!2L[X#3ZEan9P9CZqXQ3U(O+d9FRjV$IGXqp%P$<BN*Tleq@pE0oe#+;IM>S%d:aMJVTDmg7lJuu8[L8]jEP#lDs8VZQ-h#')0O>4HfC=q%2?*18"8_UAm=)hIf7.kR1MZg3PGcM+%G8-cI]2W8^IuA#bq;c8VhB/"+/M-Cl"1TB]nZEJ:l/WH/3k=8/IJq))ePL:C]C?\=>pLA$M5>O(6If>1O1V%Q^G<8Y_!54_^67H@%@M?8,e/fMeFn4h>&,_'!P[i\p[%j<"FmXUmY!moT)sn@K/h9Hs@f]M(76u7?Z+dG$Run>XN[#MI)g1BoC)=./-=$c;lgDT?S_Alm%b;ousa!`Y$+eV='nEtmO13?Ubfn[r]JaphWW'1#=IXJ4;N:A1\\$W"QPiVN'K&8`draQgJ,Wi7AbKDL=]7:1pQ,bRD?^nGt^iYPA%F'cjTE-F>qmrQjaQq)#jhuGI:FB!V7/rK6]AHQfV;d=#N]LFX(r)J<S:\)@WBq\#'bre'BN7VV-TZ@KU[M^"4T;CGlO'5<s?$Mrs%:liUYBGWZCSr&PcqK1Cg)J$eb&j-kWKlcfuRu:$[C*`rJ;+I*:d>jm!@>.X"GZQG&h\DUlo`.@t!+Kkf!5W(VdV+3?eU#J(TN<m=%l`7\D9GfQ,0s6\Z*"b0mgO]:_;"PJRc8oY!V:%XL]iE8bOg]iO`'df?TRCX8\h1hX)K&6=cu[C9Ku_&h*MFU:acAU7]']Nl'0ren%+M6j,[V]N0/(f58#MpmH`jBCaKk;:9FSsF$#C/ddPT,!BGH&oU.drQr!,^T_D;$o5#K/@OTWGt%UNOp5?=f'E&kNuhe30?lY98E_%nGr/WQ,$7=#mUfd7gq;-_:$JPYMIcmd6k_oni$h6Q:M=*m)>^tjs-32(q1,:oic.Hb?ROB$*883B?up7nU-LJ0W(>pGSl_8T!:,T%)J:YQ5oo:P0JU7m%U-`f\1G#OR3\j[G/o,#\$[fmCYMf]3EYdUePk^*Y96T,C.ALlgtN*BT:m8#P)VFVW4S5e#J23Mfuo$$oPU:_%Wj0^>4O+a-H#8?<]J_k@jUgU[=(_aC]N3s93"0-09teq:D1r77//^_,P$jici="XQ8'7"$n6B6SfqUp3@*Yt1<d6p)K,Zq9.@F=G%)Z)/[ZL&e-d47b*n-T@UEL>D+CXC$HfFB;.EWqFqn4*aT$`#$2f"out2;2_TPNTcEZ\]R2n+%UTRW7IN4e<P!'r+]sB-t*m2:4c(%Na)dP$[.VHY9f0NN]8D"hf?3&&lF3SG2^NmNH_eCZmBZ&U<be7Bo]_+Jk8.pB,-K.%LVk<XfEG9[4MVc82?%HgVtW7O7-q\?TVJ?%Dpl)8!?jt38kQ3;JkPf4G>i^<ICTHZWXn'b"C6_t[/%oAR$nAbSl8TlmWCPBQqogje,)*_E*gRWF$%1I#]N4VdsqggHb^LW#_g'C%6k1FBa*sujP13Z$b.4fO7IX^D%A_KYP.#)GaZ';FSQc5_d47tM3'L2$(i[@C)`&R)/g#$b3DBi*Cj`>edF:3X8\dI^mZqN':+G$/%fF8&`9&Z5DOs+q=0Og=KVdg+B-lBttdg8tP`GgcD<I@QV;HTYK(nU]Gg.eG;M@K7aU*C6ch:BCYQe?d_VepT\>I=t9Um'L)9jT`f%LWQrhfoLXaHT0C;.NS.I=%5&MW+K^5A+d($#N*l<L4JR*fj1ln^oANIMgAsAa=>&-k8KOhS:1OU[2UCpZlR","BB*Po!s>`;@M-m%GQjt!#51Xoer?eOCMiBV30\/Vdkb<2CRJNfA4F57a0'8X`]!30r<^Oh=!DM0Q)+R)PJJDHgKG?9]&X":-6Y&oX6UoBNa6D\iLtDH%#`-INX;uOE3uEjUlH69kA7QX:f.hq,gY](..A'86-X^#DWf%.5D)Q\J(k_;0l,H\Wllk9uSjH"A9BdRe:,oth\ZYiT,Z$hr4t)dJ%FIoa)=C[H$^0ns8CqC@`A7K2j/rZfR9K,PIPCN7cM()$N"t+3@Ku+Qu"e`2M'8Xitb_gGX+GCNn=2ir0FKI&.Gh`%FQ3lFeS+9`i%Jpos5<PHS7NK9JGZ6.pf@.1>Xd7%nVm8XY_KN\Rsl%@E]lU"F*aprR4A=Ce9n3&2`Fl.BT\"nYmBk&lTPO16QPp+F_<eei??krcG%>)!g#K-=[!MS]#%;rGY-dQFDB(P$#PnZ!`LBEuY8OL@q]dgdCDdH6q+nc8qn`:T9=E1CdYke8.%57U0j[0(.=Y-TfM`LJW?8P`D`%3fWO%Lq.Y?+Ml5L\md)8*PJJ0V@ShBh'TD+X?#4%_%)4(gU/WRA]\VD2fRtaBUMj:l^:9I-NNUHMA-pP$FG_r]3+jnitEnEQg[c5%#!D*Vq_]&<&7!4U"jo<s@Bf%F.g-Y#_?]9tf420;d0Q8H6#(.JRNVT03XGqZqE0BSHB#h>L\1c]0Y(k$.=-eV-31Bt,TRG+5mKQ/%,4dLegf^Q0*\S8JSZsd>Bbm/&hF*WFFg:7k^Hcl\E!=i1%+ED4%X:UR?%jGQ>K..m[;!sd=5ueBYt6UO@C">(GgrP:`bLp%gUq28%6R8ge3)0+r%L1]lXdGI%VZ:QL1@E$;Aj*%i[HCr_&biA7_Ke4L!-p^\,.*j^"&+UV70H>Nm'E+m)D!:il>E+)1arI&O0[;9>FNok%[B3u:m'^QFISm!PQ'f#t%gM6UN@@-5,rfAF)Q=)OqAPY[<3Ur7HhOHU%-8h)XPJQ>$Y_H%^pGM5dS^:9`0iTA]4A7KO>Q3HZ:eF:%\OQ/!k[C]%OE^pR'#>$@`<L8.jLW!LOjF;7buupWMG6"l`Hk?Yn>9SkPb#[%FVN2&-pbDeCur1Z-Z^e:`LRq,1g=R$e0b**0nnd6%iC-sT[C2m>Cp;p):0=6W5`B,/rft?a;%C!q^Gf.I$VhjB^nIGhG&>U)#Fl.p;m'N#M/5?Z@W`?\4OKZb&JEPf+uuSg[t/fT;$\qa%.omghdmueJk#$!4"!"Y&'rrD6dK(6LNjXLAZ#@Ypf?lKH/4@mh*MaD.:rjnV8dAe3KqdGRGaghC,3D_H;p!]YY.[F4F9:C)(rr>!%=mV&'`QBib6nJ*=2Wt]S(F?JVd><j%&>+ju-3ftRFp(a8_6H@7Qo=]4OUgbb@5Y6meL.M'imW[!q.f!*DfWQK3'UgCp8/9N@"9"W%G-fl7A&eElh1>c!>BuU0+0^%jTGe0l3N!:/#rpt8B=1%ASfp[,PtiFQI"EA0.besHd?Kc&]l$>*cD3Zel+9_Ug\o;[DuRbj`\4O@%2P.o!3?Zj$HZHT87"2K^ZB>bRLq8Kc4Jl`sCd\(C]D[CiD.#t+n7/**_W1B@jh^2(FG-m)Oe%FFrZ20R+3E=u<.8kUdBd9NPTXHR%8sC07.1g.5P%,j''m.NX%5liLZ'?U2?aq[*U0A0g"L:)ucjpoP)2r+7&(5WC;1)<0`@DlgZ'k,'1im*H]`T=HHP6*DQ_Pf%J,pE?%:N0MN&-enk/d==KC-0]VB'?@YV2=lD3_2Vu<ULucn2J]`3Xp;6+&*m23f8M4&uj`[.AD!+lhOR;:MV;:b72JUkdYZ-SF\!BEj82c%K8GB=A=CPqlY/l\G?17q&t;eIG;hPk$-XTt%+(+j=\2s@0HG@gBV?6)2@9""b70QWX`aB9-h9i]5*DY>o$eI:pkJPe+T!+&<41:*%+S-56W549^/ip/?drl7NfH5B>5"KhVO=g*e\Z'M/-`#1Q*-CCQXPQ];FtN5SAhPgO59\)$5pC<)4")X<o*5`@O$B1'bAdM:jcm#p%?<05ub)+n,S#3j,9r,H73=QE[\h9bSq)[*i6]u@)C+4EhAX4<=@2ZGghYZ$a5We"!a.Yq;6tU0h3+Js<=mI"SEKS9ED)8Y$jt'^n%*-$ABGlO-<ZKT@FQ$k`#4V#%GF.L7t3P`Gh#sr:$*^u6T#OKFI,dY@"AH"(KPLPmhFQ=$mQ=E[3QOWbI9eW8Y'QKAQ8>[CK/K$=#%T+>msRq0tfU,&^QXm!V+$uD#qC\)=#1\8f1&79"((j=.@Eo7h;@h8-5,;?5NZ!V;d+qg6CE2Yh+!.Vt$gW@T2D(G.\-le+TmOep2%\k&V5o>VXqDVT*>4di<:dsfE%R(I<jgq<8`8=U1lL(^Poohc,,_RWbq*SZkmU4gY=YroZIQ2T>=U\2e+`f_G66j]u>q$9T!@kL?S%TC"NIcIg/NE"0cMeW[VVaE3UbSD4---rD8cRmP<Net(EcOp<+[/*&Dk9U%oM('ElQ*BA8P.4p*I\pjXNT#aD:o(qh[n6)V<B_(0`%ZY6p*.dEG;n^a^fKkHL-6(Sf<`!8NnUR5D"qe>+W3jJ8GK_Qa['G$A>1ck_l8J+0Y23iqEjB+J\9<TFE3(S]eaH<dE*AirGR!@WC%hD>bUqg!,_,V=c[90=FASftpj7)[_h72uOf,G!=e)JuSh$R4'L.o0)\,"=ck\\E]?fM`l+Oi@D;CU0pKq_+^spSAn!OsH,\'.0K?%CoJne:hDkl`)5:Z16QLBGB#a%%+M2>V.CeNoMjG6Q;9]%]ehPrlI"S:mtFQ_3n0A0NVQ5\Qu@5L?jdula'<g$WF]8TQHPo9>Dg49%ZB?k`J.s&tb;rT.1>WNqaZb/e?AS9fqZu1#l]sl>_DH>MN".Fu4i2T:KHLqkaj$"@3)M\P]R#[=/:87cj]Nc8&h+$rE?[2[3`oZg%l=H1(!6=i<Pfe&3kV($q'8!_9jcF$I_)RIsOGH%saVIK]N"aO>]ZQq#9WhZPh9_QF,e:`p]I[A36beFZ=n]f/K[P";)\I+#Bo'Js%K[]HM%Pm$="2u#QnVP%RrI\(:]@2Tt=q"F]gP=&+Io6SqkjUlM1!@r\<JKRE1=i2k_T\Q*ScDH#0-\gId?J?V<5BH#Ot\6+23p/m%XE9cL74`gALuQbXU(l;Gh?bJ`WHRhq0r$##IOMe;3aG*\)83R++2HUG+8,Pg:%fM44U%pdH/=s!%$$j\Io;T1lU]I'QT[0+I*bG!%;InD8KCm9*J1PRI]nAkFM,LY%6)i#s3T)=52`/3^aBg-mNifG7ha(YgVjKY=EZ:!kCrRh5-D$Kh8-_L*_"nb)6QjOLj^YEk">_,1%3"-!9>B,H)WO(_O)HUradS/``F=lLW*MA2'c0X6UksWigBF%CP/pn:CiaBLb;Y1a3;iVjnUFt:\R&[M6kBg*H7&MtB\;..3HY=C2%-@s-q\J6/WJKr&+M8WL&UR''q8D-W+:#lO"[)e:=_IN\1KsTo1?1LbOBBEd5ZYD6Z56e;Yic%q)K&jm'1gh\Q,!p)1/G>te^*Wo>%0O#lU:4am<0_S$S)dJ2,X9I>?bX*gW7MKF.WU_j\,ceddJ*c/iVEAb>B<-p7?6F0UGqb2s6H<1n53kTr*E/p[CNL*8lfhG2(_S\H%6,]bu/:qt_Di$+h-\k(3q9tPJM!REJ]MH+*dJ!p;.Jf`4n_j+dCo]_//K`c`%o(nj'E-jP*3@tC(AT";r))3,9'%/!3Z:Fu;?fA,%5GYH#=$;N7Q)#+"4(au8TPA+F,(!I)^hJ&nJ9h&D\p%sVZbM".4a7f-Ec=3ea?Fhg5B:j1FNcrt&3M:%4=Fl*.$?]74?ReO4F$)F%5G4#Y5Kk0/pjtJ[\R2(gSU`jYEKM>sj0qFI#u'hW`UHfS)'@qP4k+L;*=Qf.$ZWGJlTo-%r&6BA*op;u<`:@3CmSlhn;[WXK3rJ'%U,+kZ`Kkc[=WY8&nipO,,Xl45?LFCNC%Rr9dfhaWLG!Kii>j(&,(&$S**itX:/lu8i;/RQ_Zd0ZaRCM+nRBrjUIP^ZrrA-F7Q)Xk%bU+b9JV*ff^Fa:-fK/.Bq5gG<V)?troYJR_59$o&DHV/JM;=6[Z]$c(^ansA*#A$CT-#Q@rO/iD9JehBDhkut2B`pBl<:!a7MVsq%50_dsa#I3rSUG5&*DbfJ:/KWP*KqA8>*MR+3<70qQ8!n*/kN-_[Fc0)LTFmQ+nBXU6jM"k_m[L4!mGjo9Mts4!d##.Bg`3D*2+SM%5Gt4U)(W=J!kFrq>BLB,4+U8Z+?(kmWUnjs#@e$U-io,M^hbZ@]nDVjVpX+l+G]?_Te9(Y*'?.cD%Gkc.h0'B*E4hPdKpS6?bfSt%S`e?0gK"WMA[(GC[t(8@:TG\dDPm<*JX=#0CJ":P-24Q40W8)fJ@$^3>`sBkG^O5[.W!14A-B9X)J#NBJjICd>pD.7MG0EBG]nAR%Ydub3;L7Be>?q=<=).O2e6J+B8dFGJ%/8MB_D:st@%u1<#7DMNVBBqp<!F/&=D"U[9SGiKS0Poo6a@6AXDJb7<9[n%9r%n#!,sf^%%LG!V+0`UOLAGqO'p>AX_>u/l^ad/o>B%6>"Ot=!kS$*?:_B":G?+HUa=0-OTQK*<EdHKk6Q;XrYeaQE'eM,YGc7@qj^]1"J_K;O%9spuG?q?:!3oEg?@0KT^lj;hId(6ssqU)Ef!15MufQ=X;XKpGE0L$i^M94dgo.=D"Z?D'ZO>2T7Gm2<ng58J6$<)To7<#<7*LuOL%M&'UAi_U/n-#3K9J0J#VJ[*uFX$uk2'Yl1!HmF)3WX9G*0BTKF1q%XZSD_A5Y+#\i`*ZX?!dL^t7pU_S/MRf#&BT[1DN=s;bAjh=%=k",3F^ZTHLk&g._bq$j@+mVW>BIS-fN^<>E<VmbIFYTG^e,K^C=;4imAr5>Au>cg4j%p$EhX-<q\ZeZBq]t+@Bo=0"c$(8CU4KN%B+8ihE(K!R:/ncia-pNV'uVBKRaXRW\6[[g,NM[^;j/"H4u11k5i#s*b9rG?BHEWR'AJ!*d^"!%,NB7oFBL"`e5:Z&l+ljP8L^VH%/?ofrMHbWtFb`o,ABGS'iuH]nck>c-0a`C1Q#%3HJ6p`8J].4PrZLEp)mI7C?O`Cn+]I1)*O7U=e^KqUZ93bA.9FDq>>H^d[rn,B%Z\#?<:5]T/lr8Z+,2nG]9H=ZI7PE4YJPjED]BHX2X'L2YLO;'@Pc2YBQm6JPCihR-49-_59B_mrg"Y*CP_R;YUu1_ZE*a00@N\m[%TeV]8!$=:2a<Z.@].QaoJRl>L.IL@`%smX7@k!V#@1)k`;K(&upB-N5.Yj60f<($-.C>dY[TQCpTWpElr'B'[_2%$Plk3p8J44i"%d_Q:.ber[:&cbeIS0q^C\u[L<e%Wo%Wl06481o>q"/8aqOQY4V0K<,o9fKa@Aa/MBaGl/oa4`gs0ah^ddAJ(OA6gXE1tDb*N>4>P%!gE#b=9fh+`S1ZR4L$OTpe:uW#'Zng[0*P"if#,&Mbo61U)7HDd4#@_VEmKo0K0Z\RcG<([PFlo6//[S6U3;0'VI/o5*%U=kn#Wi%5S.7POQ6`-phpY$a4d\(W;6f6F:u'(d"0ZAEs8nOfX+=)i0ZGqjg#@)/ubSIS449b,Tpll'1<'c8pJ^[D;rVOmT%q0,A,DhAiS.,%3lhqsbG0b'Ne4AhpI\R..DW=4+`.JF_$Y1!LZCaY9.me86VJ8$+Am<P:1I/-#XsurU`?r@Q7SgY-_UZ5;,pHc]8m+K;[pXDpXd2Z%[81s(19YQJD[U%:`7Ln"No]R)E/P;tU6Gr'WBcaeO!XN]X9EDQ'FI8BE'`taU"h`d+d=aFeV)BtY=BfhI'jfrkdlL48_>J9RS-_J%>'+VYjbn.HWc_]],`:&kH('k!QAC_MejC;W"Onh@&=M5p2LlhaJW"$MX+opKiOs#2[0I@hBgPBqOOQ+/0Oa-5gFcJ%!^aKZJr.T"%M0Q$CVH1sngU9tobDV$q#\I#,2DB5tlBTf.7A1!q\8!YS4H_B[BE<!LaGbgnlEcLO!sDZO$(!m^'8FJW5$.ZW,]/GKi4b254?@rc%6>'19W^M0Gns=ka^+j1MO08jll<%Cgs-Y"<:*l[qVC`BNZd>CZG".!f_OAlgKK8H<TTJaF.JH\*14'B.nPPPYg:U.)+N6_e20-to%K>GTW!0V7#Zb(dhI;Pe(=Q,/Vhg'\QO4Ebn!S7c.04bMthLjeYUM*CaV0`WDkL_8=91g+GFnSPm>eN..l08oB8CU[Vo<ADR5dR'd%i@7K);LjsSctYSV884,=*c5:bDDiWdR"F"j=NpK/A*^qre>AC;`9$>@R9R2B<fjWcC]K?9/YBgc<@Uc[H1ma5F`G?t0P2opTN%DF%0hW8fK4<7QcL)s2NK8h\_?-/8PBYNRD3/ig3TK'[1Q^0AqWSQ]0_cH:QnAinA$]R`\]mN\EJ59OaSp&X\H[osMb3/[*+$@Z>f]AE%/-;08iNi^a0qX+rjk?5`0?5?^TEtS'8ZWEmZ<G+jgEhA=m'stC8hCDV1Mi,W*429K@uR&u#<g^2Lom=,mXhrQP(#(C=VTm\i%5m#%VP>ad=l[\9XTHsk37^(SB41IHagdK_cSb%1Rp38MaVscAmGMQ[g[c2N4i'N0aeqoEiE2)TC)%&I:2[>&<Jm[GL^%bAS+NJ?:U!IC%,UnGG?rXDgXS`:V#eY-7V6/?o7+0t$0O$di5oeOR)S=Y6(>W)Ps1OjZ25IhO?s$n-<*dTie83je).1q$V87nGKD(1_JFiVue\"t*%4*X]S\VrsT8]TA1#UU8Ug;6e_,9*m\b!'ZVRSoZ,p]PRDCt]X68u>on;`^;=)E)!%T.o$3!B)56FYGW8Khl5ff&l=5V(\;SFHCV-%-/Us-i_qNBY(f?7pTSL,0HmYJ5s`c%.&+PH*+"f.1E?$9UQp@T(8I?h8AUsYZ@H&2P%*+Q*?%C(c)ITV%RA/^`%%p'<g-BccHnrs%W<1'Pg&f,d+*)-%D1hZc\PodLLqtE/?LrgRS@fc'nHOpfP-BLG4/NFLU8A*c2Yei#qboe./=#QbBZju(e;,6Hr";7mK9G2T7%mIi%1M%<#.JK'L5L)h6/d6md$?EEY1s-,Win.B@],c[Bb,[RM>7AFUWiPrg/Z"XW]Zbp2?lTg'Q7I]BQ9hYACpHrcblX&b,KpmiE)iAD%JI1*COs@)/Xa'rpJSKhl[U!NmoI>D51fSD5.0^<t@+0:4);;Mm?c<0$KnKpO(c+_QdP*>`RdX[mRU^$JPiH*?Y/UK@)]LG5Cs<[L%o0S/t>WZWR3/ETAD5eP+PbCsKFYI6^JX\LSq*l:A9#k!:GR#&5#`)bl`k"k0"QScFR.+RKc;FeH8OA(5)@UT+IsD("$cZ'0&)*2W%Y:IFg--_:W76`YscFJs0#R>?*].9:aSC<EU[X;KoFnM^J1GMdN>j@c>'O&DU$ipO)RljV:[MUmRUj,R[O_bOSPpH@f/1Ep<"'e2a%Ej9#A)hcu-rCI>D!c/3a*1Ldhc)=6eT6OJ"37FA)IOU,ja$Z.0/@$R4o+VVMM]@mT(':mj;L"[HE9!q\Sijhn&4`p;S"$i#&ger[%@(,e5N+.I+%T\tmMon)DksTTc68(cGFBQO=K>WuTOL=KJdO4SH6<),(W`E$)?p'Eg,T'qkRZ8tm*\dc@h7!Q@PME3OD/%b_U8AN%%NON',jV(\)WE*%[=&"n7bkGHjP[]4k"GW9Sg(mPmQ+A/kE)Ohu!DS1:E6TtO0sfQYK+5oT3/=PrKdHu)/aE=eSRqtE[LP?c0W3Z=%YMSLJ99qm.Cb(s`N?gJhRb9GobaiW)(agXWf5j6*S#B9nA?bCt;)"'GLUf;b#>3.<:4JLC3TAsl%08jsZN(\-#FYk0[e3NYL#7U*%LBYo]o7.`6@4iGqFA^4A[5&K\WPuKXJ7^9QTl&PIT$%%jNJ;[RRoD8/oSXiH'JJu^QO3s4UP"fh'S;V:/ilf?>XVGoRP5[,V?$M"%BF\tqK:.<;U+KIUL"3%8`:e3X[TmUKWU:23QGb4;,$0XHmT?(tDT&GP[:inZ[hnc[M<:Lb"ge8eL1>7<gJZS1_2HKR!Md.=ciN&I%6#t,EMq9a*D#XDPW0sc&78lB!fm\.EgP/@\a8q_A+XI///='\uY@*%fF+_=c6_MRI%aT1['%)L!(k^8Up/lUM@WOolFr%-q\Q#T<%U+W]ko:RfY/OEkq:%hgJQXAj;^3p$%n>,.A6//1j+Y1jKhZp]&)EO6>r'/\H%r*Sn);)d\@o4ZM%MQ`4]1]rMFheFk;@K;[DSTYc%?8deU:2eV02QDV+\(lq490'oDibGfrah^>=L@LIZF.2M68g8]Q$g?(=`uk<H!R'^M@/7c[$<j=<4:uSQ.B0l7Bh@"b^Y6P8&1g`L%DXHKsG]n-#>Dg4s@pHt/c3XnA3YZjIqkpfaUhK9T9*E$cW%K7:n6_6oZ_L#fT#mC""'hX%luVpXXgI<5>@+^W,]]/!Mc)H6bdFIN%UZ.`L<G>l<$5ZZMO:NQW)-JO34:b.A>I\O'[0)2t6i%CED[6.eS'Z6a$hL0fHakK(c5.A%IF":LU`N:R</O6PbOWY'Kt6:0Aobsf%*Lb8kP.XQlUZsI;l@V^D"N(6LiLO98:4!Gm:tbYO0]b[fQlY7&lRSDFHhfAt=<o=k5V9U4-6./CW?.^%PB8VVE03E0!Z,J_d$LOQ%i!<_4JFcCDh(+1f61%o,S$6Sb/6tY4!g=H0)<=C[dd;QV7qF['H0qBV$P4j]&-.8%_cjc)a__,H10afqJAhp,'^ijMYsbp97G-rU%e'`s]H(Mg-1$QO6lXCmXPl6[+a(_/3YmtKMV;qBS.A:#21?eXU#a'5U1cpKM`<AUHjQ`NR+JKGJ?E9Z3^]X4LJgDb$@+R5TK'M4B%#j726,EL"0E4U[LD,`&HSnrGHgOW#:8IIEn8,8f^d20@JWpAKKq>sH:Q>b\jWnoeXqRp<['[8`NW\m$fZ"+P`Lo2H!WF<qI"B]-O%(AFM+^Ld:'l.8RVTfHfg7UptmPnb!ILdln_Z%3C&YFjC:(e)KW]$N!XK+M/S;S#+01?!T%m=9=u:<^sk&:M^R1eAr7gej_P;/SO)%p7fW923'mt8=@ASX-cOfX4UkCf:kt:#W@=`17WgHZn5bY#FI8K8#opLV_DU^#`dV\BGp?so5Ip4LD\>r]&Zu%NqrtbfR;96G,hbL%Wl0iTnSCi'*<(ZbdNaF\KUl=I-C0rY!d8UZ"%7BIjT>P(,ZRO>6b4J.WY_lm*HW*6is;+[e]`5ZLh2NQW)T-$V!tgc1"u20R)HH&%8\#Ld6*]:fa/35b%%aMp/J0^#JKhqs]^b3:drT&7eQ*RO'FY`n"nkO6j'BMHJeeWX%k(%&I:_9[FpB&/#fhM>1f-B?D&MGa</`*2%^5Rn1+P9b3:M3B(!YnfbrKB.A5(S9#JYPaj+cm-E:_^Ushmh-k)2qn'C"fbNbH!L33I]t6Jhg9@oA)k%qOm*760iFp%>_knV>Miq%QWR[]%Oa-\GAnCUb)U!b#R=9FWW$E1:F9s-*KW4VA'_*]Dh)>uJM8p(+@`X6g'NMsiJ?DKSh)]dDsJ9]L`/#4?+m#8C5gYZSIu=)%ZD_+@P/V\gP6oB14Gq7TW\fZ@3_4XT[glJlI&Phk9?&,sC57\//-*mPGgrB8?!B%$a/n5u1,C-L;$R,b=:%uQ*#77%G-:)s$Oegk%$(MC7:f3Y6^Td>2Fus@s4qIU4EkIK#dV2\Dr$JWl(9)C'+:2`0!ED:bGo<!"=r<2$euJDC..XY%!-8G",Il`c]7u&:d6TeK]sEN/%l8@9-3Z"]/G+????rc7aV#prVZta"=eq&uDGi($*`T1\FR=OS!^bcC#!Z!rIH&[9ZoD)d6Walr>#J*JU19D_V2D-)kV%mPW<P4un%NmTAuhV4r5$B2;>'J*?*X])DDLi>Uen-,S-W$NcnbsDW528J<K]93s5?*;'PJIY[2]%j+!(b`Qbh^L6b]C"lT7\)maQ%jR)&at6/%"dc=naTUXD+V!>fW8LdL!&1>J!L_'O,qhlIU2_Jr+er%_O?ekt:u-MjZ`,nBVZ]UI"nXMMq$Zj'C:"K#hR3]c<#d^pjJ5iX6Ve$[%l?!N"HGF)slM=9rM5kD)[6qWJ5r`"!ka[K]BbAUL(cn["C9/=V[4*X^&'*!g#6D\qG?/0-77<TLSga^CQVrNu*u>1h*$AaSqaNI\%QW"(Ri,_T-RY%u%,;QO#=[<PCOa[sc7fE\`RAD#10V*/F00-g11X1^XWKu==,>4tWCrac@D+=X3&99Mn8`MR$CL<1!ZF+eI+utpq%bo*"JVtgLb_E]mjB*T;QJ7<Xm1X'C.33j2X4g?h5M94bU-]=X`Ftg1_M[inj;_Brk\O(8R%Y62gdFhRP8J'8%[[@1G_7;/08['0Z%6KhD!86JSNEi0N>H3pu3N2=6d=KUjpK/Eh6,*f@4O;CB''lY!b[[V<Q(g=g.(,[lZ=He/Mc*N&Z2+ZP;g3"m$'k$kPI>OsEgV./a%Oq%gu,8rk7R+PB#b!g/IiM%gE[dT*mpJ<$qN,=S+MSp8!&mcoU2N,(b<n1G_#NioMp&oIadFkt'>JNL[=q":jkVuVMnfNG![[e2!%+HXa7@hHN,#qiH6Bpg^XCQ9nI(Q]qO4ff3NQo`)MM<m*k.WsgsGRXsX0VTjpr]pcmHdJhB=?s8U;@5c,5pFc,m;]FC*3EIW)]_2D%V-BuUFq$Ed$8qZ,=7(9QLp#GuVXk?#3.fO6OtEM/6p#%-X\fmSR9'`Zh[en8Hs$)OUlc0dj$&a)kqE`LA7fF,\*3%'a`0al`_F0U%R8guW^sRId.^W$Oc'HMg!2u\!!c>UjU/_-5A(T#tP2L5MgU'@BU_6@o37SkF161I"<5bA*AY&lWiiF$b["+X]Xj.$!OBNYqK*U=o%kQ;$^:'g;^(FRQH4jQ/MW"(WlgII:`$Jk1lq?$Be0Pu@5;.95(q25-t!d]VQ.Cnu+6+(@P[o1?e3[cW7Y*7[-TSCrV1IpLO$q+e0%-G)tNB:Q#n@X29/S4rSA;4!EN"CW,tC9/f0Pf?j\JiYSs,O#ES=gGb@8<oR!9Vs"m?tqu,hJ5a5*aXeqQdZ;t(7=ip>?*1/3VK^l%Z>'./gV*`*U^[9+/m=W5Ut:9Ka#T%f1)(,1(s[e)4Vh]>`Rj4ieQ80hOcsD(JHR/NKkYckNPJ:>"Bb.!Cc>*I;^?a1,JIbf`#rh_%r#K1S"1O^/6H,?TN!_ueRL"ko:,ZC!$8mV.aK[DLJa%q<\2HU36taAZVurkk_(@B>=B&M6WV5%S'Lk&HJL2?jqm6hmmUAPW<G]e"%Q6hMTCLLmjC!(e"8/W8Q@A'FDW`\[LGX=*d`Qb%*W]a_U#XO^c!pp])RQZe@"TN#(kWj!.??7#k!B)sA>/d,8G@Va)\!anDbi5uN%0Ic"(>uMg](94j=l0@IZ1BSdnF:Dc]pBh8/g3[^q9qZ30F)G1A:C%r6lridL;%eX=0q0n;-,qQpTaXV9U,"a&TXa8UUl+/ZAZA&*%l>%VH"'0GL`&&l5\\hIaqG#E2U%7!TiR9VF5HCK56*F9XWQ&2YX-1SXKqoQi+"_?t@(>f,aXtff&=&pY\:j4M;d2B.p#NFM;PC%N%N=^GFMF.N9OO>ib0DEHLa(c@^?uips:SW"Cj@kuY^f.DG/fB#!311L[G8R@gOK&PE@gGOrC0=pY@=Nu_e]\.&k5sJ4)4d=._C+GK%9ur@[qC3DUEj3Hk>\uMuLGs(^<)VkYku3EfO@TVH6;s'A>*t!nj/Pqh!MMKVEYI87'.ps)\M[OXJs?gF'c`n/!r+VSL"b7CfrV/P%q6fT9@-qQj0h,G>@1%""f.2Okd\&s7?j^/.+p+e7O!=qrXkTK_abZ7#ob)G!)qle=/4GMW9&1AU7T7t7XMOLsdRr?\d9;EIPF4<o%$*?+j>k(TNW,bPb4>;o\.NsM8SNmT'gRbHDBhPj?*:sU>ge/:X;pK^kI<m]o;snBTK2]2$$hW^Kq$9Vp<e$X37I@-[^G]:/[*uU?%1+oaKIJ%VB[F/,G!aIZ*_3suEP+url?bN[C3`)$AT.)00.4EgXg-I::\]c<al"@snWQMVJ(Fpk0\@S'+jI=r^J58E8OB2=]hrN`9%?p\U!JE%RLPk.:i*oclKMZLOR^Z7<WqZ=P-nnSe+W\`K`"#$Qsn--WZYA,(F#Kt[MYi=77BB?Enl"eOQPZ?_H5q]X26cJCgoXZ)P%gi"cK^Tj0,DO/S#%i2<Z\^(Ydb2d0Oi<,,Gg`/RaeQJKu<9W!DKatI>JTip"05->a;+@T4l$$*2=:u,(Ej/_P@uqt$/^7/S3>42#%.=h7P'B9]fVQi.1>52i#@,C$Vj:PA?E]o"gUPmc6Lr##X5DWaib**2jKNhXcTL1]!p^Uqtr>B'js5P#:b&KKX+P]hC?%Y\I^PMCM%(;B3Y&SE,D9#hs,<H'L.?sl^%q-k4tc'X>knuCP2UGHSk#MGr.P>Qa@*%5aE6u\\*h<9DV$cSrY*C(73`"6qM&3+kn&ndCRNm-mE%%]Yp]S6D5g,U.mTp/`csTOiIK4"D76;#u7m]MPfKo%C5Z8FaZU%sJrB[9-+WG#(Z;a9uq6BQR+-Ou=dQ&<st<S43/$Z?41f2I"q!%TNq-K(L'&8\p#"[\[^DfeM)I&<@4(kRa'k.nBA?clA@-l$Sd13Val<r"Kp(0iK_9Ag:b$c-k'.),p(2l@J2>FeI_!Xb\/`47?"_I%<<B2(T(tID:b$t`TXWErFB7pOb8.s4TqE!f4$h-$SC-7\Q,S?-W>'Tn&^_^gNRfWgkVQniNI)md#XKFK$NbE^]Vg;1=d#[-Q<Z5q%Ge.]rEn?+p=IteIQg-`:>N!)bB3t]GPC[)r(Y#X&"">iE2UrLDl1nn1/+HKtHnC'jH*g"N6QcG!K/]kl4(ckQ"^CQO!EW;;(q!5K%p4<W5,2,ntB(P+iN".2^_/%*a-TbY3)/>E(@_?-Cn0[DR\oS4qoH?m)R@'_"S1;XH=mU1Vi[OY.VNq;F:"ps5a"+O*fK0c-\d1-5%pgLg@C.:.e0%r>7;<l'FlGJhf@%hoqq*`?Od39/LNU)jQ_Ypee:6-V)F:6[%!EjIe\V'%g:c-e*\OG@`p*Lo`D(F/DBg)3VIGULL%Q_W;$Tr#tpa%9&YD8iU%S2:3:fHE98r>^5.95\>TmJo)-Au_<'=C!F:jl@VEAkE7gOO/:cJf7*_VVtSY"<2[h_!B7o95R<_YSg8A%DZqlFTMD[G1I$N?JR@cELi_NQnh=qseOZ.o4O%\GkTDjKj%r3;'h;u=MKi(I8'`lbVpK:.hE#>eI@:="qWTc1*:[^d0?l/sYTQse%!kpqC=[8J^#Y$oSHdo1<C!28-<sj"+!+e"?:lUlSQ4i_rdNG*s/)>e;h)*JbhA.X`S5,uT=t&JR4.IPB[A[H?Gts3mGpL;UI+?lN%?VCpSEZ.7-Wt;&pD`A#T3Tp_YO:Mr?cR!:r.D4Y+TO,6E5IJf*$6:Jo3&n[SRdh^J9=e0&0&6TWBC`G((;e3CVDt#\08*ogbg7*I%;OojZ[p$I!hWq^*@&]OFCdp:6rB,b/Bp)]62eN\58JeJ%LYU\+A^q984f.gq#ihkf6(_oHK+5$J^ic$^o=SdJ#l\F=/XY/SI@/:m%R[EHcqp=JA_)Gn+@-Z"_)M7'_#JF9-\AfW<YSpIr-ngh8*jN"%b2O'W'$f,`l<m(?6n<JC&DaRpUStT.`*ME)['GCJ+e47L[f[UF%*3UJ*:]dF]Y1/-9!o?<!L-@mLJ?p\^(-sh3C4Qc]/2W`WWm,NsFI`#5(d<N6WKrnB\nO0dQ</E^aXE.!o4PIi;U#Dm)$4lY\q@Je%:7VVHJct[J1.rL-cp3D+=>dc<=$*VuaRs8ACZ;KG.ehPlnYmZ:^9i@1e+7#iBBF%UaKT></WJ4[.jX*XRU.Kq[*^"U;(7?IKW-DR%CIX[?">#9Xjei8M#;"UYc06**Q&$<Rf]j*^A+k0t"rT]26(K)s9<su;&UTXY,0&'"J\&8.<ul9-1l9YD>r+R@#mM:XbsVfM>L9\0%+fL$F]a3H,=cF`rKK#ZY.8T6jc;i"0@hSIO2?L9;emeC4Rg7lPk2YK(434fRQJ8],pn@j9@!0\17t<D'`A2Tu^t`Dp+kY5V;"5W=%h_g`i75Ql)M=J_$D5fS!K`^:X;_!M<OJ@HnSQq*l@CR"^cHg]iN$o,.Q,5=>/^35//msm<Zkm"4RNPI'Sk*fg\f'7j?7A!nOY&$e%>NBfnU$e3tcot[1n#ds`\f?KM=cA`P@"EN-V#h+KDs0,a\ekcVd:b\+40#-N;83.b'o:P>b/;WX>iTe&HssFaPO<&gb-*i)]5D8$%8_Kc1C21$i7`P$UHmU:Dm'nKA6Gbh@T91I22^rqYb+sQ,BA\Tp:L2VRK#Lqe,Q^jKQ?'iK%Af&C\u8[*f>01;TH2<W5.]`ieV\g'%CGhj1UUMH:W&V+1lu`dTanOXLe&mcYdW@2R#!b8WiFN;,T_ehC<E%?$Ipsh;!&L0[Zp``\)3`s&MKM`rmA#SIWr_SnCSeHK)&p(N%Ktq0.!a:8:Ga*I.S7Ec^6e"/$I3-7"goiK534WQhAg%['*H4F<>ZoQ)QKqJ[$YN-N?o-6.X%4L>JA<Tk<?/oZ:G,][^:si6nD#>N%#DZ<XQ8M6;pF@58RNU:\.S<2]dQ:iAV&N9sBf$DR+j2G.&FK#pP`'GmF<MbCZBBd$.Lp_XG9<0#T8E^0Xb2q4T9a62VTgte>%\'.%o;%\e1::,*j3fUVLlao7o!8LF48&HFhmr:8F5o@)P*T.U,KO"*D(>&^1KK:qS=U8_$8cb]E:IEgKS!a#-Baj$H`Ro.hZOCh$k$\V%7oTYjj:p!]fhLa3YA:IIKRGH)lg0':$?JKK)a!)PMMX'?:X7Go2O$]'lfKcf<L4:Pa(2mV"WnKq6a7tV!Yu@#C/$>R'2U2pF0Blc%03%;r,,#;qZ^NX!:mZ'[]S]mtThhke9!<VR[8W6f%ac\0$e)qcg9nY+ZYI?V85brbe88=Q,eIf6>m!3/<(g<";:d_fJ/cYhApA6n%VN+0]Ak+(aF2g=3]p"#MWOHGlTLU&>LHQ9p>uD"RS(t[#KYW*Y![f9Sm&aO[AF(:C&29/kR0c;+G`3ch!/]*"5Ls$AAP&1jgVff]%8mrEnCuXXZfX,#L"slj\]7B%#U2UGSl'dD=:H>(XmMs_0V'lkrA>ArUO2ld''fi`ig]:G]Wa^kt#;=JF104/T#d(VB!A<m$XY=4R%=.smG']Vr.jqhq>Z`CVG3?e^Ys'X_7%[mF+ln_7(FVB(bC4.l\khp`QN4-O!Z3lO_"YK0al]kXGH3b%s,F#?6hKh%k:DXr'\H:4#%ZTL]].`bLiVQN0Aq&h%8B@]bib@FMd5+#eH[T!m;\Oit=:7@h]/MnSs(lu4^U.18jfb?2n)<^4WcRuVFo.5Dg7?nM4]+4*a%?[Bd%omiXc'(H^?+<qA+IEDTH3CT\ef^"`-_PZWq&X';ZIfue=Q,$QRp8qoZ=JRuZ:);0'C9ZnSe4F*ERLe(>)jLo%S>j*iX+fYJPi[Y#%QpBCsaj6o5e@M.$5c&5i`\^8n'<jlpq(k,W<>#'1er)Hm9Ttbm/lG,=C7A:kaG%?1E$Vc#q/2TPNP2$uRlMr[X\r904g#84D3;$W%B"C?[8'^@a''MRokD:/Bd@03?+O*=1R4?0G];;W+\nsrAUmD3W,TIa7A/(=eYRFW+bL3])c'"Cp@Y8AkcMI1QGhN*Kcf82QDQB4>%ntmooM[*&78t!&_:3PWi-+%fpc6r3,n0tMSaPCs2B$u.pLpZ(+HckN94*[-4B\$Y"nfZJ#ZA8uC5q5iDWEPOYhJiKd;83*2,`i!n%\j/\IH=:DJf;16ATY&*=:g3HC$$2J%c5dK..DSrH:[iaN`oZjD$j%dsC7m)d/D.9U4]B+)4/R"3S17Nmkb'Nk"U&QIE1NC7<:HUt%4d4g*oaObCe5U;U^*:m\6*''D:!0T(Jj<_]AKVP[W.ThOAaK>h;Bi-`du=H5DklSLN]\cu\H@dPGcDMLW2,Vd\MY:gYN`I<DG6_s%8[Neu+iJW=ECGVY8Q)?U85PYR9+ltM',dDb+rA<og8ZlnY4F*n!SQP1K4H<\As"'nWjdRIU"8[1EN(PO\=L+@TVdHm^G+%WV.(%e%Q<\52?E7_d[6G+T$C'Hl@o#FS3qFD0),Vtp#1)eP5osci[TZ9cVp_V`kPHLN@S0U%Zrkg71!iS/fb-oS%9c17Nh\I1DmRg\4rpeJ%>IB1:_D"+^\:2*t`t`,ToX^F0B1b7e:lSs`&5fSkfDSL\\"tCN^#LFJ6>JT;C8A/A(+b$;?-!`l&:_K9qsf<p^=(U:RgC_fohsa`%@D6;R5-5]r7.XGMNe13RbgQT5*=';PB3Ble$DDD4#B4K(;j@b7.Ms%$(RFA".=r)8]=8o>.O/.#hosR`h\7%>n72_;K&NpG#:J$;%#Z+W`/:7`r/L3,Y!qmI7T%..7K&[OT^=j1U#feC$roq`ch6ou'N;.,;6@=7cZf^)&?\rs*1r5k0KGPBhX11+=%q?n^iM6"&(dU%]%MdK%Z$A@/;+;FJI=Um^#]K^ji?qPuQ;sp-/g0Z>"]-U]]jBK-j$3OK>?9R)!FrhT[J9eiMrDI)!LhF;3C_iEs6TYVHpJY\'hgu>W%UK_!0>N+>K56>,ika23/(=+W7GH3McP1(qs%5p>WrOdHdP?3.Nq1#Y1@/d35B0J]P2qOH*S;@n+>j<TdR3*WrUO8WCkAl7u]$bum%IBE2!*(gp2CA-jB(DuF>Wn3.39!fP;#+=fM">$^JC'V8sU0+92?O\2lBJHqkL7;691)l8A70f[I`/"3,Q`<R+@_"V/%]dOuNW=D9%m/Muh_:k'90A#apLhaHt\`WHa?9lE6=<drLn_HEc^g&Kbo1LM-E`q*7BnMe?b+T;gAiST;1GdRI\saPYVajfYgK"pRlOrVId0b,U%al?gS=0\(*c!Zcdd-b<#?Ls$ZJrN^l)9&0535n0Sn_VZs+?E?jf@i,Td2bC-XE="9K3]o_;.l6pc>[\;+;#JTPomm4\0_As>&#2^%2_WQ'$YY2&?s]Qt!R)#p0O1?mje*3`M<Ziqn^lB>F?rCm#&!gRa'tdY)4WinU6:3SP\3;E"T'J&;I7Mu2[$&+"f1am:?P(<Seq.n%op27raj9[d;7$epYa_!W/>1i0I/;n8f!;XKLkHaPonEXaEYts]3cANl-lT=s,r_&Kngo*$K'Pj5)d!>1r\F'bi0*IB$[.6h!nV]:%F@U`"((=eNRl/j?\(..'>$LP55QUO]LiEOND-78#NBah2id'D'p@'B:<\5H<qejqp^9iR&39X)G;"<r86:%pQ')@u2EDpB]*UQI7%")Yo_I+rI10b`6:D6J&bVi7"''N=bg]q-j7(](*lkbNSHdD*SQ%&eZRTT#Q/jn&dpZ^O@ie.=VCQhrF:fIe&1PmJJ/</@(1@p?09%\AgY6cd7uc+Y\m.^IYLIJEsm;$U!l0C76F*f"6a,7kDmHhBJ!4_]?_IQ:`E54_di,@fb2.M\\:STkQ6+/[LD,`-(>\9HGR1*U@-,%Vq.q_`@*.'<)%R0=nCd;0hh=JC.8R-&;/O`8+o%A&:7VH/3ji^\[:I%jf!`jNO445oX<3r>F5o]dLX(BgT?g<.S4)$^f+/MKgRD.%8K>l6=\/6n^p73e]tiGL.uH^<8:IhEPh`!;/n]4Dm9*(d9$2+W2Q/uYK*AkTAcmYgW71.A8V\GS4Z3:m&bX8K9iqPWp7T?i@.IW>%b68kh&:/%0O)V:+f,3<IRb&B.TO"&+M,F\T<$c*4WQf1k`/)j.>`8o)WQ(QlQ!I*`M4Hq9[S)SClrSaI[]C+\+CiRAOs]gUn$JUR%P_c!/7AKYX"iO]p5t]'%W;/u3Qb3j8K8?#N\ZW57[06.n@=#V1!=(.lMpHCSd;]8J<g\Sf?`)"Sh<pef+LUGQ=<m^Wjgpqc`1b?(%U'uY^"]>+5`.\gCOKH<r:UY4LK,g=\H_3`DkRsU:qc1I2[5;SLW3pIg$bK_(!6;qX<lop$dm7D_SnID,p)ifn*MF^><C35O"rYSo%Vot'g/45djYBhLf>S;qqE5'I%@WB#DlXFI1Ot:t1$Tq<IJDukQ!%0:`6%*eI0]/Ir#)T3SHkSV",']btd"S$7-?=E%f;i@m]d'uP%<%iHAY`hOAE=U*:f6^WE1S$ut\pWmr7YB(Ud/.[f8E;GHKf%o=q0>nO7EK<]XR6nfAOQdcD-k/cZp8E6QsF0]&Qaa\0[^/q[s;iL%H.Ruj#FW&HD(q!F`:JLl2)!,+o=1Lr2g!G16k'dOP\0]VMgK:S$:6;QGqIs#S(@kQgnTP'<V\O+]*VAMjR@"m@AXlf]:q&&N-*q<%[=IRK?4/mantHDTS.r?sX(6D\.sMKad]V!#\:i8:;mp_*=oCeDif#:,CPCjg8B[_8.$)GemPM,lK[T7`E6;+9E(OqIS"Ijb[_CW\%[gV"4gWDh:[Nm]I)`p?!#3Z&+Z\gDXn%".!GmuS^ICWaqqg!+k=p/+gp/F&H=G=fD1bkS<LK,'\[LC=n3--)VF8]!Z!Yq<L]XuiM%-Se2K^e02Lf0%ME8HVH:B_;F'O$C`8#&D(PrtI)7g,#Pm)%d*Nf:T9RZ"mRU%EhCU9;+c/q`-sR$E4hGE5:<M_H$3Y)71ng1i%Mk%R')Zn"l@Zck+j+4fJXjjjC<;)#.lR1O&qDNMu7V!D9-s';%jk7B!^6Z<:>h;[Iu6GdRLO#>=AoW[mb?=P`Et:(RH8QdS-eQ7s7+C%0"?Ft0<&&>ir&CG[KTDA]IC=&HbItSp:$jt!Wt*4]XcUZP^"\pF="JPD$q,9l[VYj@478&qTD&i5.GPKbVpsV<[s5nS$ko^oG!Q#%5q_><Jn`'']"Qh*G#G)l5X%4#<U:R`qfcZe@2=p5#W9o'=Bo!.k%V&OS?ZSEM8;ZbW/8d.J"b:^<%6B`Ceq$?[V>%R,tE:+Ac`-<%QUREXZ`nje`sjsn6bT;mNJ^siVP(&chFY/_D-F3'k>9Vo(6Gp'@KI6?DfoX$\3oliC2nX8`$gn-RBa'=>g8Sn#^7!fNOrI=(;_bL%!:AA,W.dAj#I<)q^(Rh#,2s6OR@RT;kN732;9L.r1+R(ohZ>^HK`bhW0ZRO=HA2Ab)*Sj61(^@AUm&!!l,[=WRE:Jg53rI&?m.Vg%'V=:_FLQH1,t;Zqap>Xd9rT91D65pP[4TPVjOVQV[/lKImC@p*?Rof$*5G\d`!E.Spd&+)/K#2/W#Ka-SlQDd-oSoL/Y2$OmaHQW%XQ9ZIog/n6Bk-,?OR)C\&N$;Z,!FXFOJ0hiCYPMB2X7ZL.sV/bPl!=j^VX8Cs7G)!+Bkh-e[8^tAlH"_O[b_\c%aohmis_$<k)+*%S,P0@f;s#\oWHT\Xe@@)UVsahpPXB[i_\8Hc8'J21t=/,RU[^UbT?J6MTq5g<8Co8jnjKb\uq._'77meU]d2A6`u4sR-55P8b:.0%bWf9/+aZm1#i2ubf^?.AW_QUbc3WVa07;AEd%S(gKM]WP,bWZB,LC.9GtutUq`GUH@8)P@*4C"C3j@q%`F-dFe=B#fAVQ.:FH_$c%pl7q*VW-?bMlNAokF'(5eMHu`a9:<>e!_jMi8+h)AWi$':cHq]l*ZlP@D/&2+gZt8MHNAubn^tGa]3"je!@':Ei;A^j)EF_;RN+6%6>#.H!:^:%1=;*<P=8_So!uIaM)]^\<a5*=M$_(YSfDl"*N7u%!Eh^Dfb\TAgRj"K+6]q\AqI;Dg1a2u2;m.-m'Ws$;7t1*@Y!ku%_PtM@80/9\%*1M]eIfQm>U!pnrDFPt0=TIS>r&Z#3O0C<lI6mD\!;:*!h,+W'tJBEM4Yb/50:(k&KmW:=.2Y&g>mmYnCP7^Yl89F%'2l%R-.W&"KB4YfpEC47_iY38p8A!!*sbW7ZLtor_K1[sV8?\Zk=_W$,=uJ0@o0SK$B&gfdZ.+q*5[L;V(2_\OJ=a!;W@JSY^iYJ%6)cun()JrG!OtKNS',XN8+dNnYJri;lC`[;m!0<T.:??RPW,KTKf2GC!'BlUC4\T0R'9j*1!Qg1*Wm<qMgA.E65(=B*OR?_ob?.c%d2'%5,b4;h=ccMr4!Ma6&fXEfJE85"EASD0O;XJQ`cHZ4=$=RS[]fbpAlgacU'VtodC;0RfZ2Y]"kM=-$>o6V*6M//RZM1?WBOZp%^#)l'WS:1EC]hF:_"a6-?pcWrAEYWHTaJ4hlUk(iCekEe*Am=.`GJg/pF['rCi;SMfN\-uM=G-jJk3um"uX^kCMf@Db0pjUF`$H_%)('9";aj/"2p9ZN@%<,AZf>9nrIS5^RZ;pXe<(MDS9-4t5$TjG[On?&s/&GH)ld`U1%UdnV6(%-D99RA>(oN^'t=P_lE(Xi6W9lk%Lf,@?CULR7eD"`2F:`HfqV'LYJ(&Z3/LZ2LfZugp,UQ*\i\0#%Ehd['5L&gpQX9<5aHERcm>J,^R44;VBe?RoWC#&;ohluo0<2&r%E'$-ki6*^tPMZ.pc,s5`B+%0d72dQp7/=l3gENZOA)P!CHOHmfMa3%XN2`QS#aSFj_TKkg9cM?ZcUul*&JNlUnGlcHK3mIc-MaR0%V%pOEm)mk!?<">S!NGuT=,5M:SR@ulb9tpfBC2pUl("MXi>!7Z?R5PK'$\8tPR`R=jDN^M0gj]%3X%%rbi#kD9k'(cN7Ga.i=_%,%90#lkW]>."7R!/g+;jf0WfcbNK'KSp?lY8ck5eYPj6aH.WZG!uIj#6>jDh3ibS%hAP)cTCPD\,-(2u,I9XrEYm>MZ#/6Z`*>NT>n%\:E!nf/d.AD'a7_5n2nO>f0TA>aU429$if&Sh&@XWBt\\X,k7XPC5>Tr3L.h#N.*7V]i!mh0ZuBJn>?bnY*B%KDiVpD;\L":l3M\%^WTh4@0'qM]cjFO@8pkI##_uBELg8'@Mss.#Xt>pEk#FlT<*LrQ@`RD='!?-B*3%=`Wg$9(,1(O[jMCa\o7Zs!tkPg%]"_UL@XGS%9\XEgJ5(hA-IN3i];O%FgcDO(U(oT9=#I6s^dT5[cRo7sanBATTSA;k'5KmH=q(UqY.?m#d,+i?iEC=k93YY\aG4L$nGmB0O"]F:%E6gt\liu9qk#SC5"s9rNV-B1AoA;%!!E0"%5nSY1kE:!k+@+1"/G;,\N:(*f,pg75Z5d0X$K(8h<c-K>2:(Fp`FUaq/r.p1Cc,P*%+h$QMS*'UEmIW4pgWX3]8u4)sWLCh)c$nEU,8L#_Yj$iVgqa'<FD*/WdmV`bG-r#W-nR'EFPud\[C'l#Jh"'4Lr;Yl'="ZDi+/$*%@3IAT]VOmt[t<tTUfW?_A_T+$fV!YYS2p`%<8/_9kZBnPieX>H5'd@Eq!=:*E;)*O.&DS#`.Ud?i_A/YBqDUR&3-(Hd?YeF'FA")%OJhRSWZ74NZ("hq6H8,g#/ZV'a4du('Bd`N=+G,sc(/gE;1@UtGNk(aU]a4e3)-eq\G^Kt(>#Xi$<omGbZ;8!egR=Vofsi;dg];c%Pi?.p!V*hVPdYEp>\g7#6*sX0Bnd=$/\(<sap3ME8]g=qh[5\*Js4co5tcC($@CC<_Ku1N1_EUG)=F7D/&!fP%0Dds:++b#`<+:m%VHg56S%YCNI@#[%ZZ6T[Jo3ghD8?3!%-IX#/&Hpo6CSp5>&Y6Z?1-E^CZ,9cRTj2CB%3g<YdAOb5RDHOZ%/!,@,S":-n!S^g:".#%Mm:SI<GPYiY/0ZB:)UnAE*5uk>+:,<g>TgLLGl1FD^_*uaf*(rPGS+2"X*ZbBS)a,WM4D_O!/0B5q=#Lfs37Lc%CUkFD+494S#[D%`+BRIPj:7f3QOfU%=n_Oa2jm?TGF"`#7>O8=9_8I*C]HpS=MZX><tqre%hO-Q=_T(RPe(7SKK4>KJH>g$,bjt7rNJtGS@3X?S<hg%:s<9=,:L:^CR^KP&qV4(97?78K$0fHf@"gGXUsS$0(G)Tm#&,c#n<B'ZOH=CX+H^k;G\,5D+QREW7V91Hi^iu$#D/HQ_Kbbf#.^I%^];(0-S^Fp/mEm:CKm)3Bt2B2"*0VZ3WQh:QhBY9XtTm'7Ca>nj>a?*QsT-RHQl6WH_P1235/Ft`itQ1_5JYU7mr\;S79G>.J2Cu%U4>c#M]MS^[N67W3mAGtJq!)p_JVE@-o9SXl]7)/(&W<3)0g,YY&,VHfP<T'h]B+UoW$^/Gme_#8^R6!3"8<pIBb+n)@2JE#?MDh%-=qndCJrL($M(;[O>m5%dk.Q#XHkf4-^RCp*#-qC)]KTDbmIZ5]1H9BcSDQC9ooaPitEbu1,s+T.s24oD_k@,6ch.>A8*!u'&?G#%Fp2$!K;]<*nId1L&B>N#+a.F-SD#18[OnIs>1,^17B1sh+]q%%J5k\\%CfT4<B>DH;m.:K86HMgD#s$_'Hqa9bGA,L'5mZi$M"WR%k[;84mSltbOYM3FbH1^8j:Ff=-]NYcZ?S/U:?5AC/5d$4$ZUJV/*,*NMH.(l/dn$^D0Q/hcCnWbl@Oa$Jb5ffL=s(=h\m:Z;5^Rr%5a47leDJj,KM!4R7+].B=;()p.G\bi=)2dQLDjb@OQ)n<4[2esjqfJha^8WUdg@^R`e:[db\80`2CR$D_j>f'"iQ^XX_qiGpS]H]%T]sfBOK6j(K*bbmpF+U6#3"9?^aq.H&K#>V0R_Z#AlMVERhuG%RSagmMOmPsTFia1CU]bnP\4_J=MJ$9Q^6)_O@crH^lf7m=[ih^%$?=dt7X_.:_]u+%BV=mc<:[`2[3CLEBHS-(-de%#IF!c)7N1#ae^4^5^t?6oKPAV3g1D((3Fi4\fiN-)6S38E<PB\oo-E=oMhg^.%khRm7N.O6]"]F)QEe,-XU?n%1ORJf'<jQ>aGe,B%%KY7`_'$eD+RPo(.aut<D^6-a6X'/S5KZISW+Z9A5a4>I2f8Gt^Jnbj6X^[A%N*rmiZ(?<hOp*3SC+9Hb',&43!d!ifEke['&=5,gSU"3D/YYp8AfE;2/l`U_o4BT@*RtIKAhIpc%KV+eEPf5OI<jM1`6#17;!Dgh%m?HU.:ta-iG1_L/OeJ%-YXn$/XUU[CrgcQBNs&If%#?tY<flnmciN&e9*0An2DJmu>Hg:0\?uW\g<L=n`<&jp+D8fjK*gRMXJON(%CYV[h8h$[U&_'t<5:eUK(g:B&'t(dleL-g(3L,hpE+u]F<X3RGng+;J(ak8=A#^=&TN&oP_9Ht:TRuqA/W%$HSW\6,C\p*Eb`r>7%n+@ukK=7"6OL,@Uc)b,%L1_'eWTADP;Sl0]);":-[h0@e\sk,Q*DAG)98E3I`QV0lIKM3p0]?Uua#)M%!f+;X@+k;^@K`WS\$RHt%#Xo"qdaD6qN>4&hnJ&50$MVq-MOHb+5V"%-[L+EO_<+l[U`i50QP@\Bob3"M#B(L</2SfKhSDN=0q-3T_6+iqY.fE!l%[Y>8Mre/%U8R9,bGopne9%*d'.FHa0O_ZQN&!>T8!\qeqnU%iE<YmFeC3'WV65n,P4&/C)!q"pI=S4?1?Jah0,R`/3[4MiD'&m&*7heh'eP!C%q6$I2dl0(E[Hc8XCs`\;U"jFaQJ?$X<btp@#qmf5Q4taBJSD@@d*'qq(>>ch)g4T&!"UJYiK^tt"`<s!=RLcHp5D@eg81os\C[9B%GFZ:8%X5%o%BMWRB6BuP]HD9_=[1sd3TC1([;E4M'dbkC^m/tX?uWZH`P&Y;LDt4'c39ee2J8$A?TBm$o`=Jt_$?I<;'!1u>\M-E%Kut5\*CQqb\S6tRV-T&B:UtEu/eumYJC6_K!W1uMVG&mZ*.^P\&D>eiisJB`UckB\cI/"WLGn>T#%Z^Y#CtX3-g^5$/2ulJHb5J6%/\@APe;g_5-D%4e44MQ5=q@2O7]n'_H^\Mnk@g^[Ze_HC0i,3nB&^a#T-LLC#)Hh!AuDuD.u6j>(2sun(O1gt\OpG/NKBRo;PSFC%Uq*5TiS#'as!m/K^aTn7i34!0`aoVk[$Ojr6@$"4^)$g!fst&22fPf5/2.bDMX=8`fCTJ$XI[RI"-$hF'?%Q/Q3A=ZY'V;cDriI&%GUA6oCN.hXFt-:P!8A6P%EGKKZRDP[\S):,F,fXnri+JF%ER6FSt@\n`B;U8VG9^*_,\`aohX9q9UT\N"M&-pC):j>J2]0hAVq,n%d(s`#5^!oZUS*U^6O1*/1Rp/@`60NQHe$VrF-&phJYPd(>jkq[+Neu'9WK<%JO/X4-XeE=gLsHIjH*-q*k6U7$9,Y?cF<rq+%%go%W>`!mi2.Js[V\ZkfW/2c&EuJgn7_o?'"cKag1"[9fcT3:OR:bWX,nW=;S\`JgD[CV+Q'5W%OMU"(mT\kojE,4g"^I5/bcc`9[0k,%bW`FB/ANYGXsijL;NkXHe\\i4bSIa^dqkHI5*4=_W@s,l/g*3:PB53=jK]3;X7CuKb]4N%FKiX'A4bHp:8X:9AHZde/BX2m;.4FK%[Z_;6\_^H(+W-LKPR`j_rjul+P8Yk7\G-/F2;oLuDA]LW8%i)_1A)$N<Tu4K6?^B>X_"rQ1PZNWLW]g%-dDe*,L$6:L/A>AG4\*1%$>e#r">2%1E31]*?_E&Z3pPtdJ8E:l#8?7238,m@5$Sgm4Bne#nNV(&*J=?<e>@QSc`>Q-8\kj<N<)b<Ml;75lbOM+-;9??2c)t>%dR.jVD$qUG2_U%o5V5#"qA#A4'=HQ>@"$1?=19#pInOVZD>@YbgU8B(-E'!S[V6k2[AGo#QV%t%NRSRS<q!!+^Mc97'J83j3bVa*%!70r&h13t@]7Jr8[H*(m6_(#/^Nu)BZN>@"o1U.%UJ`:`e-id4!B2][hm:p'iCXsk*&l$.jm-a:o$!if\9a>d#TZGsR'9cLSh?EF%*:TYEZP'6!+Y4c2=LB>uf!\,OKdKg]lN,T3nlX8t7):T9+Gq;hMgT@LM"d5=iH]-qYr4&a,iH<;Ct<SMp6p!9OgRn_4lJXh>sQ*m%"<AmapE,!KD$3MMMOb:4ka#27)i(P4e`p+Lbfg2KnML\:@r^^uOcK;b&@F=6W`=4$&O)F(UU<I$1f+N/<j-L11ZK$$7`S;*fRf6I%GUA,Nf9dkQ01eQ6U7:R`,Z6+lQSe-)+ZIk,IX(q>Hg/$?5h1.42F_6]KV/=&4je%KfqrVnZBsCI-nJbk@Q`)TKP0-&MS,8*\mMQr%/QI<YlE*U$=d`ZWVuoffGYf9/,!6!#QL.q0l!haepS04X5r?56KBstaLHT5LYa<c_dVI?Q[rsM[+13(u<%:Ki/h\f_Q+WMN$k&G5%WF4'V>jQWWWjlLA>S1_i[94&j2(r%/3\DEhQ!,Vt,dgK.[e:0?N*la_B#r[VN,I0>2urITC;XE5da<X71.1^;UVo`kO%SBQXXd&"%I4JW%0h0]unrcsH6m*@r9A=#r:m%O<%mY1jrNJ#JC'M`?6f:8E8Ui/Gj:D_M36f,+TsbJaI/slGc^TKnV':IjZKNd_8s,YK_g'@!%_$5mpO;&KG[@Q6OXrRm1aCjWB*sd:':mSr^6*t>F/Br)?kmJ>p8F?Wk-;g&-XckZW9b66&hKiT0-81?KOo(qL,L0L/X%Wg*=f8'F%/J>dJl];m,%\N0p9CZCfkY57/Bq:KO/2_okMtjJuWp,PXONZU_bVY#b!K1KFCmY!K>4n&2gpB\8D7[mmG](mP!C;1HPm^r0>n4>,%_%!9nV(IRI9kL[7NU^gm0W@dM?tTUg#W%\;'s_$+"#ajRC+DYW^m4^JE1k;!Y&.fb*MTQkQ\_CCasVG7l+"*[<cceaI+8u@@eQ#r%<Z!&0e(IApRKE=:)D[Zqq73TWkj5<;0+&kpWMgXu_!F07_A*mTd$IllVVO9uC2/C4J7Y7DL>ZPO!70utkcVj/oemB2WJS-N8ho[n%@Zf&O=ic5<E)$'.Y0d7X]WcZZlk(+J#6O<efH)(OpUmYGQeaBWV#*7<oKrd>14e>4Fa`rZk5=N4r9D>#:BflA)s\$+I._Z^_"%9\%h>$s72ugTV]mK>7Za8sVH`b'Qqie(E+87_+YA__[2kRe`B05qJn]Abhq2[H^Dgsf4eX#)u?XJ2p$bNll8%YsS3>m=]ht482e'Z.g%5/4T*VJ5+ggr7HpPIh@6Q`_EDb$@-\s#8QuY0K5`2g8-f5Oe%%md$pY=?gY+^YW=gSmUiUm_8S_r!H0/Mhg%/s)`:&H9J1eiE"9#%\;RDgr='YpR68jklPlk6EclSHZ$UpoC\dd=]-F)U%;l$.C$^sB*4.P:Ac0FVdM`(Mh2j/l9,[cY+u&I)kC;d)dHH0h)omGVr.gWM%^YqhR<pZsF3WB'Lhd?>qH2Fjl-_K&eIt-4>g;;924hpLN@)c&Ef)H39>7W'kNrORg,l]_Ns.O9k`qB7_[Ofo-kIZ)+O?VR\^G/NK%)FmeH8J:N'+eu\N^'R\?&8r0Ys$+8_O,Od#kcqD\dMshJiU\'CX?R&AWtB2.l+sU@_h7cpU&6e"r@ooe`d<aU5<?4F+Y_dYR1/NQ%nO,/^6qV077m\YH2od&0+qsOpeFK(VUruQR_L6e*lc&ksali\GFoCJRrl=Gb-_LD(Mu=/6mk4&-mBbX3?]@k6rP),ls7ZB]mDU,@%\A"8Hd\"S;^<qH+h*6=075.p7IlVlHq<O5!\D9A3fmQ%j49":AN\?j=qqsEI5.T=,L#bP4Ie1K.3IUb-hi+2ahVF^WSR5``Y8QfB%I<(--H%!8ObGYC<e+qg+5Vbop^Q>Usj#CGeiTm(:/6>I$*tLKK3'$q?H_Dd'o^h>5B4$)]oiGMg8::@<^%a6V%PW4eolL!gI)9f)%\6%]@f%%>jFkkn>6Qt=.O1tSco$-h2Fn:)34?>M'+6d%NqVqAD*GqPf-[-q655G2!r-JterTjBG(?+?:=8mCR.C@po^DfE:FS)e!%\[d'.I<'D;42&A<^)98Xc2R(96&hLa:R=3*a'8DrO#Qt7Q*b\Gc_$7]9aujjGD6.rI!'l6oC]`-dId:kgQ1^pc,I<nH[@oj]cJQr%IPfheSW1aQ`]fIGhs=,kUtaeq#=J:KjEC$aoD`2RgjQLN&&+gRaqN0>T(r0<h:j[6pHK=WOUq#s\p\pG1UuqXisX2ZG.6Z7TgSk<%1s`B'@+/\Y5<*qsH@@YoYAa-DqjUsd]C5HC\_DOXG(+Z+k5=6:mT5lkm;fQko(dHYp[7G:e]H@&mtTE"H[Yi.C\[_?r;P5Jf4Xsc%.I8."TDmsCibJDdl!XHKkAT55m;M[.B/_asdctc,`F#>=V:Fg+k8.biqZA%X:[,@#?f1-pIes(Lh0skN_k6s;YkE!*k>slc>7Nq1%9@*D#,OO]*P@ck;gWdM4p@J1Fp\X]6s+eAcp>Z!ls"U/E6!F0_XYRG-P^,CbRD43p_Z'C5gJS!m%sc;(r?(g!^O-`Trk1P8(TNJh%JPZ+5q:XS"+7hMHnF-6G'J;]US3HF>5OHdHr9<WZ^'ZIlc7=Utl*1bFF+&7VIJIXX_qip'k<m8bQqt?obf@'5^FcYdpA3Uil2E]B%iZHA;rcSD?iQqO:F'_%;IlY'MrGR)!rZ,Y7lM>8q&JK4?,]f+`5<L`8q=itfT>!<u@GcRQ[gh=6ZKkTi&Kh"d[IsPajK%f>k9iVY%qEJ6'qX#7#MdJYoX&IK^1I]dUS\D]VB@bt,PPsn4n;H$7122kZ@Vi<aqpC1I0uieABIJB)Bt<$VSXbZcqQGpSrti`GJ&B.p0iYkD%<XXXQaNlO5qm5H:$3'I*[3R=grpKXMUHeX1`8fsWTDn0FpLi[X/f..lfkg\-FacB+KOI&T3$C60h>V/=,M&3nh)o-Vq2?3&:+jh7%J&9?LH@9e>R&_&cH[C4;Qmn_I:X78PH_e"&\(>g/d,iC:cSgL'I^a[tmdAd[?MCR>IJ<HrmJ)4do?2=o-drFb+#Q>I1o2I[Ds*T3%5/+RVqs7pEnn_"=0:8-KPs1a&.LI`$?TZRKW%"&W-+ZZ&;haq8(j3!07ZZqGkNJn.bG6B]@XBE7AYV'Hk?nUW:Tf.,\c(+AA@8;F%h%-s"V\eN7a+k=lqoeD>s5TK?g\3pPrU0+5r+a!Y]t:iSH2iH8Ddg)dragTNQ>F=FpX\QEhXC/fdA=%q>e"Kn_i+NdQi61)p!)pL%ai2BP.7i<n,Br47?24#thn=D]EIlg=j8S1aI-LDTBPB$l.=#mXmZ[D5o<5=c2F$mcJR)R-O5$44nRPt`P(2D<gMbbh@5mEF4aV%:%>Aed]CNcdpp<@3o<YMbqrl:LlZZFjL-Waqq;a.DkY7o-@aEIFXO#"&ff9tGsS>Gm/>-;KsncH8F*kpRM;rDk,^Adh9k<Ks#B+jX?%rE>'CgQc=$c^&/brS>p"_]QTu%XI?WlgY#8"8DV=$:LN$I=$#\K%QC&*O[sA09@sQSh[goG)PI<6G":Q[9@$'IBif\bfAE)c*+_q%2hN.-gco9YT:a/tHfu3B#:"N,d5mAEVM?+qZU4upriuG!opb@$mWWnqF*'F6Ic%qYcAo&GIQVrFi3eP:o%lO`lLsl2@ZS5ef^>+#%N1:j#]f>u`ECu?OVcU@rS'o^Hmejql<tA3jO-`'Qh3*ih")ZoA+o?gKVrQibI)nNWh&W%lCmO.u2Ri/3i2bj)Dn8*Cf`/7lGgBK0%O+n]?[cVq+>j[#'R52T'ND?[\mb$%ZSi.CVNg#[=HX,d-h<ducBD\1[1k)YD*M-@0gHu1T[ee2%UWl[4ct&1q,W7bKnBp1jmHO9K%)Vi'ie%*<J]AFgK*^'H$%=E5?1T'3ge`fRY"E&X.FTlK$SmD(oI>A9'?7q2sdm"h#HaN\5rL7egS_O\:q7f/mp7K*KrP(SOr=[sO%U=%6?S*M0AZ*hHdY8SV,rYuir-=l.bI:$>dm.ge<SA4gp^V.7pJ\o:MroTt&P9/3HF,`BGRC?fcEu.n"4fGi&+5OIYRm#`b@qXZo%jiNS\_'FK>qm_r9i*$i\r8*_uo*hDB3:C]7Ne.e5S_$+(E4\?a0CPO)#L2\].@l6,qqL]aY8.T4+c<%L]X2V,;=M:@\`#llmqm8h%qr[hEo&MqrLRLi)Rfds$YlfCCh]\lPOcoO3Ti+OIn)&($O*lG*lr^p7+o1Qe!s9ALIi(lOVsBiPf]pY8X]Uunqg(Yj(h:3<H2D#q%6ef:E7c<l]ImqqZO4us@5k>b[lhN9]N((??^G?4i*;50OSsk[69euWI*di4rDoWVR^\ZnPk79M`=X(LB,^b\bi6BBgm<^1(8hsm@%rI<V9k?@JiZ7pY/3JT[]85J"K2*Ct,n!sHP6QfsDGQ$48rf)d]fs)QQYlB+:\^l1kYs"7>UM60Z":5\!AL8ZH]\@Xu\s(td"bdQ`%qIc`+5&g6W_TT%4&`+7K*T:k?f=nDHCQ,#S(]8S!W!QVI`'XCi5P;b-Q92Ou5*66kKX1j7>hu+.T]5JnO"JfSMBqO*qRu\E7<g!Q%Mo[Ll,mgm+W/SWSmf[^Q[GlTL&@%\&QTc5h[uAQF')?hJr9nug)!!@DL+cgJNcC5r:e[_P]`&F%`bo$Yo=\])I2imh`1t>(/A<h@%.HmlY2A*^nhN@(i7T[We)>W$R=;dju*>i.>"iPQGa%,o/KD3u9ctHc0o7LB8K1FE5F@gq&Uh60RC34[Sq*GpfRgD!"pDY7'"VqZH%PY=M:K[CeEifdrBVBM[b<rVK8UZi`qj0@'BjjfdEnmQZN_pW=+1`5j]>Mi`!bc[J=-C6f,\P73d2d\$,S"D?,cX64e7Qd#0<aRqB%_1H[^WZ1P&V;p^l[^Np"^.N:0qP+;%;-13.KWJnZOu0,NeXgj16>?7mO=@<m^'CLNQ;WYf9$?UHhg&pW=F"fO[nA5TpTXM*](SrN%'U$dP9sl(hTfoa581^/Fc!g#,\tWKkF61_SHViQY*55t8N;6>GVCe<=hEI+#YsdtNg:[/K[U@fbk/mVa<V`Rs3!jJ%HuJ8\[.<(`%/hIM>T@mC#0l!MQO&*"`-<B0pG'?o4\iqu%+/P%)V5MJZYkhg8a=_Mg/_2!(p.oC64aBZh5aM`+S*-7^r3c;ugN_M0=7Xqs6MW<"%s$cd'ep/7S')#NZqbVdhpJ]TYm<3cOS5:$.Q(?]9[T#sB2lb\2B'j,MrakoaU%=<DHHk$5g+T75=XnU=rp.GWdd,0?A*"r?T$6r8%=/0g5E:F2+5@%ILHr4A[A,52s<;q27IV)ZjQ]("he`s2L('dWM\c8lWBA]%dL@LtG3B.&FRE;UWW_/=FYLR(ek#^DG:$$HPb(mP%%8Od[U:6_at/+]\3S?3<0?8aEqq),M4]?.4G4C0Whp[cuRmFkVC#..uQk0]Du)Q1US(S]A^jZRJA.;PM;[O(`qI_/YIX=Q9hfo&%/%`BXrO0GaRY/0WiqD.r_5lrmnQrj?cMh]f7*F7hVH9K?04J9B26m+PW+Vps:i="0`ieWo7:\"+I#PH;ZPDmuIi<oBgs-L8H)mspp3%4[:ZC2%7soQ.df:Ffd`-f8L*tm@eo,Hct!3MH`=<:+*SK1%(+smCgHkEI##sfrI7V^Aa@GY*Y_iM2HJ*FA%F8@6@lGDrp=W76<$g%2JR0.\(0(hUU^6oR<WUKT/&/5E:(q-%j$)14mVV#F/ut.c>5@Ql,PAB)i)dnpL3cNhhD$qqFTk*$u!ni3i1r5iEZ1lF#Y'[RYS0M%*LqsGlc1#FLTkfBX2A&6IdreM<pj#>CJs2mUgb*A\Q`dtJ3,NsCo(e%Gj!4D=`IoAM'/=pr\>=!.`#4T3c2<pjkEKIF3I8MHhjh,%HJ0j5V3Re`-,"9(69=*QLG:io]8b>"GImW[*5'n0m6ZGH.P-,A*g/44ogcro-!4-=M_MO6FS5I+4tr<FNXs:pKlZILK>#jVM$s&_%Z_#M!gO<(1^N[/eYseD$q_8HkB$IJYg?7pR]u=msmkrG9-Wi3J78fT.p,M4DpDW;0O6&i*^JM4Oc+A?S_8c_SH?a2SCV!Y'o"-8O%i"Y8'8Id[_/)G\e.W<5FccX;[8[!O6Ejbrr[^$=XG<OR4;&Y@<o<Nc5oTFmRXqrTX[f&OgA\.T"C`1USh@#Htool_J,Jp.*Xm74>%;0lP36N[7iG-ATLQB)[i"8@/#jb'>O&*rU-^OdaM<s6kWJ)8qE<\!R;n(5QO;bdY)rSesK&SV<X6kIqTF?ce'<e!lTVXZbP:/28C%BBW[rE9t,XQX/Gb4FtG"R+EkZki8srGdghP:[R^YBr+f]^ajUV+9gJW(&;<\><X#IC&BE/)<;V75"kj0V+!.Diqb3tYH71n^J&^L%1G<ST02'_olE_!#4BA70q6<Wmg,r`MiNKRFJ9=I.9Ra/&0;''Mbms\k/+m.i5(&!tde4aXL48MH5k#=qh[OgKr;chCX-$KIbMT*1%eiiYgL^1E[=nA@!3mYOmI"/6FhN0@`c=&9N#Lj(u-H:j&Q*))>(e'0LKj-iMHV)/elts,C6>6Psn5q<pKs*Fj].<C!nN-Sh=VaSc%Rnqk)*%J,X$R?ke]L_HM=Dl9OZI"JUUAUp4g55;m")C>^2]Z?n8*T?+CCZn?j<3p]T7gQ*kFe-]q[bHI-rY^f5lPdXd\j7?Lb6ud%">E:N>?o,$ii"i;N"ZR`5csenMi8BL_BF[gB(WA^;))tpA#9B>'_@>'^7jpK'^jf`Mj+YEEm<,__FGM->Joc\c^&oY$1/9nniBUa%DlM(eM*=975\*dJe/OeloR'h?:ZN<cnhW$Xc=:\Mq);h%5$*6QL3Q>SE&#?$8k*ZqNEt^#4<QHh1=G6Kg[r[RO&!-t)Pq!=#V>p%%78t+Iq$V<+F1ZG$ID43eB*t<NV!e2Ej_4Ph!a%(_pX8=(nT4Brk-e6=GlLnlW_>)oo\j,\4!U17fi.7_J1p&.BQ-IWch[2o1&^f(%dT9\o\\'M.^3#N3g!uG:_*r3Vl_bp:W,gWE++2U^98>J)Ha$mB8tWE$Pq;VLQ?K'bgQh\BUZ[&/S4d4@'704TJ&iWF.n3:U$\"jU%\UUc)1\DNmXcTBd3O1YRW"jJem0^"cBLIAdML8Y*UX=E4k1LT'1CZOkpPR]1=(Tl7Y`uq,f.U`U:*R1paASJS3Jl[_:ofXsBH@VB%\BHS_pZA#n.+Un^hkG12S9Ut*dFi+8S$AJY*7b)(4:CLH48r4FWjYn^P0cJj^9V+WbZ+9Lf0a?a9:JZ/oV%K4MdWu#1U[XuNAn2]%aTe=?+rhnYq5\(uI'esW]>n-km]\_YF7P=o3>I4=CPIs[$_UYu0V0r&ocHhGqgZ8Rh;)9+4jeuF[D.<F)@u==DV4lY]=71oZF8d_%gCA1#<g#kf1s:XrV(@#mr$+EGXR@X8j1%fHeY>eSM"RoFE;GiXp\F*t<I>*6I!b2'rcJ6r>Ca+gH/Ho!,I7'>Ym%Fd*.sa']<W@<%%iDWG995\e&t5[lQ]Gr^)CtK]!lJJ*DQYeeNV_64<i(t`5:s`T\V9%>ANmI[/,O[i4XGOU\O/G>3_u"7G7IE1YO+G3I8_SSH]+'_%5.]X8g>@UFk$Y[QpU!UqV5N^qDE4"j/D2HEq_-"Dde;odDI?UN?bSna>uc3VWuD-.h=!t:U5^XcS3%e1?#st1;mr%%o'F2Tp/?2f%@pc=//+r'`>E)<;Vh)?="ofqDp]]C9T[C8Da'[1ae^DV=bua.O5J+GtP!+0rj_)>:4r:$d=9,+]YANthGD+#V3@8'>,B'm\lTuA(%odWFV&SjWGLRGMu<??5j?bJcrd-:d9YkM+F*P<:=WfXsuqk=!fojEa:jU5brj.NrReZ6j;lIH2hAP'>i40\G-kBk,;f"(]LVK$`o%kHXaUC$-Ju9?i$[^+Rs9Xa-Y"o"Fg%JHQ$Fo^$["?g?K"Ft&tcHc=,tiBRUCLL8^#La>TM43,oprUqRX$(ZR+Q[UDC.Aj@V(uKno%2&6fi$$ud=SEK`sn`&)9_dJ=LM1'TJYM7B2.@I*ghhQ+*:#7^.e9\TQZ[700[`L9;3)Af86WUcJCFOTP`8@O_C]W8&3aZ&n5@1F.%I(iofoTQUJGsAY0>Wt-i2IO3DRb)05?%2-uV@$0KX2Wf4ANPO'N<B(c8EZ7*^Wp%RM[P<"g\Jh[g(Vi6nmO-2C7D2E$6(p?m:/fK%3UmSA@F$Mi/KDM"1oc*>4W)\T)<4:fDeQ;fD_!cCPD.tW[G6KcIZ>AbFosk@MLJOG],i9Yd`,j>Kq_uO'h;rHhk$F*?Bb9@@++/Z%NS8Y.j#8gHH[7T9=MF3/?A6(7Oth/%Q?PKq/9c$\ml6?9[.Cs.>0ljoA<;b]>X$XVf?MWM-AgT+F!SsH(X3IUQYaDJ6Y>.6CK>YZ%-gMi1TXu$=pa)<P56imaV'!N7Uo:'jOSAB/QG=F^5''PNosnWNX,Wb&9'rCUF!I&Iiluk`p2kQ2X1lk2kePj)DY\'bUZ]ZbBO28!%mIhU8mHpgG>i&bdDj?V=hkK4,Ha](ep%.k_alH@Q]RJY84kY%uqF,V<kb4pQek[?<hS2'(pKi#!5VY4(0QRR#]],K;:9AF?>dCeQ%W.#.a^R+7VA^`iYB&daqBn$+$R>;4(gX^bI>/#H'<(kOBXbBc#UMLb(bPn]01N0+RUQ&#YV)B$6"-RnXY-`<)I4e[[rEC8.*,h[V%Ubd7uJ;a,-U5kJ*H#>/`c&_8<m$cUDJU[F*=?^@2V1PAA%oAXB+1U?JZ#oPY1_Oc2)4RC)iSZFt>2"7K(Q<G1kK'$+Hr]F^$X9bu%AYfjBrs@E*7K2@<nYLSRkE*9UM<&@;NbY\c_4[++Dq%k:$]/BO`Uf_EkO+d&c7f'9TYB89OJT<8Va/OA#r'niMRB@W4udo;e#0DO%2[7lXbsWej<U.of$u8YPI_geJD:"`tBsb?jeu1d7X*j_>rrj8F-47[('<ABWp@]sbqYNpf\X)H2M.%>K#5`@[0jn[])l\h;;rh1i%+W59#l`T"c=(.?T%\U/OULmD<9CFO+JlU<J/+:Uq(#80KpX74<pUn!O*A\!#H7TD&PQnZ+A*mC!QhC:-4q\S#GUrP8gsMUGEoa9b%jr3WjqLebN/a!LU+(?P>k2CIck2:WjgabUcr*'3EDco@S;IDXZcV*"q'f>1&@Q`(2Fg4)tQQX:\_09T!MtlM:/1KnEI:0':WW$kn%f5%56pQ+odY(mEHK.p3p]_$b6%]OT5?/<0G'W;+;kIU4mQ56\T5rUP.[(0RV7S$i*/ENL)qJ;s:#\(E2Q7<suhfg+HT(A>B[dWPV%dRmEEi$h-J4=G]$\nG/S*c9J!jb$ld=Ng+24?AeVqhXoKe1\=s`VRKBE=JL5]\fYl#;*-an^BO4@n1h?l#UhVh"E[ZgHn(>^c"aM%H3$f"Zk?hH/>(M"]?)T8n0T7NhV'k=_lX)U\P_j33L4&iT9`MA)JRS'pED[-??^&hs&=4-p)R0^fsSYMc%RB59/NHpe:.66Gpkbn%fD26XC=#!p2/YX9#09?qUL]rZf?7390LT.&q*o*TIo;Pm56oBfV8Z4Io0HPrH0sc.>EMH'Y<R-bdW/<qm_>@tQ%0&+`I=]g[U)a5%IN!A+?I@NNe;D*ZCh";<9e9`NaS$e0gP:bXko#ldE-1_3R=>\4oO9j(5@>G_k>VJ/A7`B#Qn-"c4D2CH<\SUG+%C=\ALh,T6O'7C%@4tGI?epV5rqL/s*+,=?k'FF8ICX`q6QXf`Bk:YbWGQLSbd#E%mq6$h2*-Zgddm&cR%<Ag<`3s&%j9sehEg<gI?tI.oM_(fm[TOH%l*IqSetrdj5@=50CDF-?Qnr+m;LtBtKp8k9PM*$#<'0QVb\Q`W9P-#!`?Z03;HL#3J@u?^k\e+q*3MtLq*qqOI\ae1[.76I=@,8L%fiu\'QKsU9cB$,G[:en'*N!OQ&qZ;-Q/1MD4`?^k+P&;h,Qcs2X8:9)j299mcHZ<dEHaQl6+I>`)bD<]Y/%t:T<GoZP&L#OL\hH$%N'/;5/)M`s`;;BH_M&asp*1-:btT`6q,=LLnT/+4AV#%!BAJ3_gY5o4H#sF3YN%$@.\G6QGMcPjYhkOgI$6^8!h,KYVfLlD0-<&)%XJ98Ni9h.?BE^NGbYM`FnLt6H4I_iA*TVZaLmVVi38T!5_O<X5\UA\K!VsaJdGJlE,O[M#^50YB04=Gk*T6VhmFq5;U#L@Rg')Un%(Qs&`;/99L(]Lq(Xd@1ZH,6FmK.k,!O1l]aUXfWR6eA`Db&E$o[c6ZB?d1N->8=3O]9PBF#rSp%509Lr4h_P;?CiYFUdnRGG]'tT%NS=>b&qo8Y[(NdSeru=[X)5kK,Zjbg*t4G%7M>N^NE4N^h5KYbpr031dd'Wq\U7?qA-?NN[+Hbs?8M#8m7+LXWl.gZ!E936H)a4^%ND`u0FK;P?8o@V?DkrEQ.J*3)kSu5[ck-"ohS!M&eh<<o`bAje0!"q@1)<H,.#hufo2c;&<NC;T$$,AuJ']Z7l(K5[ea+4:kKUjk%;(,YHeI"jA7,Q_3Lo7)Ig\c57qs$[A6?lEJBK\$rY;83&c$g]<IQ%=?J'KBO?+ko@Cm^Q*I624sj^!.a<V\cZ7?B_/h_g^1k>$E*%iC\Ed\47&pXYjc\-;)qYOk76'X<NCL3cX%Dg9F%4Pcb6ChE!%`D1$_iE11sRO,j0k(9=!EEqnO-2d1qZl6&Db%S3\p^)h8`rPi@A%C\[bu)OAt<rY-Ek-[VZ[#*!Z,p[K/&9':S.71&$TS;`BsMT*o=lMFZg6CX!?kT/;og="!m"&+<Ej&%/,r6XogGD>M1J%PZ`ZErc&%h%>D,?_OY"VTVbbd\cd)8>g?#?c(r%OqpL(F0YrEV#)Le4.kp"R\!!`pK?nps3p;K+,+=m#C^hM+`Ta9_oedtK>9.pX9_*"iNV_+%=7>)O^?SaE^Ac^L(X6==Ho(-.O))H/I$)l`2Gd+Jq7cSf@^1-1L,k!n_XAqgkPYnfZJ"^E<uC<'W5B-2<Kr#F`P)a%YCAE]s0pI9%PR9SR%NA>oaN5)Z9`3^ba6EDEHj'n8khkhZ.Ds0mR:&5FLcU-Z=oI6Kd+VPJ=[6GeG4/45]DnSCeL+,7&L`9!nXu.4c#Gl0ilq?G%Th%;)=]kNLPeJ8,7I!M?d3<"fmr6qTHL18K0$@sqZA7,-IRI9?jCEpMTeUbGh4p=akP\KFocp9ranb(ts8'9cMQeGB\d(lD,IGJ9%2:RLc3u;?`i3Hb?Kd1d-;G^Ad\'q82$'fMU#OG!RW:(d]QKPeb4d`)WU5G1&FjAt0*pLc&fC/dn(D54ViVFeXJFCT2?gA3;]Z(0"%0+:h=l^atsh#W9+AF:dcq!+(rq46UiXr?MhheD%uYCd5uQ9aa!"cTU65f%rfQgR(A=oJpY"$%QXJ,afYIf14-rWeFaoCYmY&]ekh%f,5\bGGCZa^C(!+4sH6\Y8c/EH_Z)J@.4's/$_hG*S`J;pY:&m6AGsU%H[RTA*hYtTZb)Y&#"73rd2U3&p=2%FT.1.Z1!'i_mC$a%FYJ,d6/C;jWo;BDNeXq7"fse;hY!Ibo<3drUT\l`%7D?p:H\8V^Ve54SX4n1^V??96Z>^"7SMYg;kmj1HAA'kl#+Ct]Rg\H4&oqT%O,q12qP*9fWlSH>'FTA6^:GE6coN0do4%N<'^gkf&5/,n%T(-4o.5W!9n`9WQ=\\?4#=KtEaP&gg$NU!rFMq%^D(NrIn=2^p=WgJ%_6UY$1p#2um,iY1ra<-dp:&W*;^K&%@(aG,C25\u0.%3=M0O42I3kKKb$4DkbM+3:fdNe9)u`t<:1s`P@3;t[Xmb,K8ZfVLFjr(&%CjgF&Pu0]Vh*.rXD8ZsUVmZ7cEM0f5O8JcLm@p;`J.O;\.8a<q^0F_,G*G@8X0eINT+?3lIIe+9goKF8oQW7l%C#!8Rb_.l_oTpJ%C-H^3%@":51iNV8TtoS_k82-FC(L1>jhXgol6<\\'t(rD33(_NF^R(]-d#0PI8P;qPeU$bFudP<f@"%10O#bY0?s89FCh]DN7DZX%f$En+mPfNA??8&Oe\BtTg@oNmC#8&H)`IprUNA'cRt[CkDUu!gj)qDjn8ECpT'?jI7,Pc,4o%^>;jK2DK\ol:akV&'TMbY6eOc@a%r>X;4c_Q;[g%I60Xl*gS)NVmiH'$nQCK,$gS^mi\2<GR!LZNPQUN]UWro+bunJge!1LEalg_\7`BD(PlA'd^>P"?10e`Gc1,ApK+%PjdqJ;:GrDeardJZFPT+9omV8iDNn9Y%FA)XZ+6l2_0m'7eMhu\R@&JBpLX1l/+$=:')>N4;_Es6hP;<:qfsnNT*u0ZRr;'H/A.2%FCd'^8=GHb^IJ*q4#rEuX^>E32(CKM3m<&g=H3-1_it)*J"t`n[FD^(*VbY:Xta$R]GF?RH)%WtctkKsg'MRPfmPL?#)kBFljpi)%(/Uco1%O`k@(iY2V>)r*COUWNg,:JE[*eJmb1!;/fR?%.NRk;i)m5<0Pbe"a?0@4,P%$?#f$D-ZTAMST)r8g3?NV6!^#)l6!KCE_%JWgV2\c^ipc>D[H[N<&kTl6]]\*M4gNUC&Z2ClF;i%\<><TtcSB)+C>Sf\t:h`k;YNLmN=?=9P5`,W-9r!45,Q?;]"Q3%t1:S6F4%hN`L.4^GhKn4$hmgs+^4QA;@=NF$>Ip$P]2^X8V.kI7eO9#e&3R$[,I@6\_4T6o81Z_0c,dd@%[MLVD5V0)aC4K.7/@gVU+lYh%n%TM_a)5M_IUUs[KCYj#INli#5qV1oo5H5_bh#1i5?Er'D?Gmhm"p:ZIBAI]JhU[NBGUM1L?m2[3+W[-1o/U*tDrnr'C*]9BV4Q[@i%m6^_chIo0LV88NI]^"1GdIgI%k94cVgt5>a7^%S?S%R-N!XP;[c7ZS,2c6p#ED^s3kKW_[)`67cGoQ.cY,?!/9D\ne86a-"`8V,A%1mUtiO5"O'=Q_=BqYfLsC/c+88iub+gt?Xr!ub1ZUiX:us)ji+W%4I;<$V/7'e=QYgqMM7rHctMY=KU6fjV\FjI4jAm*5DjKc+QS%"WL6:(2E(/3&e;6^C7HR+JYi@[Xk>0hi92XHhu8OGHY43Id/`dXl7Wif.KbsY;[6WV;9VsI_aFko%(hCr4qogfe?XYFZZ)C8,ck6%)7M]([8A^;l.4>?P'N5bI;8.Sa>'PbQ/&mFOqu\Tk/X)4MoVC3qHC\`Q./BJjg9]5qG=8!adb!U?Rl.a[rSrXj64Ycl#sW-[[L7G%Su7NV3sREWKA1_'s6H5^[nh-C<!&Y?rq,dM?-E94q=S&F@2sC[!FK2H/fAko5J@"UETEh>e'=Ae3gVWA5nrXVm50Q=]3YH?T;:e>%jP.\En'f5>ro6R"^9d6'Z$q2qG$cigVc)`(@;JZA.[?"LrQ6L63[TOVjkJ*Ir&S!PI6+rD!\K^0XMjQ/T!,"IV:/+n5@+.]YC&i^%c+(*kch5#qn'#T"bOJj)i&%#e\N,W3DBFr!WQXo>rO%DccY>SWFUPY)ft0g>>?gL.6Z3H-\38\hESL=^,&;T!CkUUb&?\eZXO6k'%lfrm:/A/MS\3!-gh!E?9ajn'eF`nOHU'b4r=-M8a--jg7_SNj_pMmOH;([22gur#'-6Lm=e>O4rSjotBNgg3ipe+o,%;>D3-D]%$%>Rt_Zg$G==H=(fSeS<A/(o&UZdH65:kXtbVCfEK$&BVOk3Y33X>[.DYN&R53r]&a@BN0IIh"L-mW-3V2gur#'=`UW:e>u2Kn/VQK%"`G$$L\m`64.\oO#oA/hV8,R*72"6$Z:Bq-aIC(R;W(Y9(-SuRkJ5Zac/ZS&7-ojR_r$@ukaT3Uh'a-'G$!]9hWp5?h\06u:el0;%N5VP#?ft>?8oLq$\0(^M,5Z9\'?6^s>Ofto"/,1-NrH@;OmigNI73OPD4ou#`:^LH#i[Ra=f$Q1*)rT+9>.b%eDlZm0L>;qi_-bH%5l]'7"rq!/2W1Z*kg*g7c;`X=kTuLei5):u[<b17#:*fE)>X.dR)WLi>Pu=@i&D,c0^l<SW@&>R+2eR?7tV;!Q]7Z(?+X0B!W`J9%2im^kk@+MYQVh@8VZtEsr`qk$WB'keTdP]K3,q:I]b7'K8!Adis#CX=EhDm(b?JgI4uASq&^l.iB/Ml*Ie0J?T,_]DR_RX$0:&7U%`#b$g&k^0QS-^QDK_`O)-"mLPLL8LB/!q3C-XLD/+s`lKmRJhm.J\$#c<6[@0II*H<_r-7,[1j/+&7#2a-MW>;r/\KrP4K^A6pSq%b9M>YF'i8$;no>]M[co<,P87Z'XMdXQg<7U-:=L''<o$T8<#C^<E[)j*<u3BG6H%]*;\hr%(_JHY)YX./_@!:"h3s#9Eu&%?!,ru%7i5D\i>J/$BNOf!6c4R`,\ng,,>u!lHV@qRj6DG]._UX.jj3;V\SnsGn/Y?LGIC`YWYJcdcBb/^c_^&9@F8qm$e'c5\b__b0Mb?@%M]aS\2Et[jY,ATLaJss;5\,GEQq$eN]6gC;?$DjMG(_UIXuatmL]2B6m%o6Cbggdq+$*J6Y@3qQmaX<]SLtuT9ITam8jOH8p>M"V%gpS3D)o\.MFqo3MQ>lM5kpN-:b)]H2YW)LcRB*-2XK\dq@\,#o\%Y"(!ad&D6Zq/ed3E>0-6c,.5V`)hMugTdfQ9bd7IXW]S_nX,%'\.M=eqM:rEY7V$*_n7C^1)>Rd-SO%F+KnAr<Y=F>[;ZD&([!l^1o#GO/Bsn)`'$_8'+Ssh_g%M9Y0HZf8jo_2*3Qq!1g\CW`W_V%A<ZqOEE#V8qB0kNr+m(:ACjP,bUmOAUmPA\9hd>\fqOG&<6ie\DTB/=Q:a<?Fj+^_=CSA@_mKf66SN3P=2At$1CZNgN#UFK[R/1'%M9iCUT3KJ2W3S:7UJ,iPa(KG&Sqn\)VG79'0/eqRc+VH%@>'09X::8^*$?#k:Xch3kNPMg8lm?2JVbE;Yq:GoPJCbUk/H@"hQ(?t%'id9+eY_pHad+9[/\bTe:.ohir'3q(9%A[F2;esZ#WBm2EcIRILl[&i!cFB,_i#RCKMIA0RR."1=Z>A6mVV!&"9=T=WVYU*6l3kP%^9kZB2a4IdVBgJ)36>(fn17]4Z14>F`3n3L(\s-3\(3\AG&5?8Z-FJar,"fIP3:*mR3@l`MHJh1glGPSMgP2X&kejJ=RH@,3lDE]%V(:0Zbu"VIHZF4Be$Hgl,:$^&"L+(+_L(=JhcZ!!32<G\9.3UjaXN5]P2/M?F'J.K)HnV<BX%gDNm0;d4Df<FYPldAWB5>hST-oa%UVI^P9U'dqE?B>>rm;p/TH@;>rIP;rgRfes&eqMMg:60#6(BK^!`u26D+^QKA]\d]Dg>&k(*T)V9TRH7df0/DZkG"C?*QW1HW'j/%Duf:>\$-br\hYhH3S>%"U&DfRg%+FDWVIN2ChZ-%<e$7,d/orD+",RR!Q>]1SF5C-oACI4\,bGLp:]S<GJ=[h5Sh+B+jM&;;KW#K%/>A.bPo`8`\7<dDX1EC&ld"C<;4Sa(Xh4(&(DKjL+oKO^$"6fhc>DFE.lp8Z"_p,PX;Gff9THS+ACBg"\I'$&NFn-gj&m="H+nWQ%POZ.'abd_$gCqVPI_>eg=K!mpm'5I-M59lBVTK%dLQT,k#cCRp>401kD2YiJ]e1U_c+Ls0,Rd$%o"0@QDK&t=Rm'^Cp]=$4'TnV:%G&cI1c[@'B`^caD8!RbmM&@592J/7gkZI\tqZJVf?(qebI5cRne9]7X,_SjZh,:8)Mf:X7le4Sc&oFMRIiMI_3BS(/B6K,Tr&8u+%\2UmJ>A#8#A&I=NjeD:df(anM97\-@h`CD^-t;Op.QH.I,WNST),F.3GiHV?3EKi@hFQ<Q[cCjX\WA,Ko(O*6#h``3)iH+VcbH5e%5PU'QBC.o0J*f)(B!%AY-=J7\a\Ue5Q`bH"ba\`cYm;O5D!-3jT&>mo1!,tI^;+:caJOpmq<1-\l+KaQI'hkso_*^[4u13ag$O.U%Y_'1s@Ys?V+Wq/9*s6YZIgd)9qh+"ZRHlKLY/O/2L9r:@Z.%t)HTs'+p1N!3Vr>3`aG$+B-U\o.lb[WJe!\rkVUpQR\e(]kk=A'q%TFJq^?`$@aEf^3YlU#7O#:3191lO[C"T>n<F@QWdA)dqP+C]nlKaAN+i7]61o-7e.(1[P@(Js@[U'dU"ekNEQ7/0Hq,)0+F>Xho[%^:U;uj1F]6Ks!ekklSFA/lEj1).e*h3,&O<[<1h69+g1*JPOqt+@Ifl1=r8qqrcg@qPb9t)!t0MBCFfn;:KDdK^*1nG[@9$]g9_o%'::b"K]G6n4?7(f^s1!q".XfZ&QsX@;(WL\P&FJR,#8mT4!ett,V2'd\B)=-@mGEETYF#q\5.H\[9W!)_.8>,[,ZE^J'0A+@Yqk!%TaS&s@hh?ef$K+Pcj>'&1Y'i`6S%A&[G[!$FKA?s$9Fb=4Bi8#GQf+k(7_L]0!J2X5o3WT3+WP)GQjX?/N?B4?$HODVhXrt20@dl%FBFJ"5n.*X["8dsncq$o4sEUtTYjoIe()gU'9\"6JA+1<\A-cKg3(4H=JbNB1X`,AOl!djrhRL"eb`=UEK7@2/o-[A>bZt?p(i'4%6@T[5"Zl$FP=lt0a1%BDc6\ND-W4#(<b4(YBpOTP%#/5Zg$gWim.#cPbPcI/Sske`Q#k?n=.$@$+qrd2_%Y=p.$]i,_I+NmEb(/>%-Vn#)(L>U^kPCdoiSP>G77[Tu=tDuqaA%)K]fC:+pN_4*p7_;LmQOc4'8t\D:B_X-pO=&8*h+Z]TISSeRTSo774LiiZin7!m-@F.%L&`^]Z"OkUrlEkD=Q$MDZYgGNJUR+9b/];nX#"r8T&MFW<""Gm]a[c"l/_6pFJ)=q1r;m&V[8kNpg1CIUt6>.#md'3",GS"0Zdgg%<sgq8o(TOL_1hhs<EcajYfgIb3AF5K?hi"POn7o\Ri]brYE!P5a+IF/V.j__p!&">NLA5R3UkCpi#Hu"Fd)!LeF>+ad^bM+pqD,3%`.aZSW*u[fjI-o=.dXnQ,+ENY6KEUS4c9V81=HZ[^&9Z1`?nR.9LlAGXcQmdbl9AMLreA&?aDt_k_-"/rka52DM=E0`Pf_:Lgj98%iZnXnF>O9BO\GbB+J";R_/%ej#<UVl)[l%f3-t[=6n">l\]*f1\GC/KR,ksOR1>n3g0dgP>egbf$hh-mh&-NB_h)[k-EmBij9XUO%$mu7;>#25_o;K,@bGF=0b.Y?\o24mGja(lQE8-KoJQ8tV`l_d]#''5,i+ndc"a-*MX)!+jj?f\<E(-!MKBUq\(j%3!8S]m*MSC40%U+TO)4=#^&TMrtITp'[:#I/g6YDg[,P:GTT>mdZ'7ceGb7:\`rUe[i,_CFoh+u7H3?-t\jTdVOt9B0Z/XNR(8:IIZXYeMR\FQ!fL%`aeSjb[HFS^kdpl@3W8lT:=;"A-2[W(g:tRTs9E4?Zns31:3tlR?7$):`7u/$,Z[_2-,k9MhheA5arUQM+&T3UeLZB`AuG&6.@Wd%.h`B6Osl;P`\O[$RZpM[`E<,rqMUf\oj^"0&qbT7DpHna/3t<&d!4\h:ekqnTrk2enn4VEq;.!n\hLC:%&Y^OXqmO,<u30*.Q4i?%DW]aIDcHNL&pB1t+<hNO"bf4tS/a+\%pGQ#HM12:Q3tpY@[UL62BRBT&*H!eJQ9YeFZnMrkDr'6LRZ(hIoHr6@i)HdJOcYoMk$J%%;`u,0PJrEh)+QPb%l`H8cp+Oc$dOM'bBc/,-6qCl[_Jes_`ThX&bjoME5(r7kOief^0&1Z%Z7&U[m:g40@gDATZB-Upk[lW[Uk\n%aK[:QhlZk;=j$&U-KIa:G&r7C):&__HA<<qnMnjYHfK1i)9+IJNBP,;/4*\C,&G\$Q195A)YWmc^dlOlp=[SU-#DOo32@`U_D6e$%R&M9e`%A$>G7ZGpFlH[e'BN?S19=iR7kQ.u[)R[RZ^u2gFnhT!#)r(G4BlElpPSK7]aXkH(rA*+1.54GFCF*A>(LD=#atQ\i(9i?%/cC?meqh>4ou+'GCn`@AmSNd]Un7QS7I&FL+',0=ZG3G2^&%PgMH"jrT/D(Nla(V\=Ji2k"['P]S%eQ)'?^+qp-sr%MbV,'jVVZT%?=.+=(+bQ/6W9a+)2VKT83l7UQJk_V_F-f:[M=_ZB$KQ0/VOkF=HnacpE1]I_G*'!qJT!bfW'%NiI2TPS59Re>JG3i;RjLuM#Oaq%DSkWIIoHbFcKgs-)FcIjX+de3C6pWAHm1\QX)fRX6obiCfH*-SZNJ`3`Vq?;N2kJ2N\R'\L:JD9%iLD5\I_`"?7cj9D;g/D/ta[Y%)Pco-H]:kWm-.D-8$FQ.nD"$_!SSp1`qcpHlRHoGl12rt>r5:d9>t>9*D=oZ2ljEg8%!QO=t+?\f&jT6LUHgAiR)E//o/70brp;-%=`'[72'/%Dg0BUc,96+dilNS."^op,\oZ.3m>AO.D>rUD:CLU@9#0#DWgDm7`GT<3'mAeY5$8l?Vq=_dC^2e3bbIh=YCj!9Ro!Pf%XTg_AY14"u'O@a;m&@r:mc-rq'YEbsMU8<6mL3G[bo67](Pf06r!9=,e']BSG&rX<+g=hCZ*gn#BiMa+0;7d_mXg>PDSq@f(6%0@%S,;dn+ntLQG$h^?6&cq=OEY@'`7(Ye@40Uk`sqdE0&Qg>fO(uuDj4BV7X@k49!4]@TJr^ZbYgG&`p?TA=Qc[t`dFq/6^2-o3*S@+%$FLe<F$DD@en`)'=nT.KO/Ou$f`,X])R'*>hpesiW(HJA<WP^I#N]1oQhFB+jHKFWIegqYB"U^\eKoO&h"\RWdmf\:2p(ki?)/n(%fV)s,<^X/`n(qMLRW+:s40L<u.^QD@l%r9IBeGMU*8e\]h^2Ve&nu_jmM^mbK%c-%cU_$0:J.%8]O#oJcHGrTG7D07Nd?)&=A:`$%*%"98SY%"^(PS?\Ra*cI>"^g=I$j0!l25"BoT#Uf.fZ63c7>G^/`!$u5#0nQNr=5\>u9&IDl`.#&kSr[+XCMS?)V-+B@V*Qq_Z$6%Y;92-q:3msmYq(TRa*S3i]c8j0<47<CI\<1RP*#K=#3q,Z'U/J3kntJfrF<7PYj"%f@=tl?/iKHIoT5+=%bJqA'W<KFFNgOf?57:%e+o[]41p&G:$6.!Nn'*4>YXrcMG75J(J_6MWht\RAM\Bb?1]&9=fU`a/5K&YocI/^q$A&8]a90c:$8uiJp?X#X6E"T:+]bUp\NWZ%3koqMg)9^72'&;4^9nTT?[c3Rk=:J]gTkFiVXpjb$`rFcFZ#`IJ@IHXA<`f`c0>;gSWR+5Hh$Osi-Bp2&RHU"b/<3[0Bq)B:D'CV%BO1P\I<FN"`F%G&kBC.$O*)%o:(qQS'q#b+'EdfXRq,Vh@tE>F[5-\f>1^n']rE]h97E<&+e=LlIGA-!Ap8&ZYQ1D@M0kW;,YSK7%\kuMs=='<g,P'N7rnMUr"J>%UYooF;?g58fmT28]i\brZq(PZ?nu10q`?I^/2eTkeNnfjXiSq"RKleIE&lJ7aB=m;d=)it"F>reK%GLJtpIs]G2?USo#U:]Z)Q)`lrgj)ZspV#d.qTU7-rAZ=_`W"&%Y.hCEXNk:'Bg5Mclf?3_=98]9Pa]/N/3F^n(5YE1Nt]>Y23Ds^%\,PA(IWR_Y5jkg;;e:!'@;liLe>b>nQs#;Rh*m'm!?KD+_)H1e)^$7Ja6SQ^k#QSfc@u\[mm6&MKuc%fS.0W9GM,fJJ!gag(bltE%6=TQCB;@qoad%qORC>L:(=.!Y5-l=CcSR+)+L;I9q:uDM?kFmTITsuJ+:CA;0Z":chSNHg",[,f)Qop3T*gC9<Ps_rJhmJJ1:dLS%&h,VAcs;3uI-YAu.AscG28k;9elpds5n1'bV#AGLTg)NT1spE+:ml@PS'$o`ZQmEB[m.L@n>,4rAGG!7+1t+TBP;GJj)Sa45G6.p%.@t7_)WQZPcT.tVgN,dQ07/=](X)6`MCC4<nLP6d6AAk9n06U;1KMSYr0^ZT&oefgieBP0qTAE6/b39)E;(1C<_pHg/s8(Uo*ooV%o$RJt]BPVWd!<UF\1-lBlB9qHgs%N&DdCe5f@'WWL:^R+6ZRX"_d1bjbu'YHlib7NE;q7n_j>nE\Qdrp=Q/V_k_6F8\bl3%SBuf/%a$1uR^&$^<mCtmKMVs=,bmM_+6?m)oXMn;g=Z<Z'etV"(T*r-?0A+AYb*YpKe@5;i0aTasB,Ti[QJpLMj''1k^',T01Mm`QD'/XY%6!>h4N%'RIBAm_i3Nk*9j*p\p\(u7.Sj`ub7k%oYm:5&P0DnFAkS`g(]D]mF18a-t8[)T_?l6JL$E-l8$eqBnL=JU3)i!c]WeH:R%IRc.%cTR#VkGGn+CKrB&07dc+#bo+_%X^f9fEAZ3I)j6"Yt2jn&WW^i<//GJq0e7'pFPBUi+0d<"b2$X,Kk_YQfS*FNU+,^KkjN8%F-qs,=0GS>gueRhF3;_<eUE!RL:'g7oT%MIo@cXnr2=d9n!D0Kj(Pc&.6LS1Q/WQOj#m6_'Mm`+9edPlo%_-+r;CUaeqq!l$G-_\%r6<r&g(RW2<=bF%Ib5)Z_UDk$M+hA)h?tgNo<%t49%+i>JW39]UWU<oJ+;=3-<>tK)ncWkjt:Q[NOhd3@Yt(l.6Cq^H:u_oZ^:B+%^ccLTWPHrhrod)mMX]h8B``ieQ9Pl])E$[Im<V(kE0l-8`Y(PpcesCBWR3dg$>aghh0jPWC:)/'-+_N1L:;XJgh;-!Z5H2>fB%]q%UG+@Jm/GY=_U>7)j1d"701C8,g%-8Mr*sY[=7&Nq[IbMcO/g=1iF?utY\M"okee?>$&]I`r3Ta;g*D\_B#i5agKX#5bo[>Bc'L<V%=e1aTL4W']I_r]2Mr(G4;IS?"?%V.@c(%tV]AuPb$AuYhLa;@6j&)_7bY'X\VFmrtY=b96[47t%/MKQ@ICa,<Id0XoV%oBP;k#+F%F&J>e^=WjjNg$cUaB8Y.8caPT]U<fRK]Hj488lNH*4K]hk`#m!I.Prs\.UannEnCi1"_miN>!^@s0I.>S,+5no"`VTAri#/eGnI^%7[S82H@L@Goi.&b'HIXc!hB&t>#YS@[9d[Df7K(fB5'ekO*QmXmZjC<#0P4r4+,7L--X%XqC<XJ0H<2t0Y$)(T\cc>kmk<lLQDZ]%G/XP?:5.NbW!YO&_NdC5S:'T'Yt"pm4LhsS6od^e,\&omn(-uHc8c_'Ir)P3X%C=#&<.t`:^)!A)gKXo"Dce@^R.OJ:L+=KkKbaK%II$VPQNBppb@Q)#!\.-3X!d^-@tp2ajBH5j,7E@2O!UYm2Y$@qBdbn0I\5j&;Z;hgl<dF_$UcmR0'qHRrG<9W<9mAn.rG,4^o0,@%j/6VpTpXq24h&s#D&$I.)F,MBIp3(9fnTpE+*jk95^uWi?3;%1#9,Kee).+ebuL.6$8?3(?q?8W+??=6;:!iaNa)`)[0A>+8#H5&%)jSHiMKgT-05kBjnl!2pgTphP;SMY!_I$Tk(Q0n&B"4)O[4;4&0'1!udGNf2(\prm1,!&pi;LWkHslQ@C\dsc:-lu<e)+O.RnNST%U'dhtD=&goG!:q,2O+)>5CSODD"me2l94$/rMHaYqQmN%IWM]"d*Rr^BA7>'`S"):h!5b[Fm$/rIp%g,#A6Cm]%8T%IH;R+lc5sa%>M(dPahPL?0Dnkc=<`@=mSG:l?GEHh\UJt1T:7(<\,(A*<ITA"?hi!bm]W/C?GF:9r5B*fls@Hr!Q?7I,L2MRNMgL-WTI-D,DKKW%'h^s?3=EOP07<FjCOG8krPB;?gIqDA]mdh'q:t90lP$3Zp\G'""gMG_,YpkAf5FP&o\\HipGXtuPOA)Oa5XXjn(7=1\ZgbK>g7Ao%?XPo4h?+(d8=eaH^[M[IkGGns3nu1Qoa<9G3W)3%ruY6tL"ttVWI+U:]mer;1q7;Y&+9)unXRnrWM#-uC%(`dXY+"jqCu\E6eqi+%np,h(3W$L=Ok9S+p\OE#7).R:?era]odLqJp[QL7pE8>X2bQ#`Gd!a#QRcka8'/3!Ej&hp@]MQpqtka=_U%g]p[ZOQYFea6je&.g%<".#nYMV`.p*]V2"jJL,eaH<%j-uF3&a_cr)%P-S);Td]Y?s3[<kkV/D]$7@Dt6nUJJ.*(p\KRX>KCkgjB)?"]m`03-/@cE>?+j+%1Pa"ZB"QYJgs"`Bos<K?a/JB0W:>fCpjB-?Vlb=Eh7\8$=<cU]50^ciiE1\QY'f[1qfOVUWC`WY?GGu6rD5"oENe8'kcK;9Nr?f-%Ic6,YB_MJc?GCHgSPX.rHi7']U92RFhWso?^N-o4r;pLP^")RiZ3PB96>lI;T/Q`HHi:ej_cYo:me$r@M"T6<^U_rLLm6t$^JK8n%ML5<=o7:%4EQ3A(VRKu_F0Art9TiWY,$*;j][nf'^?$HllPH]D=9P4rLUL5#ZdIK18=,0>(si!8JR)a&,h3(q^$#diL@/JF8A'/5%/UHKFQ90'+YSLNf54pAe&7`Q#/d0"%!_s&d,mLup)+:DI/=sFHO5ftEEkA!Qm02\Gp7U;E#3C*l\\DLq-^GOudque")qi'N7^4o;%,[4QtcE(A*>g1/GL?WrnEDW/e^G2#i%Su8=`tIiJL[AXHjZ@B#[XW2>pW)uKl2>M_AZL/kgH/K=T9DY<HgBqcAcMG`\67T.S_Q-P%WS?0B2Z7g%^[6L<AXB%'ZPTHH5B3&_pA=,AI'2)g'bf$4bB!HRrGVfPZa8Dc[@`0![e,s^WqH8T97-3QF`TXI<-CL3b7@cJC.RZ+%;WHuJ+Z8G04&U-DkG@'c?-i7805JZq1:M=c"s0\-Q>8_Xm&II7M5DPYMr&tnob6r*5Bu%TQ\rC\?\(W."kT*D%>M9K7_.>W/[%A-%.j2qsK#u0]JVR?p<3\isq]Ta10?4GbrR.%;'0k=+b4;f`7ln43/7]M0B6t$;njb"2GM(\EhApL8CA-YqO_)M*0MPXA]\-V="1H9/%E)#=]52Le&/trEm"&LS]ICHI]'pm6Pi^765Cei?%CP<:YCEKGJ8YrPW>[$JC>5bi!F&FIt1UX<dh%qSaV,[TLp1ERRph6S\1@B=k%[_B?0YSRcjX4Nj4/Ncq-Eh9CsAW:n6es`KcoN*MHb9]W_6mL79fT>DX9.SQE:/OKEo2U9bs08E[fm@&9D*@$W@co,"FSl3_Lrc?p%6"-qihUV;Z\H57d8G;j)G(l`dY,1YaTNJ1Ker.8,`;j#c#=%^aPUA]!#MgC!93kY&\SKut0=RaTS'l@l\K1-+^UHa(8N1_=f,]4"%&KascpTXjJPS5,ZbE)!U6%&17qSXFG_Lqd'`f'Fr-]LVG2qrBo%)]Ys-S)jd]I>tIfCS!Smj/:VMGtnc3ta#FqNP2R>=BG#"X%3#%,Sg&GRIY!o4Xb6>T&.nc.tBN3@5:*bD?\?/'!i>h8=8MsQ/*Xqh_59Bj_"UC*m=<d&?)3gpj&hS[h%@rq"?,*?(52h7o-J<5iGWk%T""<r"Dd_VC$!X_Xr/&O>-YE>\Ff]a4Dq7M[5TE4;q+][T'_Higs<$%g,='EX,8A"VeDViK9<#iXaSr=![j=th4r]Dj(b+LKC^n0%;-11X1k(/)Mj"(LSYn#fhU*/H3mc$rVQ8X((\;8LaD1i=h]EZ6`s7*d8b.:V,7T-.b/>nchVT_sp4h"J^H/Cdf;"'tcq/[N^_lZF%qng[c,5q66;KDcJO`>;I?D'OW?u`U+BRek\<S#QEjX..eih`C)D>tmN==2357nn/U/0Uatj74P%`YpJLdjmKudUsqI0G&$iKpoE$%rn9d?XJ6#in_DIb/p[L^bN`S"[schbB7B"?88aeoeA9;D=Tl]4,')m.f`%TIhX+p2>Y2(>Ah^K/755Q6Lp86UAkqY4+rRt_>@aeD%;Ks?.VZIkfe\ZMo_OL<+.&E6Eb^tLNbrN,fb%(;L@+>>L2U4jH"TEC9"P"G[s(rs.6ZT]"jRtRg-l(@@'WeofY`r%b,s"b996_:&%&?(YV\BAoqSOM`/CupKr!NB#!D6ELVGe$[ZF*`fSUQ<R<g_]/jY671UK=(jq6NoNbAgrZ#G8oGVN5[?`)OSRn=NH5<KUA<jEKA'f%S1pSr3=HT@4:Cg$*Ghd/+gQ(B2=8?IaTK`grBagtI'C$^*Je.o@;<SSm#@^c1<kF%.Xt?kA@7a9NAmpW=7Y*&eq`^^<`8Y%b0:6?%"@,(H=f=>/*Yudm</Le^7NaY8RPNL><)B`hV_HGk$LY<3UeCH.`Rinn=r*ZGiP83;*8#POpq$?fjn]CUO.@jtGrfOhI3mN>kjS^k%0&]_1n7C)B4>j$#Nd!ng!LMRTo4:q\<_B62Rd"2^Kq-YC]#h-]p0<F>b_p6(^=0rKAL+$?kP/a/BRS1"hOM2R%S1YuS],rp3]S7U%?TGm>FMa$7mM?A9n?/_@oUHm%7$,/$&T0u\.*qdNc'Z3V8`2V@j5'QT85N4[?-bch`(KsQ+bEbU6pU]r(G`(#iT;ML@"%;<b99.u%!BfKg6Cnd?2G2<:^f)Ei+b0]r6\kD+EDD*f,-DA-(E!fOp].Df+_C"4HAdoYF^:A]4*F.kaSYK.h605p2!NA,8If,SIhWU5>;m:Q%!+nG&$@Fu(n,%X0E;4+mhld<u.hUVC=I%j_+;*-A8;WA#6Fq3'@:6Qm@NY++#GF+`.fPU1."[qOKFo=ep+$ht0):[iX#k]G'?T]K%h8iA_7n)Bt^`I*"P;('(ank]SLa-Ac0hSgZ\_2^W/E]1F8Tgjh)kE67N^CGWO=_'`N>[GL4O`Q+JK:.@Z`FTrpKa'^kR^BT<dJ.N%aV`!)Y1]gcfb$N<bJ*ft][s7_V!35c2jmUgQqqBW[6*p'p0>V2/_5<6c\Y8Q0IlQ2F#3Aho3'747G2Z%""3aXo.(qs/X2-aae>aj%nh=8CL,?TnEUamUeFH:+jo-Th$/i)0.)+g#/m#'8jbF"\\dA&T`^>3_&4fEjO[E4JK2J1R\O%gkj4'5O3U6o]O\X5*n`dsf`k(rO%[9F8nmN7d0,Zg>KiB!;a.$(nilGJjVI5fP>>N[r*kHt3,UFOsna]SuV3l#h7-r=7aH\#S/A)CTB%T>oMg^^<-WY^gn]bkK'qa!%[%TUQf3hWi=%Ht-NI7'e@UQ[S443hJ9ebR#"O9VCE`=mQGtj2*$ffO9iZ3"os-(2)>6j%LSi]Bhg\I.1G'EAZA!$HP5lPdhqBd9tPn%RF`mBcp5gZ&DBk[HQ["T9A"GYWu!MfNf5pn:kYWiXPc(&(f8ndAoXc,&o_b6n$lf$$k5ns[0n7KQ!?HScZ&><6A:LVr:>_nSe7d`%qU&AqA.L:@l%MHm:>YdNSc`Z&.PK7?cZ]c,'t%MMeoLL3rD\2")S;7FCYf[jpc+Riggbq.4?;:H@fXjs'PB_tJ(F[n4dJ'2j*5^G%>!?7t^8nu8>MnP;o%,;sIT8!V2^J0^IQ2[sk2f.q/.N0QGJsl![<"Z.WC)*fqZF,,ck/'JnlKJlKS7!_0Li$HW%GA2F08c/<]9GS%1q%Z/XHR<5=b#n\"a#O2N:Y(@SA:a%guT7GX0YW.FTP\d70mF(/rnPS#LAjF<%`8RQ8<4rY@I<):X[p/9r4DrdU&!;]<h5_@?AXb%%Ih[?>bUpR\$nmh0;T!X)ZPF9Na4pjFN%*mllM'^CZ+hDjOUe\N5/Nabm=aE[W%LL#o+HqE+fM+Fd..$.L)^$JJ:@R?7]#mOl'TV%PsY/]5MdMAM&KA-hmCRB--YO$)G"5i-qa@7((/U%UYB043H:p%=bu_,ON7o?\`RYH);e1iN&09t!P_!S<a[0eBr%^*^M>RQZIOGj%+j1&4ZHRg;K@*2u^Y=6dIf9,0M_2u,jUG?Vrd*ogqVCR:p\t\<]nb!JpM9PBl!L]C=P_W6oNM!_pXoG2,LKq`q:/X%1V/HCcdj%^%Y`*I4X43a-k'LnC@'rp[P0V[lgN(F)URuf!jfJ]8FnVMjM!&Xt0B5'hE>VKZ#!)>IS2fDAX5DsZeKb3NUWf/%>.7iVe[+#te(WAB%r/et>Y^X"KNgd#R7/aL@4X_$McRZt8q-pCJd5X-;'o,ZtlR_f8`$!sQF=/)j1eq]0d1.))il#^if8U@\gfZa`E`8%^[SP6/WI/?=%"_sB$A9KVt0.u,"e#sj/nbh#<'r$>?`lr4-P.2`7G?D.i2[+JH,B-UpiU_rJS`K(HmOYPGb`-m<QX1-J:U]<29!Z30,]X(f5#OMF%N"[39k;u2"(Q%'N$O*iAS.CO*h2-`#9hY$?W@%nn+5i]l=Mf>_b4.u2Ghj*l"^uUREZVS6+\!t=hd"$=1X0.DR]ht;$VfDVCGtb]%!>+`;b_0T_f`GjT8kAA\WGi<qT3/u0JHcS8T8[5V25kR+W1U't<1U;4?XTD"26ieCCV:TcCZ<g]I]YQ(C/&>R."^:a'Jihs3FZUB%:Wtf+9S$Y"]lT;[]0P&sdN4Q/X`uJ3IcM_c(51`V/7o1.YF_X3/aa$,j/i$nDu*Ap-h!Gc>)Jg4bb@jAKo)Oc.'p[R-5P33nd#2J%J'NCp=FtEPQf?V=GI^nuiUb1\j:ktIL'=<3?ZSkCS;*aj/CuiZde@]+T.hPf#<b&dXe<R[f$(KDI)noc>Ko37hTA]DIZ/mo@'-W#%-`u[iHhgO/;ij%6WQSNL,L<C\A&..fmh4Y$N=_!kB^2Va..q>8^kd'[gaGim49A$7Hm#%lDmp$ri83fLiQWFTeYDjWhQ<B[C3bhV%opjr*3j6XN.+0;sghY_u,$S>T-cpT6><R:JDJj=)l.IXt?K,h23ga\>&fcVTS^WK<'PD'*AVT2%-"Ij$eg5[1B`@9ubB\5Mq,.D8%f8rZq_&SuEKV?IN/.gJ,i)[gCd:%U\To8L58TF3O*l36k[hD,PL-0f;aXl>(_#Cmj2?`TsY623VnEJ*T2M>RG7,<T"43r?"(qTeL%R&*3L%1X6fY!aIm/pGulPijmsX?_B\^3]70?qHA)"<peu*cE#B'_::^EfKJ*\4D]a&4j$3rTUkm-.c)'r[]3+OqeeE*<iQumE$*L%&bk>fp`N9d0O0aP.<i/Il"n9iZ+tcR=suBu*s?1pU;Kp4#^T'Be3;f]+YS^U2[=%`Z>2+1g0k\nmt8)U:7@HIA3U3AB.,6e>WQhH%LTbP9+3\;FM1Qn<?,GZC!@T.3"L]q'q,rJM#bOl'p=7T?.Rd3Vep#puI_f!$"B$d*.ge9<.EObDd+ZPi%LQ^;bD<u>F0"SPYF+;;%Tkb\BS1?hfN>.o'MO[,6k+f<&.P\f=MSZV<Q,ec9=X]2RX>oPD(8YssV*#MS$t#\_KubYl/fso7;Gi$I]SjhI:s?LUQ,:``=c$T&%i:YAPZ?O8<dP!T^qb,j+QNe_0M#7o6mfY#&\J(,*0F^#XS;@)uBuiWLYr<9j&(?Vc.q=FWftU'F7[(?Wd-O?2#Kh#SB?<g@h_O3P%rB)kn(R3uaWeFgao#cS^7<nMPC^6^E4T(E(J'&9<QSQaT4`=k68htC?Q*dg7#]irfX[q[[92[q`'D7ld^*tX,-OVOS2"aG1:_Ikl%("'V<P6-]^R5);C8PTEp`[DYd#:nKfjhA!CXR27slc0]2lVCk-`gn+09>9G+a4X*WNum2LJY*:NU=<AIB^ME-ke&=OM[c(.IdLR1%7UBjP`sVc\FErKp4I(6(F%cO2Soo]Q-O=TC8dOHG!?[T1gjZWPhOS[K3fooG[(GrJ900`to;1oA+5b]QNJ5RDfiTkG%VfCE#G]=d%ci9>_*kZer'^kuXd"B##`6&%WJK>fn_,7^L#'pLR],"V2-."j"D>ictgk1G0&carY%S,F?"oYmXI=D-0GQ-@aa5ha257.<Vs-iXG%=g@rT\dgrH"E!&:;Y]'tEr',^o_E@/g`P*R+,6u4Y>5,4s-=5[CqG,.;>[ipO1]fImk4W56#WQ'GT.^#dDjKao^Facr@>ecci+%H%e=ZoU0o7gg*g:8=i:2<Ua!U`S#,)"oe,F4a]=aI/4eaS?@Yu<D'MVX-Be"AO2Y?]!VSJh8Tkj[-gF,UUnuiKF[:!^;JjAOtTbMT;%e`^)3rpR`0;`j[edhEI7R@8q=[B5$l987t(PN7=3fJ^^P.5j!fIgYtk0d6HZYn?o#)9!:g/h";G_dfZRCSldi@O_Oa<@n\rM_M!#%8uDLs6Ynk%[@g*G$4s<^abn1`%l"49-,oJAXiWJUW1'C[7#+!;$UYWG0^s8p-DNc'\.9"7+&"+#P$qkuWi6gP@O[%'qW5AB+UGhd%cu$`7hh(:[.L,)dFFjUf2:_MY5QnZ3"iF0t5aZ:gQkP-K]c`[c7BptOa=*FO9:CMp$,6p@Otjn@dGPuM+YiJR`aN^C9U6t6_jm\9%J?a$DO%gIq$`4U`9@_"Q3"4d<Q2RStH#PPP)n!J#IP=I6&)bjZ0k!ld9e^J)enc#kVcD(p3]IO`A!gdWKQOLC+g*R.RYeOOd0mCC%+ja.T<B,[$R4[B8Za]Q.XBS"(bl][.Wb"9i8RYXcO_sY)?q9V;YRE'MliDf&i-q[EmO*^rh(T\ZmXbI2'\Ph=`e&bM^6V$A!0Jsa%pkD-IIV4W;/XS8["UpM>9+rGpStT<t*Aj8Z*lH\5$r*!ta`rc1KHVI_,Z>q9:iIL)"Q=s+WNthA)qL6I0Guo`(C,QGP:_uIa'd7m%)o&3e182?hfU<brfSmWp.fpbp()U/YUk5D`\nft!9X/-Y`TAA'/J69Y4s8(!Lg=Rg-AWS;JS,s)'Y*0:K-V,6@0/dFf3js_+BpN$%!<W11JiG.L87;]nI@GUs=t45d[qmi"MQGGM6MO4)krPJU!@Q!HNj7o-"!RS3\l9^=3+%2,8Lg$,O;0%g?tN@UGj(@,,V%nd*B6Nn%5WE2G_g'Ko,$qNZ*,:%P[8cZBO=^["/Vqpl&HJBLD-NlE;&I[8!h(>>UC\:lZpn)P5S"519\3LqDc;lA#bo-70SM($`p:Ih@<,n2%_qH:CVS^@1=c+cQ%b(RapOGmR986I3Ota[_ciGoZP(rkP+>@9DZ7(28(m%1LO9AsYfXbPZ$*+SEVMXH)^BMbFa"o"D-;8G#`48Q4%DH`o'7nd=9*4L@Y>nG4<FN]aP?V(I'T2,O;6l<cA7Ysgk<jhI,K[jpJUl6E3RM+@L2A=qF?#QDSUb&01OsWM'i@%)JEu5/uK*YB[%6\8"N;[3l!MDk7``"8fH0SGP+1c0p(g2<:QnDRTub_#i2]f/n,aaoKuKa:,hTMssfOEct*6?3+hcpj^&D6!B?@8lkWZ&&YVe2;rp%?j"GJc;b8u?T811Q#/T);4'Tq#KFjgF(`R[81$jXMIa#lmM3hh^_iK4.7pn3&AMm:21>k"Cg^FHZ<_!M0YpZH0I$,9DhlSnbQir4%97gkF0EEi;9cF],#^FYLIPAq!i`Z=bUuJch(9@\Zj!TT7A@5=&@Y6Ui'sV9Dg);g["G<,Y`5+2G*@r&@MIMKrKuL)BVL,OTU=b@k%*io?O!s=J<e:KsP9<bU:eT/Q8A<L\`rD8V&Vt$@ahcsGC(g,KGl)KBXJJk=nrStBg@N(V]MIV$1aFd$.$>]N4L,`&7H=`/L"7DDI%WC2P7\qsSlSSP1BoN*n4%\tUgs&@gi.b]WB.]XQ=(-nDSD-/Kta$C8FNX[Oel3/V-'\]\o&:&Do3<3GKXJ)*rXFG1&<L$<6L7k[V%6A)s_ku9<69FO7W,Mt3mpmEJr]OAue+A=R?dkVbrCDhsaJB4ac0>WL`D,Q?f+bZr&Nic7R(3J82af*$_<^d;$B2c6Z?m5c.l1TaT%S./J]ken]A)Y>V%])cLT;,46$"OT)a6.7Co:aJW$kX^%FO:3cs:tlGRS=iKim]'_"_OOC:(q=%$5a!_3V+MlNChibjce/I%WD'lL%^q`sZs'\$E6M.*kJXM'3Z6IZR!B3J!40GMi^q^mgK7I@V.ElrP)oOb2'gNae+kn[Q/dQ,HJmX%:%>(k><#:\UJQ\bhDAn-IQ"2hI%";%=U\1rkO#K!!,5r;3>iW<gZ/HLM*P"[E3?rS(49S<0m[UH/">#^1X8kX3%bL@6cHchd.@krZWJ`s!T[HiC2\jL]HdP^TUW@RbQ%VTXX_ZL\9T&Ai*-mM(A_72Vo07QJo(<I^,"-$\UAWd%s,U5Icg;86oU0ap/_PcV!KeLnsgD55sg#5(_*TK$f9^#k"@.*E*a;d1$g%UC7hjA\l)\A_"%0W27]]gn#9heEZ1`*#"OF`skm"113,!L+!<.U^As['8Q)N(l\-F@H'HENphOFP!Vs+V$]!H'>q=5K4&?qMG1]l%&d[P0@H7i/U\oBm::<p&'.3@)H"s@<jG'B:Dnu]q-_`m\EJQ;h#%P>e0_(`]a7nN_3)s)`>td[:<R_9Y!o@lJA.GAS8IQadNZ(ot%C`j6V(X4L22B>*"hD4=&Fj)X<<G8?M@U)f]Yo'9eb7@)&OpE8$=N8aE,OQ@f$!:FF_,OWt?6T[FkafMb!-'3H!_=Gna\?nB(fcBp%DoZ8@$5Ht$[R7eEM6\A7rXd#4AXCMu>#^=9@s4UT7SQWAi;kY+Xl_K8&I9);-$I5c$E'rk2`!g,gr+q!E1J)pCG.*W7i+/u\5WKK%BaZ_j.LP`j%IW:"Lg_bc-\oU$+sH4VJV_jr5q923M5W5H;#Z4mi)GQm&BSHOG(o!VUiep,Li;ON=X;F<$TWP>@QGhaMSkP%/<F-G%KR.#c%N=uT`1m@5S!#A_#3H0YGP;)b:XrLb[k&(W(<*(Z9F_10XQqiR._n"kEYt3No\6T<#&kcc+t!H9<%V1ecNSC"cB7BX0_R(L%BM:]Nbg7Y1lj8I_M$=?-?eKACMB$41moU@E6sr]:+BoY@%`4`,;'O0;2LS)lVA]fJR'J9W"d=`cLlF5:ZoJ6pBA1X)'9GIk#,>H/%"fR4u2/5f`-.>S#l=.9E,/>$enZGOsLj]RP>IM0un@oF;*rs]"NVA\9(5U1B!g+K?-SgJoM].\AHpUer&K+Q$ieU;!()#6KC,Rs-%495LYP^t(7!_f7BK@.ENDpp"5;/;Ig"4@9WEBEnI(aH")T`SWg>ED7AHQrg4FI2bk&FdGVhH0DTTJM5*a:a7gOX6$W=o87CINOV%%\`>9#/<.hX5p!(_!]4d^GDe.K%+_mB8=%6>,&ipc3)kR5+Vhq[Bo*Db%VeiQj-0hdp<PQ+KP_J20Y1D_ijc$]<]o4C&ph>OMblW<%6[!;^\R9NcLr5b-,!81b(,h()IRiuk"s+^.InSq<-f-E6&AD;#HEYN[bp!X-DDG*@MQ-pp+8%pp)n:o7:m$'h/b(E3F`aX*n7E8f%nBE-n$uZn)Lh8Yu$+*jrJiN,=@>'=H*`^u";H4_@Z!FC>5Ut?;_Wh\@cH6dqcO]0l/OJNk/EZ:7+V6Mh#mcZ#F6m\T>9lJdDNOpo%]0uulI8INDJPa7#BH0>UN7as(/JU^8ris]lJ`!!BU9T0Z2iA5UfOB&`+r//Q'cpjP&E5B)0fB.XiDCA""&T(k:mK!:RfMJ\X_Np/%r?BIjjhu)X?p)X[^h@fu5qL&t`MuU3/[T:=7,Cai_$RC]pIhAnku'nX_SU+A(_*I<mLrR6+<"eN+<"`W!/]n>)EgI/-/I5Z-S[M9%)G*lHQf*4K`bf^O9n9GZ)i':2'5#u0jqZ8^&hL'^:C*41(u:p`0NF=!ck_d4<)''+%`+"^0WJ1-"NJ<$*!RBNh?2kuO\u/1&NZ@Q%i[TOjdRY'AGXi"M9;[6Z!=8BKLN+'T@797nDdAJ.jUFQ[]3[=_&13bO[mK3g8%:gnF^;EW@I-XP#@eWFUB*%)$\7Hr<+S;)oOK(^%6TH9$6>8atO;LIf;,%Whk0@@U8)A8u'*T0t2h[Ys*%'%!_.^kdC6FqrK-7&7=!a4bbtBDb`onjke&W'>^-rDp<P:*0'U=Tr9F0?P%p0/ZF"61=G/f<Ff@Ao`f%g:6QEQ@-+>]";,A:+Q<X4*e7>tD>T4b?`_K:sOkUk/T@39$'RF#9Ah0HSM:FU86G`O>ia&iFJCW@7rn%;+[dod<@>Ve6uIK^`9InabZ&JV+i(m/Z.2rU'%mW1t/^9fNY:gEV!Idn.6@fENXI=EH0pD-cc_G/!o^aHEQ#PRSe3<qD&>`B:+@Q%72VnKgLi.+i;g!Aon;ZueDj=`bgJ%/+k]FS"6h(p*_USo!CIoI.iM(7+E+N.dI&[Y(I\UIYNjRANtn<<BMVlS=TLQe?".9:We8r(%WC9?e,J$@pWXp+X0HLKc+H;i5*/&GX$]X@2O-@u5!%otEbTqjh/:=.DB""[?84"O^$><86RYF9C8>ktk)B&X<@6+/bLIQAr,=n\f%)^H:Vg0?eF;*##5a$@hdZ@p"!K*[?h_mgiM0Hsd2A<biCU+q1u3'8Jm6@^MN/I9D*)s.DhkW:mb!b'B`#\H_IAHQFA>eW@UE)4pX%`MK40iL5KffTLo2CeN1['`ns&mA\!nfZlqsIE/-f5:dek+Y4VM6(GG)7_<JWX\OX^dLHT%ePZ=#,^Tj9@#U3D\0`##lrt15P<B%=%O]bPn,7)cc\?G8.5[Xd088Rci0M5kd,0HXOeog8WMIb:Od"9#dij</WKE8S8B-;cH%Z'g_UZmJ[A129[c@A>HP"\=;dYYdW4WTq)%!+Xn9BIhb'GElo;h@nGmW2=uS^BGN3(_;?T(^l'Pgaj;:/)4!AJg$jVFb1cH;HD0+#,2+jCn4r>JiOh46phA1?(",K!$Z,d0Z64_%U$C(-L>ke.73[BFB<YJDL[\COLH2UN^ndtsOFoL<,9_g(CjkhEL^8&G+Ul@7+TO5s=\)0'k[d6ldR]0M5lQr3"RVaF#_ND6&;+O?%nj&!SUbe0!#TB?bWZaW=P82$$J>(Gb-@ZE#6_Z)l`'G5.LkCL;&dL.Q01#2!8/t$N31S*!<)jb`rD*h`)MVac#c[sM0ARl@7@:E]%7,INf\H=!/,:)KgiZLK0_m0,Z*!?8kYBAhI*5^_Y*9P1*d)>4pc6J?g!/*fpGT6i@M'@l*&d.MMa[Eb(5R;!]('sI&gLC7%VC17'%NQXY6oKjAt!325[9u8"Y@aW=$-OsT.bt"mc-P""%4Q^'E1aaLJjuDSa[pq*8%`2XLpqgFNiD,12+K"DK2aVB09HWFL'.$>.E=`?4%@1WJ#KKMr]60&PtiZK6'"@<*V:?9/'j"P;\;^MW6%#^F&n@)e[<17Dn+s@rC,9[IB&l=s65F>M96_=fX%ljJq$IK5j+e'qjh_5Gk%<9^ia?m.=nTLq5'XDmrO\oqO_PPb7&!_;o?Y2&i])s/\`<$^J%83[sg<d'u`!N(+,3eEa9IP(TE"Vul5<Q\]CPqq,gQ(l\A79#`e%DULVHFDO"b<+5>:@d_#ZL='D+P<4:cCQnOYA/Ug9!,l-j48T'bHl;aPJ-KZi[`Uh.0a])Aet!KeqA.VJ*"`F[`Z,QU&47]7ffcVG%JMf^t3OrEPh]Kb+bVA0k+TP5ME0R56dPWCc<g+h:YdY%L6&lp4p7#^lEtD(>7f^F>;u9Er,Z-l>j//$1_;DOp"dPa%0Z6OsUriTc%.Njjb!S/#p38#DPVO!EUn":`cSp5ko>23(_Dh6Wh?1A+/iUI*V@s0fK`9[NUSmXFKZ6r6!@KD!fa^VQ,M5JXjld'!%f7/1n"]8h;%Rp+I?!.M.S"qM6n=@-%!R!\&+_J3-@:S+YFqI'EF3ZE)&\Wbi7`;oq_`IJ3rG!V*9T^-;[d#rrsKQ^0l(h"j1JgJm?&faUX#":Zf%!<OH7ZS_M!X%ai/&N!&-[BB`s:ipmn'^hkML)LWAE;&@/"&04S:,-HX,7ZPlmg'>)[0H0D:mhR9DE]b]N)0i`l@nVcjIgrNSp1e<%hD@V;K$Z&jWjarU888iI\qLQ%KLr$).@=O?Ha8j>+sR[OdK*2_(,P>>h;SWVQ#5"UUko@B<EoN'^1riQ3$;E(JOr+m]<g-@ANYGQ%nK;i@fNU=bQ`)MW,8,0>'b_S^WXm8\bJBLTDs;LI#j1f]Cru!Gi;slsm#+$h=]q&ckh&P*f<aHJmTFOsj&oNNa0T7"F3b1YA"Jqk%F$(rWA"FE#B^F$,lj1;VZZ68k?6\JqU1_FfJnG6m+7lQNN-SH;J1f.TQ*>Kr.oZf6p8i)LlWGrui)tmji`Q<#j&q3M7m_24O^dO`%gU"2NER+tl2g@J9&`sp5,4G?Dgn'c_Gs*ZWK]DX):o01=_p$'*iXkN\EL>chTo!o=<WF$/X:UT*4Y)&-4=e]pbd6m4gZ)GiaBNkD%Q;MLY41&fKa'TQKbGb3T)d6i-*_/[B9iX:uGA,Yf]V/n9+_#]%mSInX->VUF<l&n;CBiM3@/rg!5/[R@2s*,Z16k9d-TOuUaB`e`%@KF]dce*EY)#kG#ir!3N>D)?]LbNe*<*(gjJqt9[r3rn"(lZKV)3!66W"_X@`?%mYN[-s4'RF5L!-)J/A0[3;GjLQD"<-U/fV>Qq%h%X'8O$05T(qd+D&]X%6NlN20)#I>SGG8ou)gasa1%r\<$T-GS@uh&<*%$E03D@ePZ.PhUiZ*Hi]*S3NeQApX()FD:'Z1mp`iq@U%Bc?(IXEQPDfpHu*++hk@A#:D8qnlSNo<8coeu/ZW2P;?_OMPkacNqT04@\DSaN)P>mYY0NZWr6o-C1(X*?#(.9rEG52G&7/.\-t^%)5eYa0XeIVK&OCK%)FfuFOsQW*)hX]m@nLG6=711/&:B*/jZ[C1pJ(=1^TF491!e*Jlo>>EX"O_0+e5>q%!E_`9\pIdV8\0?R#j=%h%4VCk^%4<N?8T#NMG7T=@p(K+tkE8pr!E3==c0?_%;:&@Z]`0)Zp#*DNc+s(eRLm4(\b^Z^Hkh(iXPNPAt<hc3uLaPJ.2i^([$"%Fd0#O+XjR-/+bp@1$Glq_NQ6,M><t-hVl!q,g`5&33Fi;V!-_MK.I1/J.<!Y^]@\shQgjHXf9a^HN^#G[N&mWNJBgB(e=nW5fg2C%7#-`B.O)<;46J^cB=g,7HGYC\CZ8R>R7EtO0Hh_j!)00kSHBEO9]sHk0UP<b&b)J"\<e+R#4\)e)H)1tj8g??TM()T*E_&*A&gVQ%XGRVrA)F"10Ka4RVPA*]+ne=%aUYti%&3@".i?KP'VPN5S4V1D*PQ>%'o1,KYn2+=&2K55:@YgWGqq-q%4pI3)cV,mfZmP$,gb3F%Z(=#^dI>OD#LS?LenD#19e-De4*2eL`kHR*U(LhZ5r?5%c65!V[gXJ-RDDS@F5i<OLg7IFSKkUW\N:-*>+3YY&$CWL<4dM/U/5ig%6QhVEYcdgJ0LLMUUIQl!&sOADK0<$VP@W3(R`6\7WrjL-I=QrfLbAeXa;R@IGp#.4^P9Q5jN`ld5tG!+:l(WK_`M83o4t#bPS6c7%IZ4VScEH1\jG]PgN!g8iOE&oG-2=b4m6KkQ0UaK(KL/\I8eBD1CD[2NjNsZ3/:%AM")EfK[)[b%Q:9,N@%mpL6,HUa!XlS7KFE3!%U!YV@YK09_$t:E)OW7IH^dpsmpdIQM$g<VYK+$[X-AOVZM]fGZni-tr8[9IYa>k?*+c*k@$fnB>Oo>2cQtP(I2)m@C,mZ!eYjnu1%5]2L;$k,H&"^?GS+O"jnFFJ`LK-=qXd6iEm3X0U[%<g;s%O%aA&/1PH7:M-B5j9[H/FXGB;Uq].h@j^%)DbqU7pVj>P-#@6710&H%N@(n4KG=D1#Vj@G<qpSVq2ERAM,jO2R"M"NjZt*W!ALDq?2SjcV@t/c?lH0##Dh=e,$`\0!8CCf%O!3oO@+9f>6`?TjbOb,2FgP@%EF?Sq$LL#;3[b!j'`W6A7Z79ulqa'<:uS^/kUS8EErZ_q7S!fC^P)0j1r@_o^D.l;6)Pf%J3Z;,])?#C.?.e"3)V-!":<gC^]PjX%!2G='@/g@p+elmL&;2Y_7f_;RfN"$fjG4K_#\S'Y9Q4dmBf6BoPOc9aO0Eh0nf);W`1DMJ0W)4s(I27,Rh;siaOpO\fT[P3<5]\a%`4Wd&/m4J'mKn1*6i;I$TdhRr-h4g&X^c-6EGPZ4K?PkuQeBL/Ym'l0]`)AS8_@4?QO5:1%Z.G$D[LR=g`T=TijZF6(=kF29u7D$%TlFt-'t/r#E$1@',_:cKA[M$>Wn<4<_+>f\OWh\8C`paKCi(S4$_K,[/'ZWSil:PX/C;MojaG3_/10]!PZPM0MnV?Qp1q*Ej]<tJ%Mpc3G>O1!F*!AO0/G=Y=3sg<I`Z-O_8I%Q$&uUYSpfEiLGhs&USS@?=IZli\C!Z[!];oW>lTPB[Hrq@->LiqMB'!Jh((jt`g_'*\%B<`:@cI[Vq7n>:?op>pW*WqMseaI8X/'8mDGAkpCn&nsu)4Pe!6Q^5O6\lBkM\g-^E*h?AHg'K#-;pF`("+8*%%VZK);#;l`mWRC%fNK5(Mgd7;$#AmRY79iNXJPrA@r!*dDuDPZf%%DtB^,#T*Ec#_d]K9kYRB-1cc5Zj?-q<,lfMuh2A8"2h3sYpg8uH`Dl.eG-%1.)%jM]>%2YQ1#Qr%TD144/9/>XZ?0#!;D(A9Zm;0pPY_CYh?Xcm[6lf8umSc$4^maehq#aS4\<fPf48h,+@,(R!B/*))i46tV1q(lYn%,<rr>(L1#^O*'g$P6*]_fbumLbbP-%2=c`\7fFNk6Co/$*(01u%1_fhj*<o(MS=nBOsae>j=e_%"UU!M#HHi<,WqtDo)e'F>$gtH%IM"0IhJU-o=^R2D(D_JW]`,X^?:m5W<Gm9VV3D'DO.Oj,I"QV8Um3<<C#oZ-<_iLVdte&^jEp.S7^U+ZX,VMWZ^b4JM+k=)0<h:<%IieHA5RuFf\@=emi*nB"&0Gb:A+b*'kU%nLl!gk!V1P7'e:Ik2L$"-@=+#P!?25upMkp%?=%!LIX7*6ZYk>u.S;_s<eo,Q:Nq!]+%=*,A&ZQRRknn8i&<b>b$=J\;$;eaUi4)1Tp)tY7#L(M/H4SQlG%Jo][hHW2+m+:)Tio2uD4uW*Z@uWJk@%USV.f[0LmMX&):8C2K%ZMkq$Zff$2OZa3me,2AMFZ(fOAV'1q%:k$G^?(=B1RnWS?csg96KZDlfbf+VL]E#nk8m2i@0Gb0f1U/3NbK_F"nI7WUQAV$TJ*j8%6l*k`k0!HA&P8JlJmHY'_*!BCmubIYD0\k:-U6%h1'XQ24W1+'R2W&R[kN,CH)GO%UU!/S]X(8Q3QH9Wk5eoe/(e./9FPQb_"_Hc%'3K4r)sJj`A7N'<3"%bhi`JB[/AcN\A#'_^ql3/6N,CM@R3;Ag\!79jC#S5LnJp5g[Jfg6L%V;V;jh[Q6LU3[?(_dEG<]F^/Tek`%>J:FI^Ku&ZTSR&%8C#fV^Tf+H&0U"h4[s.FO8>%15<2Kbg:HQuVELP;7&H!+b@r;BHIN)r85Nfrg^3tXm$#BJbN.^4kJ/&/RBJq"%=2MlY>lb?S1&CZsll&[/=Z^F_/FC>fZ^&0^0hCcN4'6ci8C]Qse&6>IRk%A(dl2ai!g0m.gJ$P5BZ2'U(`5I71%%aAFGJ;.#_CiA%mmkAa3._]4qHt9g?i^R&2NG-G:>hFuRicQ"0nW_Zr&_?9S$ko*/5k%ic@$OUZjYQ]Ht-Ri,j<s(+\Q,n\rc*.H?nZElmK6'f*>_^%00Xn!T?iePqd<<%!oqd.[XoHP8[KEs<i0`RP`EBDKRLXph=\EGo\.V!omG<SQ+ZRMOS-8?X\m'.p;fJ4?V9\hmo,a#;;o-l*ZqD[%O3-*]QL#sVVoXm%HX2;X(TU+Wn-.7H_YmF*9s_RA##[E`_7gD^SdXE#Chka=\%QT0&mIq!>$&Nr2gQ)])qf7B@j+D:SO,a2kA<M:%;)*cB?ZeFN'T9A+04_-chi(!Tn#&sd<.8A`Fs$_hNe6/,lqq64?YTN"&BBU1?=$,b=dr`tbC8l$JT"$Q]^K3diIgQYd.KD*!U.Z7%*4sWElfo@C;oh"]c5[p:h8[;L7&]bJJl#V3"&`i88=6>/Z&\a9QG:aA;8/:k\dDb]qbW]8[=K'D:=p>t)[hd/qi5_gloiF+22.!=%Ou_P.O*_/VN$Ycsa$:^GMQPde=GAJ&V&"D'F`/ajFs1&iDet-#',K?_6&(r&9!Vo?_(,Lk=e4&g^1^(u8"^O$4C/=e1VL"MFqd46%Rbt=HVr]n+L<ub.Vhn!t3n<Zubhhf<`R\rnA37q(XC(ca+J\Xu#J6'Sd0j/+h1jpbgGb1W%XGA388$i+pZ>[Mh8]tmM6T;Q@+ujs%<++/J6;O^S'Pg8j-(W6c&S!u3?8g1)<HF'=l)>WTHKrL::T[]#9VI#$aL9HJV!*h5^95&b3XS$XhJr%$72;%)&UapZF^n<L>>R>`%ir^OQ9^P3E:0Gp?+p`#N0fif&ZHnntX\BKg>(UEN/W$Mi]MEM^(cu?S658K&i>2r/F^nWWrUeo%f11\rZo*DoKdK'bS:&>cB>_AW%rL`/$\Rs#$,o]R9!"aF;[NY]8)s&)W7A(*29e8`++k2n.*q6\7['r'Ci/`2P'+Gr#fpl0[r^7-O0=5Z(-@\0pIj,<#^.so*fZR,D%/RTf-$cptpq=s_&Q57ioOe]USJ-8FK=>M%S4,/*:&(`9r6cF>s5(W[Z:]W<a._s(*I*_lI$ph*\6D+["(?OkG/kd=[#$Dc5PH6$"%$/:]^Kbt.-&Vrnuc@fk:^m;&.P!Enf*mbk5T<c-r%50r/;O1W<]KmLihOok1q#mH[hUnW-q67+Yb-r>%UP-K2Vjp'ON7GA-5o\R=%+-=*J4+2g:1C2HKLHsHVmkBdNo!lO?S6i+[Sh^okZCO9!P;B.C+l^BWK]b4.G2Wk`o<=cO,gN[\8'[djXk-mA1MA#f)76Yf#%892%Ll4@G?P4/VQt5N_)30Ah#49aLSO&n!]_B?oB,ADaq1!f3J,O<cqd9BpIltO6J%=+d]@10*aa/nFYjhNo"8`d.^KnSP_FU=1%#N3G%=h)]!%6:kJ7osR[._#GphhC>PdV(-DUc5U%RU=\M>;,CY_3Zg[SZ%IA$s)]/@B:C;;!FM(A^Ygsd`.33YOR\rkrL#*W4_>^\s<n,%:Ir`T@J+*fBi"G(fG=k\338/1U;9HhBs<E7nSWrZ#5QQn,7r'J)M%M4<E"I3@MUKrr5P30X0jW<GBkJg74X6uYjb;"67W]jB<"/S%cBiH_*\_WKr:9sf@=m-V,HE;:@o8Ann$H!OfCMnW4@W=l^-!YE]i7:L[?418otl);If9s1rVLk2\]dKT'!)m='!+7n;=;L+dj!U:%Oa'KpO)&+1Snet?(Le#YcXV3lO:@B9Rf0qA@:eMBf/gdHU[LgO7pu>ZUfjoPPr?(nOpEe=mKL#Q4,Gk9lX;ZSY5oQEq5PZW@%\D5%Mfm\"mXE7i!#[SGe&;u.A(Z:uU20gPc1qN4q]6+O=<kd[T=\bA8;V+u:uZ?SOpeiNgjUs.GiipT(&&tiQS*)JV$f7CW.h>$Ka5.t%pI=C605Ia\j[+PccE6R503J/E_7J](\fHYTa2m:kGT1L\FT&n1HP3cEHT&=t>LpK_D?hC'k:F0RkI!p!9R^<Y8NN#]D4[q2h:ni-%h*8%,n\qLLT3(^\]W0#M<BWRKlM5^*?ZolFMt$T*j+%HMJR*blYdA]lk&1m0o(m)GN3os<^rKL59\V3Oed@f)mU#o.>AM302+*_j%n9au,;h@ABJ#DD7YZ61^YpJf7A`*4<IZKZ1\6@abE&t]ll.DJ)jXhECRrj%_8]QT\3^.E/n\lgY9gjK_(M.DWC&>P;1U_be^=]=]%dl-S8[V>bNS+\MDC&bP7qo<RMN8W/Cc.akZl)1YN[cp'@A%m-N5V23.9>O=kVpX4p"#6Zm^38bXd\kfd?6@rqa6QZ`lG\p1"JSX5%5#oV^ZOB6mk.bEl[tmG#pf%@3U=&R',+oW[?%;<=[B]\0(:HEW](c&#A4k(<jl^FEj%Fgu)Yd.!IJV,G]*pCT?j+K;m?F)PF%OHI%I!K-/+/M&e3[R".&^4Y\MXTr5&7QQ]4!eE#DddE\lV;6V+5cO">+VC.(tW,O#TB)q*ET3aB[M&AXA[#gI,@%N(e\7^I4ib$4R)!7%'dEcmBml_P7P:eAn]'-`I)O#flb?op\#:\l+&7?!]9gq98@lLY1"Q#A>+^ABb0c0IEcg,aQ&^IQcV9.gEcb+UXrRE43OD&L4\&Y2%h"Jc7.lCgOSd%aMp+PXR<rmQ+AW+)$>5#J7\LXOWN56*%ppF\GiJ5\E*9VSXA%%c!(j"KXWT-AcO^BMdnq=,@3>G]l)Hn3qWJ6g+%9A!d^Aq+'1RGo]U.j5ZF$+YB[.`f/2-'$qi<=o/@rNdDigp:*pToYK3BY*k^X4+_[oF&?oW)h1\.Bmfeij2ruCHC"D7LQr^qM:41%EQP"$#o.kD7(6I8Z*:9[oT@4j)p28M/I8t7VUNLc<PQA=1*FR5-k,Fplk3*K26`P:l3V(;CfWbFi,2.fofSI1Sh>?OQeL]0W].5c%l@gfQCY`^hWU[Kob^up5^,0.sgNo`.<A,V#eJSaqqU9Xj<]+"%j?D3sFiIrlYIS$6ngkr^[oGSRrAj:neTu+8eJS[oqU69F=Oj)6%JdX=AV2:^oCp,\FXc6JHAqM!VH$m&4Z`nOlCeW7oJ+o;pLRPT4,rk=7qQ*?,+CcQb84e"'3u5SZYZX.<VC\aj-Oc,QDCo])]haZJ%D9Z[$9=%dq?CK-G$T`&]H1"&-q=HgpFC>+2I&T$M7+O7/#%S]S)5KZ:A?-UdP<uSD'M?Ppgt$:,iHEH9^?BB<-#o]=`8``kKA(O,%JU`'ZUtD>hoU+[H4BWXb'3dr<:iekml3(DQW:/7SfJ\H2hYjf31SEk5j(06<:%$pc.Sr1IP(Y)WY+Yr7?Sid`%HD[6aZ/-Zg+Wp+%L;AAQcG43Vd#g92FDrFBR"WH@GfF($'tLNPp"Soie2O8'efID,$=/U5rOk/6`jU$&YU-\SI!OGR.(f4WlI`P*T2/>%C$htdG#6@C%hT3-c2jWTO@30d'MgW9F$QUD81OQVQk:0nU:=&sY8,NEl^F]'`^9Kk7G(tP"YG?`hT4s;fg+k+M-'Hi-QUh1qgmms^P4F&0On<>u%-7._>ES*sVFmRF9hI%i;)^Caorg$"_L#]@khY#jma"TcqFY<`E0(f>LhLFuSa;Es'5jD$BLANEXaUmJ\G<W[g)gVB-A2+s>C`UQ@%_k,D;7S^Ei?ZP.40'.4Uq+nLN(^gJn@WOMD\Znk4Lg.Dhi<sI9Vfu[qY(:%aLL!TI?(dE=>T`9SQ:mXg70&gs0LM(<]M6IGL+Ins%QJ*mEHO_rl+^VCqHo-a)&7oecNF>-hO(#n!AB62J8\)bN]'R26DI*o6=BCWK/Sn7,S_Tic&K-%(mV+3,<N:L/WU@2j<YiXVl.kep%;%7'SU$8<H#)Y5hMFCC5Y\bh`9JN@*='1.Uno$a$S"_rPAsNWV_Bl"\PMkK$@6UV>*`rm)\ZY5R)q]@<a<IU4@:l=TpjM^\NO^N&%@:lLYh,OCir6lLrEY:9'2<J,'Q$lX?).8cqK^<[G_X\]7:]:Oi;-'F`p#?+a55GiZqkFZ6'p'McL^Qi\g;YNdqf.#Q+ThK'6Nf=1%GTB('/5@itl$i7JAh8rqe.hLNH"5mr(2e?M>MK?q?S-i#`NE"E4,I5`C[9jC=F6-*5/];NEN4Hb)Uu)Jq[1bh7@SFp,PfD?Ze_31%lEgk#RdUWJI_>+`3qRmXf!OnhZb!?O55GgH&t8O66IXe8$;LEHqe]?FUC?^b0DAFYd;G+SSX#(uBTujh]S)XLl6,#J>B.cgKIp?W%_0C.tri_\Jea']:YV!U&AuPm.odm4q.'n!<Y>,S:Ic[WaNg9B7$X*&dKiqH!<!V\p?XoC/$+'QHh<Y0KAAVF`p=o-Go0"SreofN<%7>>\Kq3@$f^G_D@0R`MqYR_AJUDa#IrVdYp+sb/hkJ2NXPM<1s@%c_oI4E3egQ*j_!7nF1Nu:M3l`.3c,bFH2J\R5UB*he:@UgQ2%J@%%o'EB?UH]*bV0"l)4s*/$hSIXDEL+rD_Nl1iMZ4oPsmYtY#Lt^mCH"r@^GZOgW&sBV.5pb=,^>Rjc3&5e*jH52k*PX@qAgsrI%9=G9dp+5#`C%ElE#%4%!KWSCg?')Xpl,4+dQ)<e.SH+qPBjpmh9:-2Ke.SA+rsWG&QXL<dh9Z)@)tR3uQM+CIQZh'i.,Om[R-5ng%8)eko>b4q2a-)`>d,e]MV<&S<As/H!gN/3^b=MR,$B#ppJ,9OFddg**X^iE76q<Q&5ZI69Ua:%MY=QOY<S[s6qb@OPdP>;U)8XU;%\M*)H=@gVpKsX6GoubOR*(3\?chcNpIM*s?m&R-:!1("IaHi,"bB'%7q,c3=BupMW1&acTqLmNf:F*fVFM7G?FsZO!d._QKfm[3!%+>"?[*V;Ueo!KJ0*>NHcGMT\eZ-sa?HK]o.c[!W<Ed%-OP0U/9R/*JMg5+jb:WRS(D_.DAlUG:bn#("q)/j",;-[,6]>I"NJF0#U%OT"dC5=>5/3JDKe/cY_VUOR_gIFuOZDXGO^s-$5mF,YLsHER5<0?!kccXV4skBfMKppa[O"s75`X5QRg\0<Zq&^eeK>N#j%rT._[%j\g&0?Z\;Z+G.NPVRp*$<LbQ6ftu%mDq_\s!\/.Mhn6Q7dgDg@;hM+$'oCl:1Ro6FWfo<)W'@<.(_ZC%Y/\crV0RpWn:/8`,Nms5%_U9U70c`UUYF;#85V-sL.9*%#3h8STM\B`Om=2t'DnCG]DsYcoLA$ddTru.sOnDmMla>3)q[33KkA[re3EtiQU9Hq\P9[G]CQ/IS%&-E;3_I@!u;V%D)fNHNnZ3`8?o1BK59J;R)pPfrmT,,cld^m[Ep;`Ns):E"*_]fu%?,?UX@N+QT\QKKJ:.T]uZ5)""r5AJ-e\*$P%86/*6Ndo@?bZB?Ln#H1Y$VAZKfG[cFBoi2Pqn5"RHYk7Xac`Vi?+@1@>Z!:t-%Eq@HfN3&lJBBY+GLG5r%BJL.RQ#*c3UbYcNR@S%S5YE:6O763Lu"jJ6>,\Q,7@8fh:PK:`=oH@$d<L1k2QM^k)I7m5jD$_$b^TA0_q02b^`7(h7sA.ChO3P"_j0%&5CHGn)E$@3T"/8%3[7P8j[[<Wp8i310A-,<dg>rh:o&:-4HaT[FGtA@]`lj([ZRl"AYcDS0-fQr_.8V_A>J9$)FhlI<LYKR:8^*i.PkPO"d>f="4jB.%0?Id[RLArJU&nq.@I-#m<(U%ASorSi`"[_10!g3^0!g5!b7&TX^HQ>RdKgVT)9/Y_QVD)c_TZVX0[lGpY%5r8'G`2=WUa?6X6CYR%<O.1.c7C,sc4'/_;ch[pAdQ(94@E.3._I_F)D&K1$ro2tkZCp:?*m*_Z\0kjZPVbdQ<iXMe=qnT=)qe&.T_M0`2I(`^&*^X7*h>E%$I<)3b&gEpn13ioB86HV(KbckQmFcC"2dgheXR)E1J>f`1J=,"bkQU=Bog6M5SQTC-,j+>;6TAfcCh^(SQT-)MpLb]fK[r6be<UM%Eib]Djkg47K@lpM:udHL=]9Z+NhBS0]<QK=E:u^P[c_`'En$&,k^0QX(R_UqV<:k#Vd6k$eWic\C)nG1RG(2[0A>3hK++BKnt1G]%ChV:`AOtdK(A6WP8>`sHo:JG=+pOlo^nNDRfX\S"@&W_a"NH<K-LdEl%Q+`Si$C-M(Ug:K'"7KE-7%'[WNIEY1?`',7SWb-@;E'B%<V$sF<O;GGEtF=KWImS92_jD="bnZm/?Yf)/7:jNq$hK?<Q@gclG19t0t*hW10S"cDmHQei<=J:FKu$'<,C_D0bY!!!7O'5&V#23%\*euS,P/u.^(DX9f/NqM^V)>!,X.<X^GaS.4p_:0/cN)uXS`k+0@.IB&WB"4PM)(,=7nhMr.H50'g,J`H_;I0;`k(lY=,<BY!F&a%BEl,*Y3Rt=%'?uks(U*[G:[(4`5^\2A8SM9S.7BZ:QlCUi%E7]lth'=F7W23>[.G45"N3k<D[fY??N09ai'()%Mr0@2Z($([!ZBR%NVq#3kagq19n0A;PQ]hANL<5pL$Ko`n>,6T(=Vnqq;m4,CD1!-'%W88'M92lC`(;u8lu</E#.Xc>JYTLKK`&)k3JbEm"qirD.K\T%)[dDI6$2_F^t.PT!qqRM=YE>Ib?-0#)[ch.og9rS?moHP?La_>XVY4YTqH%1rG*W^s6<krc<:2$=Qj*4Jc71c?Pl,%M:G2j?.KV=%<KZ"AoWO6jr@;A!koI?(k[,3176pUu5]hJ5:*E)KIZ2/ND<^s8&c5>d8&eR9;d+WW@;l+F,K4Q7orgPBJP6%.__LGQIr/`^?Q0CO%X,#fF1ogjqoVEo5$VMeq(124;P$@e7?=7";qD@mVqA5$*]XZsW5a_t=bJ75E675('W;sISRI=DOA1[MR=Reci<e>''25[/NE\Z$a%/ZpM;81P6O/IWomMk77qpsc%U?iu=L.UbK,\JU7DKfXe?M2:gT-.C^3EW=#/pZ%70RMKtsI#Y8ci^8b'NV0NNek!B/$hdsEdW;7C%Ysh3KYU_n@MhAsRSg>pt]VRi-d&K<lY<i>"$T%#k)d/D)#tn41YVl8l(ZTt^lAUH[f@:`]H#=7\lJ(`Qomas3Dp^*"\isSa')h[l%VnH2ZZjTHH]s-Fj9$ju(hL+p1(VM9:DKA_;c'O@FnpYtQJfMT;DFQ*b8*CX$_t+-C,*%S,ll?mT$7^O-5I%@0k#5EA<!c]d<!b?*%'oSB(0H"0!i)%'LM(ahQ*3ZEgXZO-1jA[&?-DYBm04c(Y/A[=.OGYn/-$)e#!6k",.`&WbM79WSD,.W`Dj?o1AC2DDD!ds>ViX=D%H!=V"YgN/EV\p/6&=p'#UHdPA.R8qE8ug2Z4thd`K>+5Y_P9;.@6Nn.*orpLA#fIk>HqB)5pOcpl`(P,DG_JYiG$7e%%Oj:SAel(%b_I)sWUN:&d&sSE_(p4c&f9TBW*&&\O0k&JOZ!ssC#<W!Ilo?3UCiE)>r73#h4.FN)7r'\@B2TUj*0/K5pKq,,,KToA>Mn>DaklY%==H;#G=Y/'o?LF>kK^":8r.2\5*+ZT(4c,IEB]'m#$;bbSlV$LYc*j$#*#JEbLq_5PPO1D"uF-qXB,\FE5HF%3FOgfm=H;Cp$olf%[.-FbA[hK%9CY&e(Blg-XsgYL:7*P7A$P\BQJ=/3diN.Wpe2IL1+&#3q-hXKMlKnM_ea/d@5(k";hZ:t[4ob9%7^j'Q75%B4(8tk%%cE>cO`o8,5'?3tFji=h!IWGt]_\W+GX8=]iVoe@Hs0-X,<YEUiuACbb]TjKbdO&)m7cd+LY9al`,&,=(u2#nhT2e6dk2$<&6.tr%m&QF$+0LujCgYE+632Co<ioV@gn3HkK/3^Kbdq@bB\F74(VdX?mHY*48/r7Dr$,q0)d@(Mb%uPnIbW5VYN>\ASUiPISrY=5me=rS%&*0=*1o\1uoaGKqY>ghe)9eViV6q^c(_.rVFtJkU(]F'=HSp(S)?Tc<[?<3.dHr]tn4)PD()u"4?t6GF55!fA$Mg_3M:0t9R7V+B%]Wm_D>tmc\0A-,<NE.bem(P6u38XRhVC!AO6FIB8Z*!J5/.TLC734dZa10"8(]++O9LJ]WeUIX\GY$bP4GM6gTA*J:ldWJ^UG!^j%F?XVR)dW2a'@m),@r#B]#C6=Q>JE=kY5H:?jMN3&6J#D9>tCFM@r#UjY)f]qH*33I?EI?uoKA4u-uHT6[h;b*aOtDR1Y$(>gU,[:%P3`Q\P5VhDZNU0=*GS6Ohk.FC?e?"O93cn)XkunNIc$M5!G`qoffRlEh8l2PN@i=g6_OVKRtkQt5og>_DcF4mBtGkM5"aa<[?7=/%r/nV?de60pfJ`/C?JIj!\!.gG8!&QSWBg3aFsscl<R5)sH/dN_A:#R\(*6%Jr`go-RmsW1P4s!iD4b@Y_C)n!n4BA7e/=,l<G7V,%KWZ$_j*o$ke_Kkn>^[RE:<EC.U[gpp_C:=cUbTL#IiKR-O?i'L3rfNH\pOS,.@H:ZP^HmZC#9r%Cr!]F86X)_T9Rk4A7V]UjOK%=%iuJA<7o$HZ?J(EN?gPX*bAo%1pDk>`q]o76dIKl'Fsjqenk!_0q]n*95"U.Y)EX>K3pKI()YJ;nZgFf2gBZ]#h!8af,X2b:6Sd_B%L')(&8uQNeFVBaI;)Mc<kDgGq0_/M!V7s8a[ZLN'pRU-mNr(O'^Y3Dm't273dVh?[X7'lAg+Fq]2:m$A8Iq(DQ)NJUD![(+fJ;b^%$X%mj?^Q2a!`KZn9.8>gh"H-,4=,4mURs*\?`pWsU-,9,e??JHAbjX(FZ(E.3h(XMf:f9ar>##l:8<V3`D51DOg#o(Egk&n*#Yh]%=AD=u>GE[BN-s0$r$OP4/(kh+*QbX]=p#!4Qa_TLn28\NJR>FU-NlWu4.Q2RNWfiugbFkj'S[KOiUBCZEd/krg/TQ8dh7E$H!=gN%M^gro3mZ1!m.!Wfnp%gOaLM6A.9=I]o+W.7bN&-0kj_3mDdN]=4KLp'j.QOK9\5i,CQHLDZ,bnr(d84no*Z^_Q4JNW'F;>R+$`!o%4q\X>(SD:i%hpY/"!9ebr[3plN:Pqk`=?2*JF;6]-q\9n#?^qfe>Y<6X",\n1GljbbU4_HE<%loa%BLqfolCPZeRQ1!+a%Sd&/`%%992eLht92#6\p96.n%11Pn,#>N:SUh;`-k'`je8)f@]q6$2s4Ea_]ho-m&Kn$/'XA`^5YZOO`!*F"=1?1AMJ(GcfE8D>^b]F"ti4%(sPDc`lCMrI9P-EI"Sf)mk;E*rTRPBT>&kS`OG\[FM+jNA]>NnCOGZ[jqhB?Iem7>e(:$qI'*5?CX#X^COZ+`o8Be05)+,BI1UcV%<fnf6Il5[V7M-7Ek!pn'FKJ0Vl>?42=>[[.'MYn,drm5nN8A0s\ge='p5K]j*k/@2W4::tprBj:e]4M@::8:s@V6/Rr?.sURP;'o%6#F_[l(g]\Y<.)r<>ae5L3;%O4jE?rZHTD'fusLaUA\XgV%G77$fc&cj(^C9L"X[BR*@1riQJ1:rE"<$c)gPtlRMMLKU&rrARo69%Ft50i.q(?A=F-g''djAYd-(<$.IGr@"i)YW@ftK&8rs;2_SmK!<^p,Xb/.W*i^PNsCf$j8m;%UreB-e@rJqc%.W!Peq[.]'=-sBA%r3EMVah_GB20NE!;\r6N19V=&o*U9lhV2qbSK1X6eeM7W33[g2h*#kY$)VjQbcB&7s'0?:Q+]6bGLg&,ARhfdU-9G<#9`K+Y$.p9%(["<.elS@gle>e:$N2,r`@G3@kqaY;<D$Qi])NLL^E)9$G[Vg]!l-pHP'F2=8II>Y*<gatMup,N7sLr<p@K7`#aAqN"bAjeO`[=M%p?00``qdlb*X;_T!O=F<N9R>Vns$K'Vo3AN!94KQ=oVjG<uKJkOZa-ke+D1rm3AniV'iCB0c5k%1U\"k>?No?^hOanTht[+]U@=3%HH%_o!XjX.75TNSOQkg0<1C!BYpNgMfP1qL?WQLcT--(Oi=n\`0oto721(fIMruD$NRsRMhh8(c0e\JG9gD,$(s)c*?FW_c0IG&]%C)DR^FLt"$Mub,_VJ$g1OOZ$3@;Zq"8U-N1Y`)7NpjF"2Q-m2Rj'-d=gq'&>0L#'m(\;@[s8TQdGq>i8R!#%!\h[<'p\5DIg[-sT%$a?enY@$hC+5d(dDu\kPs7>XX>do*iT"3\)MoB]WB)rXClGX"%-/ip#!@A.1nDjIb"Rf'T8S.eNVjmU/hWoZrXV`m'f$Arsjp']I%)S"1e!!o#GMMaG)ZtKG@;4;i-!_`^oM'&_]&R3+P?6bF5rQu[#%cBAX<>Mj7bg14+h!'Qrg2MlUmdVA44bUl^4E\JC\fTA(;tljL%R^AXp2bSFfN0M!32t6b/;PJ3Gk2[Ccbp2f*2\`/)eom]lcgcCQ"e81RrfaL)2'o0ArE,*C'Au'@q`d9k5Qr$?X-c`i@$Vc+\bFFk%_ho8D:7(f>RuYsAJj9A;Z2sd`O4HDcE$eqdJ^bi.?,8drG,RZ_R^o;RhH3_Y4d4'M=]b`V<Nf!/DTiQZ`LQcUi_;^+YnOB7d*/$^%ghuN,E2lqpVrmlc(-uY$8d\'>pZd%K59o:FmQ3j&DES@@^tDo/WR!e2n_b!D5c\J_G@K%5F6*(ETLZH"4ZE.$'S:,oC4(Xk_gq/"%I0G"iZ_['>GjJf7>9`1d$U)3_!.DGd-J5PW",n_b"g#,>Td/^`RJ!?<2$umEMdFGkP%1;qrWb*MXIaPDr(+*D<TJu-]&d4OM.9.F%lo[sG3VV+C]?Kl[H_\u&m-ssab5fc-?!<O-pmC10>F+2"jNS-J_m2;[KbB4ao-u<DS#-:8`537=5GnV@qS)a'+VXKFIi@Y",!^q]%N@L>271fWeaVnJG$Be->'*KK^"[dca%F],qWlt%`+I@Yo$_Jg1k9u.V\G*'-(W!*NliZmWCLl`s?1W7JU;8"!&q5>MB-+BsQ,Gu?%7#b0Z[6d>GPc'2g&ms,W/o6cL]?jja3D\%T"sb8LPLcNXf1FsPi^Bo9`ZI@,g@'iWb9)#S>crZI9]l%RPs[h0G@UYZr^[(jhhbV,%1MEDQ-e)%uUd:/eqnl8Ti"4i-%G>ji&EcjTNJ^1c#9Ri@UB`1`2hh^q3k.hmK73^VQGTYK'UQS]U[RcY7i$FCAn%6'!3!Vb_]eGn%M3f88Lq9cuegIU32)q=p;WZ23F[8U,DL<G['A!fOMt_o7>NJ`&YJ!Y,/V%l;X*BiTZpPUG+0WYAI<k'IN'sss;"O+M+9>>gf:k>;%D0*Ws:TY+,1noYqEob__77/QebV\g?(/[^aV7&C2X+rJ4q[uEqT5SC6<LOFfA@o*a#hofrS(BHb^N#lm5a8LLgq[pV+khA2OfQ2T%BXi@(<bq/3f$rAEoCEjFE1ddS2/84.%Ln1Gr(b4;d^ED9IrmV5)`^ClpT<&HpTEVZI*gig?'!!chnZ#AFoG<0l3ra\TFcJ,4$i35%"+[\='Ci"IBNT>%0Pp7ajV5?6R[a2IpAN&\CDu;sL'7@H.jtf#UY<BVZ#Xj+D-`"/B"4MF*kL0->-Q6YQJ#<qpK?hqo*(H+1LV%Z%N;)gOX$[ogr^AX/=hgj\("/.fKls@U9g02C0$d-?kG]3U]5[#.[dEcp;LTOG,@iB8K\/s\bfT&;I*[;HR:bE]\iilf>pcMq5Fr>_%#M8UbT/Ef7KZM5fn=7DGo+/%:CAi]r[SOB8:Q&N)qFpsb4:9aZoC/hPXRSfG3^M/:l,Jf"MdR9\DYUQfIdOuA-RYa2]KeWNPd4X/%bQ6`r'*2$Q>!cW"rnnF4),Fn)P4t>_0N_"!#6$#YkEs<B+-+ssoP"=GjiX2;5:S;Z0>&mMYA40(:rrAT!tk!Dm5u1/Y2L2e8qfu>%cB]8&IWLj\(HcA//oNsl#s)EcbM*5m*:70Q/HEJF^%hr@Yr=(\1ts!s',UMjkMGG&Hm:),G8l5:(g^0q.qqjoB=09e!7a9Ad"*!k%dPf#VSQNR:d3VhdZ(r>9TcR^%5CO1TN["$U^ATcknkMLI$a]S@:.a)YI<[F]aC'1'6e`1+Q&`2]"oGXsStTNcgqk.\9]NYVnZ]YB%qZm40;YOV=@g;9[eVY(P+tt_d++ZVWi"<KeYn&ZJ`L2/B,7bJ]]o7=i@LJ2Vf?%/s0..jD!00%"Fo5]uL%<;0)SfoAKnjn9h5=['%oRO*k>bDL5\?pHH?(fO&B\"LqV/of:TX',/)'u7,Qi^H'>@i?fV""Vjepti=)kc1h(G2VO,P8[WSJ;JGUeqT7"\R@<D\Q$>Ik"oh%7P^F7Wo:sm^=5/^R2e)CKZ8fAO=4'8!R,n$`K=VI[&%!d^/X\kq0[ja7^j,^#F\Vd6A_h<@u$LWa#7A#:%5A/0@XS2kUL'me,X0L%D5E`hgLjF.1!t2Gh$I>-X7uP>4M:#o!e:sJZs(Gfq[]hIV2T7`d(Hp0[Pd"CCjhctnn^-D-"O9.EjP]BmJg!8'nh#,d17JjGCgD'%!b"3kWdOH^S2f=G+on'&7gNC+K+iHhFI*1+8c6tfY'SO]o3FWO2Y*%?nC9Xi\0en@mdfn=^-=7YK</77kBcuqbTrWI1_71)nf\lC%o:Tcj%Z+t'7E(bbKKQ&i7LD*B[elkC2<.3Q$!28/h,2N7H-(Cmp`Rb8!C+m]9Tq]Y.RgLS`Oj7B!6ug*;K/?!+Q0RS\8]a8g&h?h%,6Q8(>o(Yjq#?85CA6N100jQeY+Lu`\U<^m^6'r0B^,%HqV'`bqtLMcHb<k]K([o/Mog4qHsf=`#$b+#r9N#]D,2[(Q<)G`s+B]%%ib/0O+B"@R?(Z(S?@V*5_tgKKN68jBIfUNNPr*DQG.n6eAJkmjV?rD\:k/mQE*,iTeK5[Hq\0qH\?RT5AD&ZAa\.l(>]+>'5'.n/%&`-rj(HEMo5<^oeHE#NL*D0d@Ba/I%]+rT@$OsT>)gNr=_2(WL!%$H]LZ4\OL5VMiB^+7CWDT>aSE8=E-be<<chE$(QX#?efPgN]%)`\knDNHZ)e+I[T3R/4tf;n([`8N_e\3/A&V<MlRYJGk)bl)uO*@I+PcN2/)O0N=(ms)=n9]BE\D=M/s7(l=7Ll_)jNAuul+_oH?%c["B1SI=_)@2tsXA'2/eg1;k-J7L%X]6+Pga,cPSOoR[;ZEncr5%!6OI?V^KmIs-^1-j7O_8J3H\A$)*2tHCEYBhde,n+9,r.&R/%ZGpl;(Wm#IaE(5WqKsqI(T=/]"?D4jgAM6*8aqbi5$2CS%Qtu9O1"_UZa1&41"DU9g@#"ae&*9-WjL[oET*8BdlF9\,6!=oHCh@[%5^/4:iWnm&JIVr?RpU^2`5"[DrOg!ST*>`J!n3!0mf=0nJ,lQZ5K3"a,Jfs![fFjOdfc._#jM[d^hu6-.3'E/+79;YTg@B0."tVG%Bq^&,)iRXDIj7bQTuWLG,?.kl'b_/0eh=`k?.0&.9cJJ`;=df'MpJDr6i8=e_s6'<N6$!R=*+ia.A-rJ;5Z?1f.$,8Ca]JNI(]C9%AfFDE0`=5%j"(6K/bg::b^SdG"g+GHi79NY6?*>'M4hk\bXsj\k56:nJ,*3CAld\+JB)D;TFD9^SYf0ZDqP/h%\7a/m,5c&iM+q9%X2ILK`j&k:a2/g&#L?'M%]m%X1k&bbY%n]9K0G!?M+Il2<i1m`BlG@2Qp-IrY>II]`V/J55a@AoJm%6MqThP214\]dSp1]t%[a]3%]J7a@jO:.RR=F.UBQR+9l9$&j*KiY".WY2@I29LE"bO1u%m&1igrX]"^Z`b:@U+ek`BK<NYL7:OPpR+sSj6#_`ng(6*]%MS#/_;L%G+V4"IZ3JEcrC]M78"\^Pnl)ZKO)/o'7]$\113!epb\*:=_0+C[`'mBKiW)Bc,9(aa35?Nl#,ofZ>u\R=bHh:g4l:/Dg!FD/PQ2N%g?D95^B?2RWc#p:2W]G`"6[(=TNt/:BUA[s+M*;-pbrle/be7`<to.K]Drj\>:'TAal&FooPrB.Q"T(-i\cK:.25e#&5Z&#kr_/M%eEVL!&fC0*,4F+@XQG6"]:$R$&c"Z$`i^G[RN5,jmo)H^DL#kjLVlB"%5Sq<+OPDlP"Ye@*6>TJ$=a;_7u^T$lXRM.Kc->o!Qe!Q%m+k9@c#k)`Jc/L.LO&TkPBUD]@HK45k\oO"r8GK10Hp"(iR6oA>hR2Sgtt5]kgokp^="M$a\LG";#U4_NP)Ve)$4n0IN#W50Z@B\%b`F5QMZ.40.`(2N/MGGi,$uM4Y`qZMdU5rQ4KgjdM[GImL)[N$<0JGE&5![3\*"Z5_A'm(75\h,"ue^<.is_KEZKYoXPi&^g<&l)%e9mPDOR)FQZ0R'c"9/Ga*#aGpfq_1MXlciPi#fN;k+ui-RV&r_Sq^$;@=c8.8](uP*0lP77rmoR4IlGk-$R#h(sH06+-dc-"$N+q%a#mV61s=65V954r*qXqR,C6T>Z_-6?)NcnW+\s;AQ6I?dIQhF>'`1^Ai(jNeml[G_nD%N,J)"<j$sa_B]GPnE$cEkZ1KW&[dbb!i%56>nC!ASKqNWcf(Gb0u-N_a0IM]dh!8JSb&1(DjR4JZ!(eO\"jQ/4gYfg!]g3"A4pH_7CC7J[C=Pqg0AF?<<#ke]F*oE9<5;g=FI%rfV$Eq*C\$n]N+kf_??jiH7H4&T[pEEQFH_o$eg9'0[F/@>,JYUlE6!kW6\.;#OqcO*sB[/>]eUO?B[2?u"46$J:!=/[s>(1p;4U%JqJYA\D=;EAd%H*Dp=(e+CmT3#X=e_d!7K0'&J8L&>!,=aH/Jp;S\?"Fmbi]8'::OKO<fN;$b?<_=YZL'u;\s-&]k_W)1\N8[Ip;%6K0agMp+8m0.DQi,j68qQVm&=4LHZFn#Yo>&=2%*FD33m+%M;ll&gHpMVN`s),H[L=p5`YHgs3qc"L3aTH'c&K^#&:69"NL,@@jN%=BpY$d4JM$49@&2#F/mfE$6,go<K&G`r09^n[,Ik4;<\]Z("%E"sOcgAfo(;(TI*rQDTO0U`mks%\846$);=dnTpQM%s0MVq*6c4%&6lfJIUr$Q/<\6B,I9N;d+'=k)NO0JhX-qgAg7*T*/0>b!0VcYIFJ6`7.\m#^"ojomUS.PCU)c8L;?\_b"1#&V[G\+RG.+`)UJMo%l?%%XL#O93l44nq<%8FTh[4LMFCV@aeR!/jGj=\0p&fN8oHo5R88`T^/>:K/=a-JB*8fd?PhoKff)7b11Hs/:c_TTJ0Qr=q5DW0b%&,I'(Y)]Z)*='?ca4\g6hh0l8<]EdmC%YY'-);T@mh%RcoKh\f0Hg]jGa3S/^;k>9n27Ep5E;0S"@BPPo"aXa+Y$ig;S,NL?p)]!%kY)P"QIVL+Asd+b9WWD0Q]Mk+!N')D&8.%Z4)W:6.08J)1N,W[oP&t)L_V\TnSq4TTbMbQN[u`[KS/">N!p%B,E95V!@X:nB0j,+%9M4es'E=%3*dW`#`55a6,a:)kPC[egUnK+r\6gm[RS*EOX=*o;/a5?b%Ubl7ID=YN:J[p[G;k'(R[Zh!9X<.Lr-8!!n2L<Ma;mF+%h8l`!!glNQUr2IkHenFR&d,UVU+3FJ%a&(*i\$$ir!ZObEEm6O!bsB;eq2i;@9Cd%%/tUDIVCMV0gHLja,cm'Yh91Q9[M$L<s1EK%%EWlhD02`cZSF=5Z0f8TgJCc>l.6<;U(<nqohGMI1'.=.RaJ]Yg?(j0V?=m%7Z,87I_?k;qtMR5i56l>I/U/uq%pn5*O;B=*o+;s%VY`=TBP_lYn(XtbYUgfqN#>+r5_o7F\.:6m"n`8GmZ\B-h)GLYR=G7FTdmYO?O?9Ihb1USCk(.Ch]7/tMf=D1;.Gk".>0`uQCQ7>%rqkH)i0(*-KCI2,4T0BfnFFI%ft0.)f?!Cs`**^ecaMH(Kg:&%$P<"AZN;#V1IN<hS[N/*QG"T[U4mZ+#k\=[G/DdJ9l\)rja)1P%Ag]+9a<8Fc<XjkVn3fa<[rr*<S$'9fdN6h)pnQtq&qpEsh08_-W)DmW[gc=`Nr42hcS$00>]W>\p!\;;Q`;d0\Ums):/sYf:-d0V%Z(4nO4/J(E6\9eU1Q:nZeEKp),h6L_(hk%J`C:HqGH$o>ML(f_Ushi2)[8tq7]FnY"VX,$CbG#m:M*Z/&jt&GoV/WsT(N1H_cDcp%<-Mt9g#[o76qbM%@fWmOdbjhE5JLcc<YoYJ"!*(*e>4-<Mc\>Z7aNksML52gm[EJN'_*.iBZM`'3XSh&*$cC=,6kUgZEG6&]j2q-%;#WqLZ9sK.AF\n+8^2m%kT>@=lNQq?n$X>KL<732*ho5ZJ=.b48?1uiVY'_240Heb`fk1+$#Te5gGYUqq\nRn6.J?4rpObEHH+Fu%9?Rl1/ll=91SNRg"o.R^OFJMP4mG_.0jp8%+*HDkS2tb'4-@=Q$P8S&QcRdHg.k@'XZg>("=FLUZNSLPGZfXZNPCu)M#,p2\46ZX%)uQHu4+lc3Hup'T_IrR6!*C_8jq#A\GE`FA%.`P78%=_*EMq1fX?':@=LjUEjQ.&"7^#V.7O>Pn1M+,S:]IBE1G",qNJX,DH'V1F%\Ma(jSi*mXW]<9\UR]\C]T*g0RB^aeQsf`bEr//F\XPM8:]\SWbuFIg!$%O,O\.(lUJjsgVcRBKhSQ&,b)H7h)J9A?ec<6i6jY2b%D28^mbiL\.=O"'22rR8Nja3'+:L_EIJBRBq$YsLbL_in\/#M/lILU_Zcs&uPB'2[(:"bV.pID&/`S^OA-b.Bp_/*BYSic)8n@SK5%+$/*GF%B9I7HKlKPqr8OSc*MA.o*G8,'Y#s^D#+=ZLc;pN@[mc]Rd6)r9%:=(_QahlbDO1XKuR_,bb1-+Dgac?_&35+m'EQLu+bG%blI"gV]5ZL[2[((EF!(>3II#lYWBX+LMAY.c"tY7!OrYMSLeHKb,\!41SqfXNFif>#R"_sRC=Z$Am(*&W.rMj[*)3db[N>W%"emb%Xf`eVQq@l<Vc?FeWi1$p2I%@/V=5H_JVq.V9I,_I"EOUG!5#?]pn*oqB%&o%S$@7q*ZaZt!=Yo'9et5[G5[[Kk"+u=`CCe?e+GX4%2pZa@K&DdQ9AWjnN1>:lQ:l'A];<00[iMpaU;FpVb$)*_H"MT+^45i6FRR=PJ)<:&(6e0\mtI@D<Lq=enKEmHQ(AOss%n&Mp^KZe%ZkADD6q;c[=QQ2Q';i#4l%h0N=j3'Idt^o\6ge0TcI%]K[sJh>WWV%<a7JU#1"hl(_6%?!L7A5cOVtDF\9_41SW<R--3-2/UhJB-%,Hu(!kN*+]5Z7n(9i<^5+70NmEBZ%3SZ`(L_5G(2a94=j$Q?^5Qpi9iG9LcW`r+L_SnrEZ&[8J9\uT[FV%'$AS#GtNHZaF)qU&Q7%9ZABX43&XcE-PJEDus^$6iG51SE6t29'RcHGY_N8[YZ(Xi->r,:gGJ_#Yn0okKt`<4?hLWF[ofj]o6l_jf-KG_2fQb47@kENZ;)=%imu7LWU=]+Vs@%CmbH/,:V/OLq)kb//bYT8V<k-#%<G:lN5V&-[]%]r93H#BYC%#OU4M#j4'29`Vr;:ZiAf4*5kj,C]ei]cgQ^Wi%K3U%(4&'S4n]-8$+7'VbB@uOC4jNg3?WjXKgpVurM;`eN?7J>.9L9a+U(Z\Y`9kg_U-^X'k#+&TY?0/:;![^80\WI,LuhcC/TOj^%qU'#Z:MKBqMcr>[5n[-S=fQp20BG@bgJTP_#FQ9n3Mag[ekMqqXO.'Q"/uco92U?%.ol[%CQ9Y?r2hf*V<dD,jQ"IjaXi)]JFi&Q%Rdp1qT2*ag,"+<]Wu@f(-cVke?epm"S868,U)^Q;n.%/dnmV0(R0^hcSRh?jNiJs<GKt9Z,G2[nIO+Bq`W&0[p):]AE:&'n7A20t%Jp8a42g-X8?,2Uo!6&K8djns`gMtqRS'L@^S[VH@ItMhOU[(G,:=c>BBEu-s*=N6^qW`8nEgt?%cK?iHhPeEiq3!4DriQn&&?(P=%;TngCHpgI"l]W`;P+EDa.l(i>"ojb."NLG6N&ED(m5+(>%kCMW/`;\Y*+-Zt+1&$4N:PR=W5@/Ias)(l43DSf.RfuD;0TuH2LM!_%N[;Cg3>"'N?7_4*D\Zt.qnlQdV!Ario.dS&S/26s",8s7<hO2gPJ2aP.gE(0adlA1clAgl_\QB:4j,5Df;g>J1/O\I*E*>Vq]-Fd%o^32*%`>L!UuJN<7iROC1mVdP]@_X&>N_i[G>rAf0TsL!W@EZs6rWqo4_!I-dWLoSnRq.4*QR@RR2KWl^E=amT2lQQ>Y>X$2\gT8%rjI^F!Kd[JMJu>BVR;6$d[`VP*&\5B?qa#_RN!P&%U2rE:K>#HG#5.p*@B/*2^am-gPF=DR;#1aBF5qo^Ksa=HC!_!#p&+0TXCDc%7njqMf&=n7]EWn<GR,r:[=EqEdeoodMYPr"\47ao(Jq93`gd?M9"/$,PiQ"@5WPe=DlC`%nEU7c)i;HaW,'Xi`RI)DaMhV`#!5FW%jVUo!Q$[WX91ldM.0b9DNC*`Lab'/)J5.Qn)^*0TB66M@i\/Q-QOBd3==27V#;BH6mqs_rfeNj,oui\`Q"^>"VjRs1-s.7"GSUk_%\P!"(m+Upc2WSQ"Y88I4WJL+N99aiX5&>uBb03ia"1E0:9$H(H8Ju=R^d!#3PD^Q6ltPn#$ce)e)bSVe69_3,B4/mGc&djX,<.O8%ae62I4TPHED!u/0D*&NZKPK<eT["YPla!kZABS3ML_,\G'i9<_0l`@2,Iib5WWf<604DS2#-]bqJ'/Di0<XnIr$3#O[dX8,A\<#R%p[AjD<L&<nH<!Qf1Bg@g'P4dHpE3\--?sW:i%egDpdaN:7rmMNXrqh%::6j\rRQUYWJ9)cl=V#??W3fD#2&q9m;1ODG93YHX`uW;%J+XEn6Pf.J8Wk4,[@E\e)GJ2/%tGe@!;T7eBE?br,=An.4LrXY!H>O;/iU3,F)D=Jd("(>L'rO+YH.RQ5.\`0N#kFqjL!!\l>kbL%.ILYReT?q?#LKU!:l>?/s$5j1-:(*#kI5jnoVgm(hJ`\)1U)q,m4lYaXP4V!<F_@XkjV&?DBsEc4Y7T[k>p=:i\UBQ+tPWUKV4^#%9Y%E5gOsOjj_0ge0b=Hs\`"&tbmJP&<H0/Uk7#Zeb;=g0C4n3)%NB>*m=FPT&oZ;g=<fVn'!#1mX7[-RH4YeV;V'3*A1_2f8!I\+%C5i5=PjH+.>f-=j(MCRLk,Q5.*Md_\ehFkM]X_5qG^unDh#@.J)/CM_FX9,2B#dQWTq%(:@nO<J`+0J)VK?=n?2Qj[=Ed,20``!J%YXB)P^k8nJeReiV[lJ:j1`r=8=<dAt4oGuU4K!\)](LF[<L:?X?42RiWk#ErD@!h`RGMj\7!,1s,Xah=$VTa8/[aD%YGV%*$1[0r%`X:9R1A*;)g\Q#?le..cG=BA[nT8BjX/M)Jp`4Bd(t(WpHodXs@VP)C5AD,X^hIjV$"uK5$J[,`DuB%s.F@&+>s8\4*C4uqrG92b%ZO`"Q^IK*&4(nTo?)pV\*d"U8;YGM%-8c)kMa(*n2E_>"F6@LKd.h#If<E6^jsM0-LW%;m8<lQl9X!CUd$p"8Wi/#[S9k>s)[3;k%\5'UiH2,$RLkX6%Rdp)rY*Uir&4.?:DEI+(/B-Ta]5DOu>"]]e1WN+[,:3)6'GDTu:YG)g2]frX(6-3?0R-!jCWIN^p`prp89Ht<%+3/utQR^R9:O=&!n'UK]KR)*?'<P8oVU+(2Ot2bL](U@f;'jj46K0L/;'3#JrfK,,+?mIB%@P95>5-"S<EL(F-sk%^A-Iru532<O%Fn6sbPus"_UE).mDHcgE@]jHS"K:Y+)Z\LXT@Ys[/$'>$^btfX2lfNaJ(r=%[Y8'A81QWb#m#JDpJUjjOrn=I2H^:"?][;Uoghhk%mY]G:[K?-un)$$VBPJ7H"Ocb]rF[Q9ggrAE[$J%o)Xa9Op\@<`'M:_4ON6J]-oQbNTLT[HDq+>mD=aH#)#i__*4M4**j2NO9"Fui%MSG=3CI.7:4$l>YY/c#uQ`.O^E(123$IrlBKlX-0odo#24)CtkWV^S+R0@CO<:33]M^An>NUW!c:)0&]B;?*58-l'Zf,Z48mHXFU%3r_i2_bb#3^4=KNM<9Rj_:o4Al49a?7,R:+W)*<A[-ajM:fCuUY8?9&gC[_3">U')Efo\tW7.f.P`"sLJ1II!M<%qP$i/tqnpPG[%]=$d(@IS7M6pQfCF?$`R;s/@VTK:1Wm:MYp;N20>>@.4E9EJo#Bc:of(>tGVoV`M_"%0D9hT.uN`PFCa<Jb?F-Cl]7UPoPqLa:H\%XNQF_*^c^0)[/GE*5WlRX>1G`gMt/aasgmh=VTD(J0*#,)U<=X(3X!$N*@@'9iaIn#B%m8#74[L3f0,?LKll8=QJMYc[rp.FIe;6%B`b^/:.<I:#&lVpbd8BRQd,bo9bUN3n[oW-TaUGa2e'%;r=jSoHXtYB'7ZM>P#pG4N]=%8]X9G7,B>^,HR4lNI5b\bqEZpG43Oie%-N5XS89g=hLu#p-.Z,_X3'CEl57*7_aeNABaCfdDb1/PNKluCeaO*kT8h3OiB\*O2>p=a)BM0Ojp_r,GdeW1'&euU2>4e(.HeH1N%^Dl=pZ3Q(@]i[_Q7mAX&[3Jno9</Jshm-f(H^Rh5gVnihM1luKlgsS,H9uY/&[[=kB'T,FR-MlE'<oYcY+1^5I7j%.pLIG:#XN@J%3bMu$irhnDECS$\72_4sji;cK[\+J]&(2JTVUNmF0d)UUN7;@s?XVNe\dq;R67RP0453KGOr>VX2$bt;MQZj90Yrg]\IQm)FK1NQ%-o;F[eg(&`c_`gt(uETb1E'C[+:I*>`PthmPZ4'!JiPeI.6eFJBlON#$@bn[kV!]:(;!AQodWk._dhA5H@YNNgYZmIPVl3[B>>,*%,/uYqW]J7]Aott$c6@0Nc2g0=>rKZ4#l(PDDq2&+lP4e,o/io![(=>?.:qQm&2W?$'_3l=SWDW1(MUY@oCY7EQYlubcSJIqPaVg_%B-77?eKjT7g(q5`<56N4*U]t/aEbXIf&97GCJB]oD("K1r2k.k[QZQ(o#u)-V[b:(KW'^_J?f4>8.#W=(+N$Be]6XQ<f+G[/Jp2p%>;SP.*';,Ikb11?*(8_Xk6>/[n:2l;)A_fm[K5Tpg8:\A_Tu1olmt!o.-W*T&"T&?'_ehf_e9`oo7t2=#;\$L*AF4&mh@^:9NO,&%3!mg-l\k[M6s<'3(tiktAVCAXR6NA@lm;L:73\UQ6Ch$_MAjeECUD>s\=q@u.9HU'[>eK('%`0sd4*YjrPLCBV!9a(dFB^\bGEkU%KRUWZ!:j$?Q3(SBAV?uEOLkH4P3b0!/5'pYO0j,FJ4PpfK&CE6Y@I@cZ#uhFCcfUG(]7m$RPC);7BIBl9"_ia"RMLJ9JWr1]a_67%M7,)<&t[W%&WLSKjVu[T#G.6;PM8^/bNukU'WOGC9fj$q,jZ$`_.k_-6<:Sh^.*4slRjKKX85CR]=CC0G19jY"]9<2YBMJAZ:WZT%X65nmD3MSl\73UD28^`i_u1<BA7h%*jnpV28?_fP0"E8.fI7rU;,d4+b0WHtq"0)*fLNF&@%"[Xfis0?[77/Ab4%mLI#8Zt,R`bF%lgIW5?]+iefsdbL^ToX"\C`fNQ^o:*r=fR3PdFZFqZ*XIUE$.*)A1Ps3s=_kM)]u$lfT/a4>5sCUgGT#O+``Ree(JP_FIsSbpV24%SBitTrZf%)of]2EKj#_]!/_gH9C3+]K2=di/1K.TK#^h&!Yb-5o6,KOkZ%h[X`BnLi!<9/R7RCIVm7hhlnEVhPGAcf4qsPbDO:dc%O,+$$ZN<?pktQe`gjk8fS?-i\T9$;qfLNQZXhF[?dZQ&.!b-A*1P-@N8i?C(SsW'f32=4JQ;,;((J\7G<[9o)L`oj&h<>JsjO*KR%.VTn.0XDQkQP2L^4bJ[G&qH2@:=!T6SCpiRJ8ppU^Su%UB9ohFcCe/t>Z+u::#I@0Of80H\#\dhcX(V3BWb>W7.f)NV&nICjtSif%JVWf*!K]"AQl5J%gGWY0Rpu.5&+bc`OPf3/"=oNtpASqnCMkHpiiU+jc%LC8&?e4%cUu'ri3>'O''+lH8(M\pPr7a`J_&=s#HW%F%9rB)1S(X4KV]=58<oVY8cqjBR[8j?';T)I'&^@K^_+%`K5g:!/8hVWj4\:1GIu9-13BRI*!(#JIo8A*?Qn_;nCH5JU@W;`^Z!>)*%L:'!a2C!_#D%3WBe#EJ=:"E(e>b/jK3OO\(U5&g"08gB1l.JGfYascs:!BkTb9)oaYoH>2@cLf\jRe,i;5W6dr3!q])-?`,_?pk,%&?u')=\a*hLO?V5*4d!rqq*_ULKpF+_hFdL6=b2AOFHka(tPe=^*NZ3]9qSME<`Q`U_=jD]Png7E;iS51Is%"1\tl@\0Y^2clZjB%TfZ=*r8FHCdu6EQDKCkXq-JFLLE(6CGk@d![q=#HV/)n%P,7m)@V63ID)3S,qP@u/7i1hi3F!EHc%#;uU?#`-]29iLQ+VhHK_N4c%9-sWAK5_!*.4HeDV.Z8klX9PjBYUP`aO/'ZD*\;'<%Q6)$`;T:^imgH5Go6>'G1?_E>,V#P*<$Q,_Bd;8`2o4;iDYT,iUh5k>TLF%!2aTRG+Sf^9Z9Fc,hK-P,BS_IqjaqG*W]?4L8_dCc)*(16pQMeU7%FP]A.cYF)E#7/R5"l%j5E;PWO,aCt\_RS")nqg_ZDSV+[^*%X+^F/)FY$J[tlf0C%:!2V[1+-q$Wi(^UGEJh#'T^A`JQd*Iu=bZ^hg&qujHr(p"p^\D*/UBKMT^C,s5M=0Gn6#iNm)A&692"/$B8%AB472VXk?R$0S-X6F5,GfV<!S((pP-[p+DP5[Ea;.O6-5aAf"3/-&:G,n&6<pSh[S[%322H^0Xmj(89H]J2GZZ4pk@P#JX*2-ad+%Lac#Ao5kN#()0VNXG=g43%i=ir1)2E]#S'>^m/ROYG,3fT]+qdcH?ahZ".$eCe2[R;b=t/\deWfmfT!$bilns:on"]2`+d(kP/7A%/*5WOaV6pFdgTVE(TVjE%dQ,A'JuGhn0Du9?c/e?(Aq^N%"JrL:8sh8i%_6ia9PXT,'B/+HG/fd02,-"/f>E/ZUrT&IZ"l7"%S3"%>g:gINWotP61Kqi]d)N65EP]9]=@#IUiF*-7s!tfn0Vbl!9Nem^)J@tTB7"AmV+p2^tXOQ'[h--k-)QgflQHq.e>jKiX0)XNhTu0%F@c"pnKT("lU+PneQI9f"\:5Z%MQsHf!&5F!MNpu?c>]016m8;9eRFR*8FZ%[&DQCVmG:OfqQu4O2EInWdN.^h3;L9aK@*intaS"%"ju."%(,V</L%%0;LXQ'6"S*S%2Is2muTq1\uuHd^mK6/UKHKVb3tXbI@2L(aL2rId,4J=e+tak,SRY`+L);F@Fm%bRJIt@V-*+l%!l1mcIhN3eXb(eDRA*l[IngU'b>2gQSmB&TJDi)*GM.14Z/\QUf0$UH72)N&kjYOR5D=$YC0%:EgMX[r)j:-*]4BM419sY<iURpn%5.9n6PKW"e!-B+]J.%lFW;&<rP'9l&@K!T0DIcVF%u.Pi9e@p/8?:4eO4[I_XDFj!,LBCN/9sUdHD*Q,,3dZsk`f>c13f#+&l`Hk%(5>RR[IqDoLX2Q(nk_i1^u6,_K<Y]f>j5a`'h\7JpbAnkqj2(mIEa-8PH3W&L;K^_8I_>Ad.BLld>bi(WcB^O(?Mt+JoM/`l8X;d%^l#)lp%jb=&_ASL^4#P_+2oe*r&Q/!j#H!VVb2eM`Q<`Pc)"4jQ$pNK(qR_XfSU>I`)q?Vj?<r1<EH^J!:m)h;"?<5gGeOk/Ld$3%0oAjJ9,-+O2tY)Jg$3>,7F[#M.-=d2#E$DVYF/U"!0YsF/#^_,./]H"-Ya?AU.ai9r#>O<?!bC;'Ed!rr4(m%)\S322,467:fV`A%LTan@/6:si]RDM.1mh!Cf7`+e]2^Sp#%sqA@'L?Ji!PmP6f<K[n.-/`VMT7[@Z!"1976"pdIH?+?%4>j"E,`=LE!+3d4!nWnA!L<%KJu+h0</t)kXgQr#?@c(5hqeAF\;X?ZA?!LHq>:)A24ZZFs;H7Fj9<]GmrSaF;LCjb7q&,>.h5+93)q\fh9(7[fr(BpOh0O/OumW%QpP=&YBE$5f#&#mM?Ja/>[4%/b"EWmhk8:_pL3uUAeU_,YXgShZ%[/PQhAL(4W4M\=0!67/9@FtU6Xu0(jo&gmkJ;H@&f\*[HRCL%:Nn1*f$bMY!3/2Onls@P`s[^9g=Q["<i?baiF\HId+Ol&o;>8`YBmaL%OGTc#aYWteo4u`jm6sG6Q+%HjCqqBNS<h8Qf6sW/_p(a%WhTSgEM?SjU!.8@KD"OW<$aBC.=FU8?bJC>9&UOL9P$>NfKa#Nl96DX4/3u:[-Vhk.HN@9T5n047kAZ<NT[\M\i/r]RI6gbrN.=g%eaP'0[nj?S^iVE8YS[Y`d0b`eW-]T0)PDabSLa?f=;(T]eNX@I`WA[nW@o,cGcA[%;53OlmcE(+>8L1RnZp_j3.unNF%?h%boW]r%B,"TXVS5+/gN!0^*`P#X.9DlrJ;VIF[H:74?"4sP:C9aF!mkR*"'W9*l1p#:ZLYn7:Mj;sQT3_JmIV8jEHs"n)n2q^Ln.tf\-2Q6%>3DF$l/t6r?:h_#>nR%_]O3A6c5Ji@k\:[2ra[fW!^1q^d]Arb9^:UKPZ:IO)dl`X"Ml#q`7/ddfO9%JM&Cf7SgpcT[=k!?IT1pk%*KDEGd[J6@B4%sMRb%sL(]G-qHSCcK9u2np@o%:(qi]%/=n_pdjZQtsBmZss/C!E[CUD?6_Wd&K;ifL62g5j/5>qD)c!@]j>M!sU%'j4n:L\T\4WN.&mrfTg&/,<Cn'DA9qd+s"bXVnEP?"m=3YQsmE)eK1SX"tZuY4[^IalC(S]<bnr$mPkeV9M@olKc-QH>&66)A-/S%4_\adn(YSPc`sf^@C17XLmYuD%O7OZLNmS1OX83_=[JE@,J7b7WCA:j+j1K0nh*4kM'Is^$dB88QFC,diBXg7m7u;;ZFRU'G*:aU%`Z74aGgm+cSkahhqSIAQBXY<Vi\UZ:QHq.S3<,pYQtc)5.ePbij4rp^-*be)*[XmWJ'C)9l\'($l:RsfF7m^;Bd9s%S]/k@<RZ6L%6Zn>D*Jq5f9W('2kG,dKKAip-V*,7ans=e[iiq&raG?DsTr3G@m-I<-l0]"O[%/9'=D1+?fi1UW)BjR=?8WbU?Yb+FnR1_mA_4uV%`L!Q\W`YIejT3`J[O+O[,3A-G[`C6#T(GSgg9Y3_ka];j=@tq6`AQ2W,.H#cU2RFrV1&eAJ[MnZ!J>N&N)22eI;;+1fXf,UW]'jj%r?,n9Fg[45`_OB+^\0?/_V4AM68FnMB:tu11Rt>N+4MFIN+?EL^5K3_rXo+!bnP2G`;5`66X#@`l/3>4)d:T,qBKm'Ir2T]\Qn>>%2AM&k%+t!bF,,NDgT3FbA6Ei/\0NUfcd^<^V%q).@oXK.E^PKdB!#oDni'XU2ChA_[8CV"o"I`^%BC4r\SS\E]FaJVl/!?@i__ft%XCI?3BSA)IH4d94Q!LT7R^4#0o"<_3\SQE49XHN/du+!0L:pr"2jA[k@-]8jpVf^UCD>d6B7[E.p+4Sf^`V8$C(CL!Et.R?N,*nB%3piD6FRoFh$N\$q>i@>E@]1II<-XalS1Gj-Bufn\7U?ILDb*2.m[Pf+rQMWd0+cfUYN.&T<KF>>[$)rd[erjq2mNCA4t3auYh%-<%/$<nSMQ5<?h!AWu^::H8l(`H]ih;..9@P,mKq%K;`k_"8[!kMiCZVE<%>O]8_ik>2bN5Z9Mt@olcr6m"p\#KU)$*h9'c3jB#-*+t%b9^;(XDN;9aU)UKI6%l=S27c@WGU:_..?@*#=8,\U[qpbYn!UlCd77lPG#nuLqbbAEec_;07WGH#"%8\*bL,]:?)r6qsZ+s=A7\!%*j3[[hW\p(KB9r;EE:i5h,/Tn(CDg?2hAp<PkXZPg6E`@8'0L,"k(R=hfgFNq<Xm51AUTiGTFZq&*:n&Jt[XLWqK!RK-%I;`#)>/%n;9O@C"YLE0hg*$U)E9=O*J]a%Y'@m$oPZMEK^um1a4Fp?HLS2/V](N.7,g7pU;^Ef&:0/#kSP'jfD!LO4HTY>1CI])A/g[,;tE>%p"32)0%FGF7I4cBgFT(':iZXl>NU`pX,)oJdGh5uRcte4Mc[7p[G*9^UpXo"El[N9(bcQR)eMiKOh^*?]>LMAWBML9XS_^sK4P!1%6[Ld;Lf)52[_F&PU3_d.RAe_M3)(C]"J>n\P-bhd?7TncC*%js7TKPsLtI\UKf\5B*TH?u7uH4WP+<WT"XMuu,Jf;r-Xt&jo/U1J%A-tOSC%3iO=3s?7]$@O;,B+*&oG$&7PjMP0IT&J$%LlH'a+mHI"F/J,7Z>#U(Ds!>',4abWs@!Pg-G>q["?>r8bO/OE"]r.Oia5X%3?T(pQ!Qm/6+p_nYB0l*B?#gs,*TJXgIl5"dTgJqJ?B19G>5Tn/13rLN6@j3#o(o^hFb'rSSgi%&"T#HNiZ1h5`tE0m)A48+Qn*5%i[\Kd8dXI,rG9mI?9<@kM'W9WkIi;>U^$::,cK5V.243^Htep&\7V3MA59sM.LZ?U,2EancU]G92ccJD,i):JEP>5-B("#-PBZ_/%mdqP=1c+4rrS.gt!HC<L!/;rf"&Q985CugKA1*3n3RX2$-s.omgM1f`'.&ItQ\eS(%SdOVne@@E8G-c\`c?2.o<2Q5<rF$f=sMfE%OiB7F6]4@9&InpkK1R$nkK#,]Cdb/<asgi2DIfp8TQ10YVpXLOF6;9B2Su&`6`&M/.V;dPK2]cqVF]_<>K!]l;Ric49%&Zd4f8ml%Y,n!A<QAP[A1m3JE!@9W&VDAVA^cX0Qc4?fFbiQ)i/!%[-Pac)<bG/i6oeCDnR_"Godcjl#$]AFE*R_>:4aH4]j?PY4bETo9%dK(%R*mRQB.$S4=&[+0g?cHC<?ua2=#6u>cQ7g2Ukb\%g5/1Z65oNc/'YFk!Dau8p96;RY,[D)G<0Lqg#5PJD37,hP@E9I6^0Rb,-)nc%CSUSXV;K/c\oNY=XuW$f'S%)F8"qYdUc*'?)7]&:4!kC9NGHh\\#epp`ekBB!\<fNm:rQY-hWo`bWS'A&LBCq7iYP:FE>HC8s@8B%R_Mq'e31n9,2'Q.77L%nm_O)]8__)1ZdQF[N^!t+8r"WQ*&hRT&EN#\E7uc'>n5DUL>J]\.MC9YR[9j[WXiS"]7\c^P1uB9ho2(I%PNI3[C7SF%p3HV=`;@8;;'b=K(DEnRrZ9U/OlG7mbk[]]&UBiq'j-1J]:>P+SLr"tb4X@6l/bBpGOUBl^u+7=Y%?QU,2eO(8329o%AgQ%=Q]91ODtaBQd7Ne-;)0@)?6f*,n4.,q?`Iif9%d*R9m-G0WkQ%(`iRO,dAG)F<5jKG7rSX<c3O$h?F*K:e=qYR,N10ao,Q1\%b9^\mB7?@'Pc:A[T&,4N4nO2]E9A!YR\rEOj`#!8<6;30R[X\s#+dC[Db!!HM09A/^9lk7aPe.,`WdlP]W[4L#8P98;MIAqm^p%]%%b9d8_/_KjjRG@&!]#C9*Ec>!`jp\0dYWQ?d2Prb$)9q1F5`:Ng#*7n<mFN:Dk`gbKLO;QJS)E,LB'4/3-TROett5FUIEo'.VQSL%Td>/p)T<QOPEZ*5Y$&Gm-u)uI$P;5t@/iZ>AE)SQYY+_2_Q[`a!0t_L:c$QDf,$L2`hUZAJhE)&"mon(Ij!?d\a6XE5pR]WK-!<j%biWSfOQp4`K(0tKgn!.@(s6\nKM.Ma2degM]#O-UU."m_Zo_,4EV`1_N<+W:a(E+c59_[7`ddbT,1&`S\&?Xm+CD%lTI7(^"+V0S%O"/%-4T`lY:oVQKQL7JmL0GO7W$XlRRA)A)m5H0^0h-AuPdH:XM,Vk\H*hY_Nm0fR*3EFG\>;07id/#]Be?gk<MDh1GIX+A/=pZ0%(En%%aCn=;5M4uEoEU+)[F;l6/Pr?OWZP)Jj'nT`QNnaS=PVC(dR@Je#=7OH$@i%EWOSmkT@*5ZHW[?fOhPlXM\I\)C=(cO('g`1%ZKu%9#^kcH6"S`gmrA4gE-hZu9f:)8#6C%R)rO]+QI5)r0em,d\(8gG3s:q^OAO#gU9uN%NBef'!/],a]o!p+a;-`o-\4=`@]R>&%lt;DM'WiqcaL&QJXZ6D5Y)A4pF$S`QFdk7q-GA2kMqou;"L\"W/?S9$^Vf2>ch-0/d913/Z#cr!DIU9JL@c*p+f9EJ/(G2e/;NA9%qdC*HL<]c-F&LAVk]Rq<.Q%`Ke.A+r&HO`[P+^QI070$IBSY>ab7hlB1#,oA(\CpM?k*>*jh:KnA6ZBsU8M>lZ6tu&IWY?`1<uos%>UFf*5L-u8Fq8`1q1JRSrUupPliBfCI&Q84f=a,];Ssi^*\rQdE(Tf?8P]O3Urr-N!]QXNU"^92(0-31;:##ZFNGT,\`/Z&"#sHR%8np>/s+_sG`m6UsJ"h-DVtHb$Jodb^fB4&a)Y,N[&c:]R^gr9#@,4W/NKmLn33*,p6d>A8e2!#%m5E4*&>beg@i&F=Z0$@lG12c`%d<k@`!]^,_8mNUWq51V8J$X.sYGhHUQa@&oVUG5/S>t[#=bN9c<Jg.ZA;<:E6?),ub;8a_hs)IP^CpSOY;8N4JN"HV"6qp@Nhq+t%[-#AjNnL7aJ:C@U=#qTfI%T3YE\SV675=jt0,Q&Sc2ge?7%8._-^Y,S4e\-c=**?`Rns\#":Mb11$C?&K4:][2[M`<l.jut6]Ue;%5kOI`CON^2qiE!lJYln._`lZ>Et/0pBE4E-_YHBDVTWl?I1C_'2*<``/iGKdW$Nu9Y&A)/:QJu>#LHL9*P".a^:K!il+(NdP!KK=%@BpPW5N-ODdGaP>pWtm;rIuo.E#NgO&FKT"eZVB-OjBSmf.Nb1eMY13#AF7[,(B\_fm,RA#!dP;.XsU;.<n8hh'P1jo0.E+f%#ke%$fG\Q&"sPkm1Sk5[8;YP@8;6L(t!,jFIpoZBVceLr-u0h(QRa/I^e-p=<H[P]$9tk\D&'UkUXuoDLZ<5++GG.SW2j0!fDaEF>QG8%YOEX&f3_VC`mh6onSRLGe"<2r['D@c[*tJK!kNo`2X65cON'Z\>1Go/Q[I1Qi&Pq%2)sa]0Jh"\fVp8I]Ar+;kCi`\+@!FGEiRp(%DG4f(5?-+0Y@4R<p%Ifh"p^o`P_[M(hO"2;#f.t=UFRU.d^hX-WLNN`]e#E_FHA29cf)-P1b6S$.np!`CK3-)HSd%g@2]u\!J'qq%]>^,[PX(:Aa(lC;jH$)k8XBR:O?C+)MSBMSf!rojDfW]\6"&u83kZD"JqJ9!Q%GLt1A93p@?Qej01fHtqmApl90]35AXAAB_-M2>%b-ski5Q8)`E]U6-$NdTuIdR_<'#K)YKof[/N#tnki5aDnI4TK&`o'FDT0uJgKP9o-L@5\g@4;:+lK1s<'S\b(`<lEHA^/!#@\O',%!nkM^W"D7'q#aus8s/IHLC?LH8Y#X>K4d;uMBRc]S>dd[+E6p[>C9;QF,H`MJ9XVM4]NM%76HBk`H&Kc,_27h6u$tDqNU:-#)c/Y%!/Tn?(g[]JjOZCMA'(B**!^je5J&j'\d%q(pnJU'hS<*F]+faC7UU4)nJ+J%VPp89[M[W38!s;PUgWAE%r\!pN`iV4!J7-/8"cI#%/;kDE1f13EV!Nf1.JJpm_kCim,uKeD!PfP<ZjX<[4ITa!4Q15WLdi!6q@ZVhi<i,E9p=Uq^ob512sZO+K&0fm<nmt22$YJ<E\PaF%755087I/FcGp?6<NLC_D4[#+k=tahe:EYo4JL]-IS`pl#@SKK>Q7pXWZA?t!Yp_:lT_@8Z^'eI&V1WEI.tuuVa,d*IUoZ+2kMgRD%+iIn8]KlY.$?1LX*qbO`<K%L@85lPr#gs8JFTo/j$"U_lQ.h:oMM<%"`bI:rPR#`/'nAs/0Th0hNg80FJVb<f^+j?8[uTHcc9;>c%DG2DhYA)eme$8sr^QnN8)=jdWADMmSi`N0V4F+N3:g9<gJqkTD)[GQfgH$..VtfX<5BLl@=KadV!=V37g$:Wif_4C)f(]cR6"&-G%lT$p'=]8//LX2,*DjI22[Er3(qKqmTVtK7u#_;uB7D$fi6Roe=+=`rEM!bGUrL.^8J>;u)<&=&f3uWkPO5rh3e#QTJjUnML$#&uW%3n_%O#<f!-n&(<rmmb=[d@t1k]JjC$!CZL"oTc_pRT/Jb;;q#6<OelnW6`\ic@\5QR?`$a"7<DNG<(M>-SiEojmIL&:sQk]a_EJQ%j#W\^$%R:3PgX"s^#GedOk]dX6t[egm`<RH!H'#Nc0/]JQPp+m7Ihu4IMR3uN[h.QmnGRuUFKPBhhbpUJ@LSW;p5;nM[I6V:h4gY%i#KO-34'kt4,?BO`!;sln)<(T:>el\r0C#BP*D>4lRH3R3?`]H%7pWi(l*<<Cs_KegLl#c:ctGY(N3n3-/J:eo?kpG+/#5LI+En7%1p9*mDl:E[cS<-+G.Ig"jc#2!a>"fUVs6pbQN?_uja!NXd[NI"4d3EQF\_tCS[=bl]Ir$aT(.DWUK$fGbj<6sK?Sk];.W]00Y8F@%VGG+)F."*hhD^<TY3@,t=6:HC'd&5T%pEbXXr5-k>c"287K3NO_osn:Y]O_J*.mAp3R%)L^ZjZ?benk=s,nph,CVEoj4"-j@qdh/%4h,Gi*0-%#7Jprr&NLjA33!nc@YL]#EGa0E"sbpO0UnYaer[R!7E1#s-Sr;Xj&:l"T%]qf++[@cl7bKRrcNK&$FL/bN!KnJ=`EQ2%gSrp-aR+AcS'=fQ9Q@CsK8X(H>O^A4Qf5Z.(n%,2#/ijbbHsA+&N7rW$7NV0Ae[DXR[moX;0k':\&mPB1D14\b4*PN[&UB4:+lSg%_\qB[C4cgR9dBdI4\'R.ebgZ.>WqE0W62D*SF?+Uf:6nJSHA)8=#`L,$%NVT!$"&kB@&N`nGR<,-:P(=!*^=3GdGBo"2&_*'P[;:%Ebpl3#2lHZ0Il$gf1aX8Xh2e:IJ/jK:Mc";Eg#!uV^%VoSPZ>,[F[:1,[)u[_gEq2Ct,1kA^0^`bU@mn@BQ'lV%un%?$M+r`CK^R%@SP(6LqR]')6)3@RUH<:l9e6'"Hnp9$+5mrnamE\<r+YHak@3n!;3^/rnn]k^TCcVblQG1)_REJf&UWrBdS!V\d,HaH115<C"Z,d%%&^7]Uu6&<a(.c*&O'mSBT'1//X&_I?^'8[dG$`.)p-r")G<:[/1(`28Ubmp:F/'X$(Y;G/dhQ=`?9]GqA.Y?&3f0c!qj#=J<#7)%G@/AlfYj]V,$(7PFWjKr[^iB26S&/bc/G</$;\D!lO7:(S=.Y_[`THg1r]K+T_c$;_]$]boj&R*n@28"2J>(eR&Hpo%qI7]SKCV-%)a*'[>[sf7r;(JF/HHk=_>o]F1%ks?Xtd!j-%,n\Z905cW6.D0>"s+E8=IlWP:,a2\0,8F:W'/@8]Mb.Z4B*7R,rF(C;\Tg8XgYO%!*C/sE-,gYKYqM28T,SDc<RqlPZTR*F$r9+CT,]:pnbr)G@4d(mPLnZ)W#QBf[?+a_e_u@T'da:>5*55RdcnH2uc<;.k1,b81"cd%T7Wml:E8bP..Kr\'#0SenOTEia,@CPM"<!1OqHR:D79rF5M<=[:AA1^cNoeT>=ZR_[?^tR,*WZteo7osZGVFOqh;-VT\Bs?2)hsB%1Ft`>6J,csX)OHABA&8A$'B&I*jL:#5C7bn>H#g'XCT;UT9d/4Zuki50EEIgm9<fgZDGR+D!LsDmplb*V&+o(hKns_CqXn7Dge2Y%b=@ksXh'_/_G@Bs=DV=G>@[G)UVDAna%$!*;c]JuIagFtGGl91]H7ilFtUk0gpce+_m@P?IMQ72q46T)iPS#T<8I=3/SjS!TqE/Y%:&'-U9h8Q9L2[<S9=OX$bp/+*IO3@Ln8-_^Kr,[L&\bEu(dl<(I9EUr7X2Ptc70U;4CTo-qrKV$4"HU0LJP%_:bMS"d,4+pOP2iI%SN+9+!8@,:n=emmYZHq:+`57@kTrX?/d48$-P8M\R%J)*,Q@+$nc?%aU7JGQra3Q]A?R>1i<L+JC8+uN1ZlS:$D<aOF^o4]bK!5r%ZV*M67q\G?4gf)FCbMHp\X82j?V,EhEu0Ds$+!d%h,3kb[ifl*h_K(3m0fidRI/6M9^SOnBPInmXCd;ur!bkL!*6LG?T@qdNUYJB%IK\b\L.<84a_o9GHemATbX!&q>?$g_L[VsZJA0h9qTZ9S(?uX3haZ7K%6,rk*Ep8B,0Imo!rt>F*2(*cgn#>f1"bW5VEbAfl]FLW%R,/I,Rhi\BV'/?""[J%i_=YHTp/rgs_j7_gKl1'jB/m?;0#%=A_`udiB29Zp>]]d$_d--k6oiWD@Y7'&MV%W%X1]4U<&iAAd\8;^%<*ecY?,q!&WBH;_Jg,<6(-W>-\_KJ1]T^7a9/C^("R-3e$e-&\N0os3NY5F\.2[m(>eZ$sL+UJ3,,iSp9V9t(3]O)g1.%0hGLN)g%?h+2r%]:Gf8I=eWlS'_KOSP`1H<8r8j)QQU"_gJ[>?@Gp#fu"!]]-8#KC%P-FG!M.T_M71$+N1ZmNYdX<iP,b8$\)+bd%C]?SE%N%M$QW83gZ_19^J;;&sYfrmsRA],`^7nhWGB<\*,o!o[V1.!Fpl@\)+lOo.;Ff,(NGmfU36YnPe6].Et.>&iht:-P.#T.uaP^)<X*3%@"]acdLh3_9-[de)T;$-#+Bq+*\>,HS&]ddSEf^23jCQ>On9.pPmJ<*(l,:kOp4ndkFGS].QiJ">*L&XD2%D"&?^_Q;F[Sm3E<&g%rKrVrSTqGdIRS9LM_:Zb^-X.)HDS,:<ns;(VW4O4kFF;$L(^Gt;J@QWcBN4aZeKO;?"/lZF;?7k:d@)1KS_iD')s3LB/Ldcks9,(%`]&\tr"b=9.-,IrInE,G.3LK&CnBqDO*%7I+K^m+eSm_#U<j$AC7,a5>2:&VQhj=ZS+HI^3i%-'3Cujq9ZKh`>gsF7%BZ,H96W-n%>Bt;4(LrB_me,mp^=H'rV]].WbI!(@&ccYE%soiD0+dqjC,f1_!65b<8%4]C3#4U+S4L\Gn23nJqh#iGMa%jFfNBVcmG)DHhYP=X%"*-o7+O^7.&!dDg@UND3F";MIO027CP:s>4Td3MI3Eddc3_^3J@P^bj`5FL117D5udWLVlSnD]aW2O+I38C>K)#CCYQ8nDt\qW#1%(#iujX,?ODl%l\k,K7!omoSC\TY.OMCsLu:X/['`:bIdi<9Ln=GaL0fasK=%WOL:D2q!bEq2q'2//_RF8fApTSoLRLgsLHrC`EOn%K]U^B\E4(W.G1l@*U@oYpJ!Dhbj)Q=AertPMuI6O!4M,Qg>Ni]kcRF%kX/Zm<Z1p84-(ij.@[l#oh6HYeIEibPNHqBo7]?;`/\nD%3c]ZpW%.?'#AZ5[./+"oBO?[t?Leof-5+-fYeAb=\Ir\#fJ=YB$J_]jl92fZVrETIHYZ$EWpeh'FK5N>&#Ls-!Lm>$ClL<Ie^oE(%%uXXtB'>E%p`]*a$^fjTP4L!R1l+#,7XsLRiNNHPET^h3%uZX;e,,;us/egZ]/K:+6+71[IcuQ&%h=>+5Mh;/=E/kb2Y;BIUX4`t%A^D^d\<d-6]gTIRd')NiM4]4/2(R6M:qh+,G^lb(e',7RIO&Tg.IG1D4([L)k<%XF<^SIEL8\,/.Kq[t68(s--GA@+Drfti-)I;B%C7/PN)?&p^XmnI>Lb^f2d.mQk.M%(T9&?dbeAtD,K)r3CS6KasCXcm*h'E)L&q>!l+j.W5g$:8gMT,:Q$rFT]1i^bYDqsI741TT>%-R?kBgJm^MTgN'V^W<j(\cP:%SVAY%.>F4'L-kDJ,lq:V2A3p1T)dKhm7O5@@O)b\/2)2XAJ%#D(aTR;j_rZsOShh).7u^:(]M:p%pX:G=iXNDA\L%=i24.Q^EspK2N'tuEb2]6[;5-[nQO$CoXb`%jlJ6P9Vjj#1[G&P%7QYd.^n2tLDmb4!hA)O:5'LK5;tV+:Lj#,G%4k?FUJr3-;E]$PFjfB_D6dFOn+n><9%GfHPI_DDpP+^-)^8:o0g$p,@4/q-^ZXP4/W>=2;%sN")h*S9-=0C'<Q=rP<@U/_tdi!2)%ab;JDpU:="SE81dEM0l5:@n's%^C6XgOK7shu;MOkIdoGYXRcNJ,L_VAr"BTI64X*IglgBgTX\SN[Nn`g%YI"L7hsB%fONekbT?>%A`"Jn"NWh^"<A&)I-7^R*]E^:@rOSQ@Mb&1mZOcXrS)+%b/Q-DU5!Z7,Zc_.boZ7=r(c.aD=$m9qj"F<E`q1ugA3fqo7T,?c5/8*%oD)CI<c;se$>Ep[7bq]D:,;"jq#TT&?J$1lYiW=NY"*#Hcgq;nJ!;7t>V.MOl+Jli5@`re[l8W)k:=\dejqD,l0cqO,gCC<XG&ar%?8\$a#Ck%*\=sQZr3G/IH1uu"VOMiqp/U/iX+.,C/al[*%Z"k+I;?Bj"8e4cVSjX:la6Zk?ju@2SKBeO[jH-a[/Gs]r*i=)SaZd&%$\!HXU9+Bc0U`".8t%GtV*1m,jOEKY-VDo<C%lGfe&Bu*WW@gckCpC,ispgKKTX:<=g73eFO9S1j*?46H,Ju9ql2)_%Jj5c:B][!%Ue?A;O9.SF-iUllY&.1Aj+r0#r.A;YG/1?Z^@u+]*!ct`5eqY$i^DFM3HC3U6N00TlF(H")858cp$V'[F`mAW.`6.]9u"-S@L^94%&Z8r;d"]-bKmW%,f3OKq2s,Q=<Aj7TC)78*6>YFaT$2oOen4.jPgUb^'U\\k!`<0,Z'V>nRMrR8H+C-i/2\tYSG5M''4S`NntZ`#%Icg-IkXA&KY6ir7q]h2C*.#dB*_2Xh,1D?UcC8BlA>s<h'MoHL6AXRoL*VpU(iJs_Dq$&`O6@g;DqaLNOdO%,m]][_"uk";hECR.%&ua,jZ/tN*!aF)g`c,4LPs4!ODe9*Y66EcZdFPAkJYaVIR(f]E.@cL&*RjHc6g,$H&Ca[FSkrmcP$YaO2?"Y#[Ha9m<4(FI;a:!%%e&L:sR9@jo^$o^]opN'A^&Qn@loW?U>fgZ;=d,#ah[Pa]R+27_YnSh4F!SjpUo9CYh`8,JP-"P7ee5B/(,]1EaYLn30m%oTS?]6o%ITedW\^S@q*/MU/PjA*F14m-le@#T?`>q*!!Dt=_L>2g7@q06]Ld<oL()Xl"8sD2TYI(0*]+?)/+W)W`U;X'HXJe[^$TAH[J?<5a%T*V*?#rDj1P`i\sVaVIopK-[69f7l#9uWBi]97bK^C)F>%4(DSm;k.R_&+d\e'*gR);XE;&gI.-oK0s6N=c?4GgJNSJ@a_tB`#6=%gGMI1>Pa-b0o`f8mW3*,.l%%^,oDH,oK6pqOXt8LWu<o'a:S2]W>auUFVchpI^kn%&YmsjQOLJhfj>q7_+'YPS().S'S]2+=/Ub]%3`<N*-l/s\kI;;):'[$54CYHQ7HL4JJQY#-ZT?o*a%fO_Lf'u^J*u1-K(3&b"CGea>$Q!SXDl&P``5iND'2gL!__f80it:3CYULH%JZ-_d>:`UNe&*hF;.eGa2maJIThYiWa#UA;3M,9nWH[1Hk+lu<nc\MqX9)%)H<AgQVc`d2$ZD[#EF/)1(G/cb+,nbTP/c1[UeVSE%Fa@.8C5R?0o2oXJ>28>N;lQdc*S'CnR7cadpamh8RMaT>n.,kK\g,^$bN^pn+4]V2/ZB\sRt"DR_iAQ^KLe'6+@E=E(65DNV*U>]%6Vp"Ad"ucUV5>QY@nd8,Q%mB.2r.HZY+4&7CPKK,;OaC[Zo`"`pJ"Tg=R]s!63o_l5(42>67]#!mLR6F9=S@R&qVR*Zsedd&ras^%R$n5R4UEI^HJdN.M/dV/APkL[@d2Y?7TeJWpsg(uQ:sribLQm7%22iIR$aagbKq#:1[c,4bS^>d0],W^/50Tmd?b28<91)T'88R(%&dpQDW`>*Kj:as--7YZF;8g-5;0`RG$Vt2+<%Dl>n^i_>;BiXA;_3>9f/QNi"Aru<`_)o84eEib3)P7''82aF+Ge!!p2km/(?fb.%:(W9I^=!<3!SU%-6&<Gc&l9Y4SQ_nuh"/puGK]gXBq3#'*Tmkt/1pj9r.LtMg(:JFQh(LbPOdr5"R5F65>KrlOL-/N9.(!"5=+c[%-S`0lChS:*:FCs/Hg1>/OdLbGT-+cgEh,u;@&'8g&7XFnLqZs"I"EJlOp4\PNQUY/NV]k*AYVjKk-AY/H-M]q6P*=Ig,u@&UY^?#%91&']+:4N=2MN>gQTcpH9giZB#qVBOe.cC0^R%DN>/aCrEn9lkIlKs:aAKPeo5i4uZUdpnPX:6h4!+)o6OZ7JYRF"EV03B0jqTn<%qFteJ_^t*[9+H`Fp7>q291;ppU:5Q/$ZuLM\>IaGhWrTQQkT^F)<QnkK"2;2>mS8?,Qr0R8RN,$/Jsbn2D&p0U;2S^VG0jF_>sZ`%S_WmoV/LS$\Wm:e=_`CY/Qik#N3*PB![FopR#+,t_o=7;-CV4n65O&]a/%tt79XGB#;>*iV8[HW#Z<8,f=\Qm%7%Gki;rb)>r1&O%R?FVa7$[2^Ug#,6nB'aB&>grP\[Mq6WI*K+p[0K80r.oS7M8Kp$s6`Ue9oLXV-#H)!Mro_p=^NbN,+\Vls]jId1V`^eMCnX$nP))%LoAqLE2,le=C&jqSkOdR9Np,"#YT_2159KsOE=bUk,(Gs'AOG.7R-gB6kMte_(C6?7]GU2Rg'u2-[WEmj;XNlM7I=s64<5'&;X@(%=,s.D[!m(W.4mD7[h)8d6tdJak,(H2*G=c>d1="$)r9(>K>J79#tljoe)3UnZ6\3&N-!I@n9@VEFjjaj4\UKt-U*QuNB%mL]E;PP%Wd.Y[0P"h>NtOio)@S/jK>JZfJrlE*\)kFfBGs!AAfAV'1c#97Bi''<p6_MM5pA,p&i7uZRp`*Zr.d'rh)'AnbVTS-i,/d]Qj1MN%k:m.Y1e<:s6"4^M'Ge<ZE,P<#a\59(1_#&OTWWcN$4NSVj@)XnVEn[/)D&`FYgW]O61"MX3iSSQ0k@o\Q"h5UgP\7d\nNiCDAje_%VEt-T)_jiWK:#+;-UZ?j0^t6>:a.RH@uZo]U"HuY;:Anq8_+Godia\0@_jDA1`1?_dpU2N1s!?ue)8.CJu$rkp:<8(%b]Q5n*;"[%p?:Mg2.<o)3fpSC#HT$jGtC%=*5Y^Gm48p6W<<&ma0$;\Ie6^p(m`q:&PM"6:Wq?p*N6h5(0Y:VA9ok_BPemJeH'-imu[/#V""jD%HD4^:\'M:Y+ZF<WK*)W^P%/&r!+l@r7uD4n[A*I$]Z;aDS$6D9N2K$]E"s9/!<6$*M[I>S&43:'f8Oj3T7)pWQ-t4cmI6`B[10P1%8>G7ng6!1S")S\fS1#,QVeP;DK\3fq2;m-Sa]apUboo8b9t4f<h%T*t)`bJW?8Nm63?SnbWKl:TlF(El[_V<Of8(GR;aRAIpB`qR%2Stn.^GX<$pcV.84$-Wb;UKNcl*5_XY;md?C?g(PLL*K2BuIWlfo:[pg#?=Zm,jJT;MXECoSN^+IOD5_FX66<N\@rJE0skbCSFNS%(!ZH0hY&P.JK=^j;e:ctqn3=oU3Wc%"/C#QX@-lSr$U\@7koIUE9DbMJ^4q)9+9KDNa3<QE:jJk&'V^;SmhHLl1m(D]1F+<G4aQ&%\<9ql<CtJ^66qA^P&18)]+IJ291CNC\CLYjO0'Vc[erE>/To^GP%`K,_),jk"_1ab/VeWA+d"jV5K\Q>ohORSf<MmM1$k@6ODO-i%5)qeFq!Gdp/ICbjR*qFt-$M`i_>uATQQt&Eg+Sd+[ZF][&:#nB,=6+/\qO7;Z"SGeK4q&@r7!=a.a,lBqhNTeF@gJAK@^H@BPp\g%bbLaA;<O4TUDOo1q30OU\UuU0c#t"?9XjMRo5Fl!L/jC!orhcf>=fY(AuMcXo%=X<Jk]Gd+=[aTXBNAM/7+oa6Y65+dj3HIE'DdR%Jmt2dkeN!YGfs2f[r$)%/=h&ddOCP7RLR.HjW@4Cq5'q'cPooKW3QP\^6U8!0/.APE-e+;NLsWb>mtWhZUbI8m@G?$.D6^W3^5X!%6l^>0@B&@f'r.Wkm.W\KLnu6t3GZn4'oWNOh`eq/We+!f/iHMGF@qkOeDP'A3t;hH!JOMEnF9(K?:YBL]*sqPEu6b>L.us2b)!bo%c,7CF88<C^:9DdX,Wha]0/]'#P_V5YRPJ=TV*MW*4L#sV:=?>"%[5W-V:][hktU'"bQD-m,an<TR+eY_]1MtDfFQYY8'KRr1CIG1%89CpK3's<Z-d7fW<pkhtR\1/4<4RRZ7j?LGKS=^]Y1Bl$iV3iA[pY0fOm9R#n10bd>-\K6a(fCHKZ[!t9?rJgCU69qXdDuMhHHbJ%pbGO\c\;0K-*f4[]-ou9+9TQ_:gX"(4IqYO#F(Q$N0@']-etH)P6qUkLdl;nWTb+>$ON#YTe%+Yb!_8#M,+=D"!8Z=3S_VN\&rV\%r4FQ[_h6E/EqgrNb$!^'YD]6o)d(`giamqYfm*3]LoCNsOW&N"!`>^.oKm,p2=jsn7/Lelm2K2J]-mg4@dPIPf:]PoPhEKJWs$$]%X<H6NXMO^I2O"##dR]&N/0)En&EQW#U?!^;1EA(/g`qH],^N2;;O]=?K:6Eu1UbLWr:*H4YM3s4TTPeG\^q3TB\W2BOm?UGCk:nr%L;g%_]M"FMG&R3>%+4LBLF>e1:XE]n0G6-mP033PTVObf!SnUF?$=5t"H+t=8V0P3gm+ZR&Cj`IJd"II7Yh\9=<lee/?dD'9?g'8%(/7M$L_us'a<Bl:?bt1"j,LFW#n=n=a_47)Z3FMP#UL=m7=%d<]=f?r,UD8I8QY3'[%qOC]LY[I:VE)tQ6$8,Xh5eWd6t!]]HN6i%oBGZ4L(G1iW4aA01%grX;(G>2HFh.WAQd[77N58PCaq:n6?1bM9@HUGf7R=sDKL$AXpIb\IX&Mm&GKR6SV2>nWtb:=lW:VRd*0Pg%Aq&"W$>Olp=MnSO"ug2V4+%W!IiCfu%610OD<=a8UAW$5Sd98``8#)>28ru:^R's#`#)a+c_V+qHgF3r#GS3o-jP(ZJ#=9:>GXr`%DU`b2YS);3>h13a;d2YSk>Qc_>,cC:@I#U^3ft<0oS9u5=!!Z65tr_M(c>Uo79_g5A;"\\+&L>iQ9o?CU74lVksSQKdi[9dlNaPM%AAiq6H<%\4j>9W`X0u4F]=;1`[9(T&=Hc05'TR.)B1Ukr"ArgA6f%L5l=lT2\_8P+_X`;&2.8$._@f3`$r4.Z2BHo).G[BtU9R7O%j@\VER[>s]1Eh4Z%1F8/8QfePXhd%]/J**:h+F9m/Rd7inZpTC]eDRfd^S`8cVn:P+UP$iQ68'5FrL?l)*Ta7:k+^i'</Yk.C+tD%UjI:o/rFZK7gr1gVYJsgJP-"0VoE2DCV7\E*:SnK2>*ECeFcph@2XJuNQV%Kc2JgZXc2Hq$&>d=7Z*ZLHI?Q>>8_?H@ZNsW[TS]B%W$rt&l\P<fM=pX<MSI1.(>BP"U>9/)S%d!mlb5qJG\5B)lI+:\XKC".8FW=Ti)m(hKN24_K\?bVC+I7#r/\uf8#VQPS(^J?7]9*$%#;Ks?XdU3m;iKVjf7LrjbM!:u??'_>Q2pH1'dIf(6>\$QF9#g>b/ag,h(@/\*5EPC*l&:b+q(`e%nE(eJu@_tHnd5pOte;`/5%$'%',:d#M@_.m=<lKd/!&X<*^)AT<#KR*jBrY]UqgbKF.>J4dNib&+.!X@,X?@m/NM#iP-#1H'1Ijp-*b?IK9GBN75e+7,["FmFiYB\%JaIe^/("`5l%Ho?A9Z<ATsPsEM[`P.s-an$=?ubr+^c:WD`1!kBhY(=pCp9XH8MKUc?35q/@M>nDk!j<K]>aB&'eQjD)9IFoa%4a%oi:1J-JbnD(.fuJ'i-[uRW:DFH$Ru*JI13WC!)"'N=$km6sb\/>24`p2Cc0X2sS;He;``'90V(P+Zmhi^-E9']>T=Mk*=fQh*8%6%B$ioTdK<&kh6GbaC;D@Pe'7RYkc$@)pp-9kk\9QDKI>`2#Pcc=(=\COo-k8B&j?=jc(][1=P!h#pd)<$eE1k+_p_U)!qO0Fn]t@\%SK00s&[c.;T.Z@8U/2a[:a%)b9T7Qb;*JKsn5d0)dlVB_3*M,*=6;W)f&j[m0j;^I=_Y5EiFigTfh>aULq12-S.0a3NXJUDN7'Qh%OV0R%)pmh&rk-i>/:oG:C$2$,2]qT72sg6Ki>X'E2j9,D2Gg<+=>\&NIpVq`7l2u?KWZ,JCM84Rr6+EfkK=C&c^2CPNd'B.qsGOj%>eXF*<#0P-C[UM"n&NG_YEs2,r9_,R?*8[e]`7r&`fK#,ro`t7s#tl,m^p[>pOE/:e#0s1q=q/JV_=C/If9&6:[^JrrqsrX++O1[%n,*-tqru;%?[qt7bGTR!rqsrhJ_WK[ipYcSs-GrVrXU;J5&U~>%AI9_PrivateDataEnd